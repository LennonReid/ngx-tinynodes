var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/BasePlugin.html",[0,0.076,1,1.342]],["body/interfaces/BasePlugin.html",[0,0.135,1,2.12,2,0.803,3,0.297,4,0.297,5,0.258,6,0.147,7,1.977,8,0.472,9,3.311,10,3.311,11,2.339,12,3.151,13,2.094,14,2.95,15,1.732,16,1.081,17,3.595,18,0.426,19,1.081,20,4.005,21,0.769,22,0.031,23,2.421,24,3.311,25,0.997,26,1.798,27,0.681,28,2.12,29,1.1,30,0.505,31,1.512,32,0.997,33,0.951,34,1.798,35,2.035,36,1.646,37,1.732,38,2.191,39,1.798,40,2.191,41,0.015,42,0.021,43,0.015]],["title/interfaces/Block.html",[0,0.076,44,0.501]],["body/interfaces/Block.html",[0,0.148,2,0.703,3,0.26,4,0.26,5,0.225,6,0.129,8,0.413,16,0.703,18,0.372,19,0.986,21,1.085,22,0.031,30,0.532,32,0.648,33,1.101,41,0.013,42,0.019,43,0.013,44,0.944,45,1.04,46,2.944,47,1.582,48,2.143,49,0.962,50,1.41,51,1.04,52,1.579,53,1.125,54,1.125,55,1.219,56,1.219,57,1.219,58,1.351,59,2.143,60,1.139,61,1.579,62,1.351,63,1.448,64,1.219,65,1.219,66,1.351,67,1.351,68,1.829,69,1.219,70,1.351,71,1.125]],["title/interfaces/EditorJSConfig.html",[0,0.076,72,1.904]],["body/interfaces/EditorJSConfig.html",[0,0.117,2,0.759,3,0.281,4,0.281,5,0.244,6,0.139,8,0.446,11,2.309,16,1.339,18,0.402,19,1.041,21,0.909,22,0.031,25,0.96,26,1.7,27,0.644,28,1.805,29,1.04,30,0.473,32,0.7,33,1.101,35,1.429,37,1.216,41,0.015,42,0.02,43,0.015,44,0.675,47,1.62,60,0.96,72,2.923,73,1.869,74,3.187,75,2.132,76,3.486,77,2.861,78,3.486,79,3.637,80,3.187,81,3.187,82,2.216,83,2.84,84,3.486,85,2.861,86,2.84,87,2.331,88,2.331,89,2.562,90,2.84,91,2.331,92,1.959,93,1.7,94,1.429,95,1.556,96,2.072]],["title/interfaces/Header.html",[0,0.076,63,0.907]],["body/interfaces/Header.html",[0,0.148,2,0.704,3,0.261,4,0.261,5,0.226,6,0.129,8,0.414,18,0.373,19,0.988,21,1.066,22,0.031,30,0.532,32,0.649,33,1.101,41,0.013,42,0.019,43,0.013,44,0.917,45,1.043,47,1.45,48,1.714,49,0.965,50,1.411,51,1.043,52,1.582,53,1.128,54,1.128,55,1.222,56,1.222,57,1.222,58,1.353,59,2.146,60,1.14,61,2.086,62,1.353,63,1.583,64,2.146,65,1.979,66,1.353,67,1.353,68,1.831,69,1.222,70,1.353,71,1.128]],["title/interfaces/HeaderBlock.html",[0,0.076,67,1.059]],["body/interfaces/HeaderBlock.html",[0,0.148,2,0.722,3,0.267,4,0.267,5,0.231,6,0.132,8,0.424,18,0.382,19,1.005,21,1.07,22,0.031,30,0.535,32,0.665,33,1.059,41,0.014,42,0.019,43,0.014,44,0.937,45,1.068,47,1.355,48,1.743,49,0.988,50,1.424,51,1.068,52,1.609,53,1.156,54,1.156,55,1.252,56,1.252,57,1.252,58,1.376,59,2.28,60,1.153,61,1.609,62,1.376,63,1.541,64,1.252,65,1.252,66,1.583,67,1.583,68,1.851,69,1.252,70,1.376,71,1.156]],["title/interfaces/Image.html",[0,0.076,68,1.145]],["body/interfaces/Image.html",[0,0.148,2,0.708,3,0.262,4,0.262,5,0.227,6,0.181,8,0.416,18,0.375,19,0.991,21,1.049,22,0.031,30,0.533,32,0.914,33,1.12,41,0.014,42,0.019,43,0.014,44,0.919,45,1.048,47,1.453,48,1.719,49,0.969,50,1.414,51,1.048,52,1.587,53,1.133,54,1.133,55,1.228,56,1.228,57,1.228,58,1.358,59,2.15,60,1.143,61,1.587,62,1.358,63,1.453,64,1.228,65,1.228,66,1.358,67,1.358,68,2.002,69,2.15,70,1.358,71,1.133,97,1.931,98,0.969,99,2.965]],["title/interfaces/ImageBlock.html",[0,0.076,70,1.059]],["body/interfaces/ImageBlock.html",[0,0.148,2,0.722,3,0.267,4,0.267,5,0.231,6,0.132,8,0.424,18,0.382,19,1.005,21,1.07,22,0.031,30,0.535,32,0.665,33,1.059,41,0.014,42,0.019,43,0.014,44,0.937,45,1.068,47,1.355,48,1.743,49,0.988,50,1.424,51,1.068,52,1.609,53,1.156,54,1.156,55,1.252,56,1.252,57,1.252,58,1.376,59,2.28,60,1.153,61,1.609,62,1.376,63,1.465,64,1.252,65,1.252,66,1.583,67,1.376,68,1.946,69,1.252,70,1.583,71,1.156]],["title/interfaces/List.html",[0,0.076,50,0.838]],["body/interfaces/List.html",[0,0.149,2,0.704,3,0.261,4,0.261,5,0.226,6,0.129,8,0.414,18,0.373,19,0.988,21,1.066,22,0.031,30,0.532,32,0.649,33,1.051,41,0.013,42,0.019,43,0.013,44,0.917,45,1.043,47,1.337,48,2.146,49,0.965,50,1.502,51,1.043,52,1.981,53,1.128,54,1.128,55,2.146,56,2.146,57,1.222,58,1.353,59,2.146,60,1.14,61,1.582,62,1.353,63,1.45,64,1.222,65,1.222,66,1.353,67,1.353,68,1.831,69,1.222,70,1.353,71,1.128]],["title/interfaces/ListBlock.html",[0,0.076,58,1.059]],["body/interfaces/ListBlock.html",[0,0.149,2,0.718,3,0.266,4,0.266,5,0.23,6,0.131,8,0.422,18,0.381,19,1.002,21,1.07,22,0.031,30,0.535,32,0.662,33,1.057,41,0.014,42,0.019,43,0.014,44,0.948,45,1.063,47,1.352,48,1.737,49,0.983,50,1.472,51,1.063,52,1.604,53,1.15,54,1.15,55,1.246,56,1.246,57,1.737,58,1.579,59,2.276,60,1.15,61,1.604,62,1.372,63,1.462,64,1.246,65,1.246,66,1.372,67,1.372,68,1.847,69,1.246,70,1.372,71,1.15]],["title/components/NgxEditorJSComponent.html",[100,1.904,101,1.904]],["body/components/NgxEditorJSComponent.html",[0,0.082,3,0.205,4,0.205,5,0.178,6,0.227,8,0.487,11,1.593,16,1.184,17,2.041,18,0.293,19,0.829,21,0.842,22,0.03,25,1.018,27,0.469,30,0.205,33,0.645,41,0.011,42,0.016,43,0.011,44,0.645,49,1.136,51,0.819,61,0.886,66,1.621,75,1.699,77,2.227,82,1.438,85,1.857,87,1.857,88,1.857,89,2.719,90,2.263,92,2.08,98,1.621,100,3.334,101,2.719,102,2.54,103,2.318,104,4.167,105,2.318,106,4.36,107,1.942,108,3.474,109,2.54,110,2.041,111,3.474,112,3.474,113,3.878,114,2.911,115,1.942,116,3.878,117,2.448,118,3.474,119,4.167,120,3.474,121,3.474,122,2.776,123,2.637,124,3.046,125,3.396,126,2.911,127,1.362,128,2.318,129,2.425,130,3.474,131,1.362,132,2.54,133,2.318,134,2.474,135,2.318,136,3.474,137,2.318,138,3.474,139,3.474,140,2.227,141,2.318,142,3.491,143,2.318,144,1.942,145,1.942,146,1.695,147,1.695,148,0.819,149,1.695,150,2.318,151,2.318,152,3.474,153,2.911,154,3.474,155,3.474,156,3.474,157,2.318,158,2.318,159,2.318,160,2.318,161,2.318,162,2.318,163,2.318,164,1.239,165,2.911,166,4.628,167,2.318,168,1.942,169,1.942,170,2.318]],["title/interfaces/NgxEditorJSConfig.html",[0,0.076,94,1.456]],["body/interfaces/NgxEditorJSConfig.html",[0,0.125,2,0.87,3,0.322,4,0.322,5,0.279,6,0.159,11,1.826,16,1.438,18,0.461,19,1.141,21,0.619,22,0.031,25,1.051,26,1.949,27,0.738,28,1.978,29,1.192,30,0.5,32,0.802,33,0.99,35,1.638,37,1.394,41,0.017,42,0.022,43,0.017,44,0.564,47,1.337,60,0.802,72,3.323,73,2.142,74,2.665,75,1.783,76,2.374,77,1.949,78,2.374,79,2.665,80,2.665,81,2.665,82,1.978,83,2.374,84,3.111,85,2.554,86,2.374,87,1.949,88,1.949,89,2.142,90,2.374,91,1.949,92,1.638,93,1.949,94,2.147,95,1.783,96,2.374]],["title/directives/NgxEditorJSDirective.html",[134,1.732,140,1.732]],["body/directives/NgxEditorJSDirective.html",[3,0.204,4,0.204,5,0.177,6,0.248,8,0.324,11,1.324,13,1.324,15,1.324,16,1.354,18,0.292,19,0.827,21,0.785,22,0.031,25,1.017,27,0.468,29,0.755,30,0.204,41,0.011,42,0.016,43,0.011,44,0.643,66,1.618,75,2.542,82,0.956,87,1.852,88,1.852,89,2.714,92,1.557,98,1.812,102,2.533,113,2.903,114,2.903,115,1.935,116,2.903,117,2.035,122,2.033,123,2.224,124,3.377,125,2.443,126,2.903,127,1.357,129,2.542,131,2.035,134,1.852,140,2.778,142,2.903,146,1.688,147,1.688,148,0.816,165,2.903,168,1.935,169,2.903,171,4.75,172,1.935,173,3.465,174,2.035,175,3.465,176,4.62,177,2.533,178,3.465,179,2.533,180,3.465,181,2.903,182,3.465,183,2.256,184,4.158,185,4.158,186,4.158,187,4.95,188,4.62,189,3.465,190,4.62,191,2.903,192,2.31,193,4.62,194,3.465,195,3.465,196,1.357,197,2.035,198,2.533,199,2.31,200,2.076,201,3.377,202,3.465,203,4.62,204,2.31,205,2.31,206,2.31,207,2.31,208,1.935,209,2.31,210,2.31,211,2.31,212,2.31,213,2.31,214,2.31,215,2.31,216,2.31,217,2.31,218,2.31,219,2.31,220,2.31,221,2.31]],["title/modules/NgxEditorJSModule.html",[222,1.239,223,2.11]],["body/modules/NgxEditorJSModule.html",[3,0.169,4,0.169,5,0.147,6,0.131,8,0.269,11,1.414,13,0.732,14,1.954,15,1.414,16,1.086,20,2.194,21,0.325,22,0.031,25,1.331,27,0.388,30,0.327,31,1.348,35,0.861,36,1.468,37,1.414,41,0.009,42,0.014,43,0.009,47,0.536,50,0.495,60,0.66,63,0.536,75,2.048,76,1.954,77,1.604,78,1.954,82,1.532,83,1.247,91,1.978,92,0.861,93,2.239,94,2.044,95,1.468,98,0.626,101,3.342,110,1.763,117,1.763,123,0.861,127,1.125,129,2.359,131,1.125,134,3.04,144,1.605,145,1.605,146,1.4,148,0.677,164,1.024,174,1.763,177,2.194,179,2.194,181,3.509,196,1.125,197,2.461,200,0.861,222,1.738,223,4.114,224,1.81,225,0.937,226,2.174,227,1.125,228,2.461,229,2.174,230,1.605,231,1.605,232,1.605,233,1.605,234,1.605,235,3.389,236,3.499,237,2.834,238,2.579,239,1.763,240,1.125,241,1.125,242,1.954,243,1.247,244,2.514,245,2.514,246,3.001,247,3.001,248,2.194,249,3.001,250,3.001,251,3.001,252,1.915,253,3.001,254,1.915,255,1.4,256,1.605,257,2.705,258,3.7,259,3.001,260,1.605,261,2.41,262,3.001,263,1.915,264,1.915,265,1.915,266,1.915,267,1.915,268,1.605,269,1.125,270,1.604,271,1.915,272,1.604,273,1.915,274,1.915,275,1.604,276,1.915,277,1.954,278,1.605,279,2.194,280,1.915,281,1.915,282,1.915,283,1.915,284,1.915,285,1.915,286,1.915,287,1.915,288,1.915,289,1.915,290,1.915]],["title/injectables/NgxEditorJSService.html",[129,1.585,291,1.145]],["body/injectables/NgxEditorJSService.html",[3,0.133,4,0.133,5,0.115,6,0.222,8,0.641,11,1.89,13,1.391,15,0.943,16,1.294,18,0.19,19,0.589,21,0.776,22,0.031,25,0.952,27,0.304,29,0.491,30,0.133,32,0.543,33,1.105,35,1.109,37,1.537,41,0.007,42,0.011,43,0.007,44,0.765,47,1.018,66,1.932,75,2.945,77,3.266,82,1.022,84,0.978,85,1.319,86,1.607,87,1.945,88,2.846,91,1.319,92,2.053,94,1.635,95,0.734,98,1.616,109,1.804,110,1.45,122,2.822,123,2.053,124,1.098,125,1.45,127,1.45,129,1.78,131,2.685,132,1.804,147,1.098,148,0.531,149,3.614,174,1.45,177,1.804,196,1.45,198,2.661,200,1.943,201,3.161,208,2.068,238,1.945,248,1.098,255,1.098,256,2.068,268,1.258,291,0.872,292,0.802,293,1.258,294,2.468,295,4.142,296,3.142,297,3.142,298,2.468,299,3.64,300,2.468,301,2.468,302,1.501,303,2.633,304,3.142,305,3.64,306,2.468,307,2.468,308,1.501,309,4.022,310,2.468,311,3.142,312,1.501,313,3.64,314,2.468,315,2.468,316,3.623,317,2.068,318,2.468,319,1.501,320,2.468,321,1.501,322,2.468,323,1.501,324,2.468,325,2.468,326,2.468,327,2.468,328,2.468,329,1.501,330,2.468,331,3.64,332,2.468,333,2.468,334,1.501,335,2.633,336,1.501,337,1.258,338,2.468,339,1.501,340,1.258,341,1.501,342,1.258,343,1.501,344,1.258,345,1.258,346,1.501,347,2.468,348,1.501,349,3.142,350,1.501,351,1.501,352,1.501,353,1.501,354,2.468,355,2.468,356,2.468,357,2.468,358,1.501,359,1.501,360,1.501,361,1.501,362,1.501,363,1.501,364,1.501,365,1.501,366,1.501,367,1.501,368,1.501,369,1.501,370,1.501]],["title/interfaces/NgxEditorJSTools.html",[0,0.076,93,1.732]],["body/interfaces/NgxEditorJSTools.html",[0,0.126,2,0.884,3,0.327,4,0.327,5,0.283,6,0.211,16,1.282,22,0.031,25,1.062,26,1.978,27,0.749,28,2.223,29,1.21,30,0.502,32,1.062,33,1.056,35,1.663,37,1.415,41,0.017,42,0.022,43,0.017,44,0.573,47,1.35,60,0.814,72,2.835,73,2.174,74,2.705,75,1.81,76,2.41,77,1.978,78,2.41,79,2.705,80,2.705,81,2.705,82,1.998,83,2.41,84,3.142,85,2.579,86,2.41,87,1.978,88,1.978,89,2.174,90,2.41,91,1.978,92,1.663,93,2.579,94,1.663,95,1.81,96,2.41,97,2.41,98,1.21,371,3.701]],["title/interfaces/Paragraph.html",[0,0.076,60,0.713]],["body/interfaces/Paragraph.html",[0,0.149,2,0.717,3,0.265,4,0.265,5,0.23,6,0.131,8,0.421,18,0.38,19,1,21,1.061,22,0.031,30,0.534,32,0.66,33,1.106,41,0.014,42,0.019,43,0.014,44,0.921,45,1.061,47,1.35,48,1.734,49,0.981,50,1.42,51,1.061,52,1.601,53,1.147,54,1.147,55,1.243,56,1.243,57,1.243,58,1.369,59,2.162,60,1.252,61,2.099,62,1.369,63,1.461,64,1.243,65,1.243,66,1.369,67,1.369,68,1.845,69,1.243,70,1.369,71,1.147]],["title/interfaces/ParagraphBlock.html",[0,0.076,62,1.059]],["body/interfaces/ParagraphBlock.html",[0,0.149,2,0.72,3,0.266,4,0.266,5,0.231,6,0.132,8,0.423,18,0.381,19,1.003,21,1.07,22,0.031,30,0.535,32,0.664,33,1.058,41,0.014,42,0.019,43,0.014,44,0.949,45,1.066,47,1.353,48,1.74,49,0.986,50,1.423,51,1.066,52,1.607,53,1.153,54,1.153,55,1.249,56,1.249,57,1.249,58,1.374,59,2.278,60,1.211,61,1.607,62,1.581,63,1.464,64,1.249,65,1.249,66,1.374,67,1.374,68,1.849,69,1.249,70,1.374,71,1.153]],["title/interfaces/PluginConfig.html",[0,0.076,31,1.456]],["body/interfaces/PluginConfig.html",[0,0.134,1,2.223,2,0.884,3,0.327,4,0.327,5,0.283,6,0.211,7,2.174,9,2.705,10,2.705,11,2.052,12,2.959,13,1.844,14,2.41,15,1.415,16,0.884,17,3.154,22,0.031,23,1.978,24,2.705,25,1.062,26,1.978,27,0.749,28,2.223,29,1.21,30,0.521,31,2.168,32,1.181,33,1.056,34,1.978,35,2.168,36,1.81,37,1.844,38,2.41,39,1.978,40,2.41,41,0.017,42,0.022,43,0.017,97,2.41,98,1.21,372,3.701]],["title/injectables/PluginHeader.html",[270,1.732,291,1.145]],["body/injectables/PluginHeader.html",[1,2.071,3,0.346,4,0.346,5,0.3,6,0.219,8,0.549,12,3.147,13,1.912,15,2.108,16,1.194,18,0.495,22,0.03,23,2.674,25,1.279,27,0.792,28,2.283,29,1.279,30,0.346,41,0.018,42,0.023,43,0.018,63,1.4,98,1.279,122,2.696,148,1.948,183,2.549,200,2.477,269,2.3,270,2.674,291,1.768,292,2.092,373,3.279,374,3.914,375,3.279]],["title/modules/PluginHeaderModule.html",[222,1.239,235,1.904]],["body/modules/PluginHeaderModule.html",[3,0.361,4,0.361,5,0.313,6,0.178,8,0.573,22,0.03,25,1.131,27,0.827,30,0.361,41,0.019,42,0.023,43,0.019,44,0.795,63,1.438,123,2.309,148,1.443,164,2.183,197,3.019,222,2.15,224,1.997,225,1.997,226,2.399,227,2.399,228,3.304,229,2.399,235,3.648,239,3.019,240,2.399,241,2.399,261,3.347,270,3.318,376,3.422,377,3.422,378,4.084,379,3.757,380,4.084]],["title/injectables/PluginList.html",[272,1.732,291,1.145]],["body/injectables/PluginList.html",[1,2.071,3,0.346,4,0.346,5,0.3,6,0.219,8,0.549,12,3.147,13,1.912,15,2.108,16,1.194,18,0.495,22,0.03,23,2.674,25,1.279,27,0.792,28,2.283,29,1.279,30,0.346,41,0.018,42,0.023,43,0.018,50,1.294,98,1.279,122,2.696,148,1.948,183,2.549,200,2.477,269,2.3,272,2.674,291,1.768,292,2.092,381,3.279,382,3.914,383,3.279]],["title/modules/PluginListModule.html",[222,1.239,237,1.904]],["body/modules/PluginListModule.html",[3,0.361,4,0.361,5,0.313,6,0.178,8,0.573,22,0.03,25,1.131,27,0.827,30,0.361,41,0.019,42,0.023,43,0.019,44,0.795,50,1.329,123,2.309,148,1.443,164,2.183,197,3.019,222,2.15,224,1.997,225,1.997,226,2.399,227,2.399,228,3.304,229,2.399,237,3.648,239,3.019,240,2.399,241,2.399,261,3.347,272,3.318,379,3.757,384,3.422,385,3.422,386,4.084,387,4.084]],["title/interfaces/PluginMap.html",[0,0.076,34,1.732]],["body/interfaces/PluginMap.html",[0,0.134,1,1.998,2,0.884,3,0.327,4,0.327,5,0.283,6,0.211,7,2.174,9,2.705,10,2.705,11,2.052,12,2.959,13,1.844,14,2.41,15,1.415,16,0.884,17,3.154,22,0.031,23,1.978,24,2.705,25,1.062,26,1.978,27,0.749,28,2.355,29,1.21,30,0.521,31,1.663,32,1.181,33,1.056,34,2.579,35,2.168,36,1.81,37,1.844,38,2.41,39,1.978,40,2.41,41,0.017,42,0.022,43,0.017,97,2.41,98,1.21,388,3.701]],["title/injectables/PluginParagraph.html",[275,1.732,291,1.145]],["body/injectables/PluginParagraph.html",[1,2.071,3,0.346,4,0.346,5,0.3,6,0.219,8,0.549,12,3.147,13,1.912,15,2.108,16,1.194,18,0.495,22,0.03,23,2.674,25,1.279,27,0.792,28,2.283,29,1.279,30,0.346,41,0.018,42,0.023,43,0.018,60,1.101,98,1.279,122,2.696,148,1.948,183,2.549,200,2.477,269,2.3,275,2.674,291,1.768,292,2.092,389,3.279,390,3.914,391,3.279]],["title/modules/PluginParagraphModule.html",[222,1.239,236,1.904]],["body/modules/PluginParagraphModule.html",[3,0.361,4,0.361,5,0.313,6,0.178,8,0.573,22,0.03,25,1.131,27,0.827,30,0.361,41,0.019,42,0.023,43,0.019,44,0.795,60,1.131,123,2.309,148,1.443,164,2.183,197,3.019,222,2.15,224,1.997,225,1.997,226,2.399,227,2.399,228,3.304,229,2.399,236,3.648,239,3.019,240,2.399,241,2.399,261,3.347,275,3.318,379,3.757,392,3.422,393,3.422,394,4.084,395,4.084]],["title/injectables/PluginService.html",[238,1.732,291,1.145]],["body/injectables/PluginService.html",[1,1.686,3,0.161,4,0.161,5,0.139,6,0.224,8,0.502,11,2.019,12,2.7,13,1.102,15,1.557,16,0.689,17,1.07,18,0.23,19,0.689,21,0.802,22,0.031,25,0.635,27,0.369,30,0.161,31,2.481,32,0.788,33,1.043,34,1.914,36,2.171,39,2.524,41,0.008,42,0.013,43,0.008,49,0.943,82,1.686,85,1.542,91,1.542,92,2.481,98,1.617,110,2.393,122,2.787,123,1.296,125,1.695,127,1.695,131,2.608,148,1.439,149,3.616,174,1.695,191,2.417,196,1.695,200,2.374,201,2.618,222,1.102,238,1.542,248,1.331,255,2.108,269,1.07,291,1.019,292,0.973,295,3,303,4.891,316,4.706,317,2.417,335,2.417,337,1.526,342,1.526,344,3.413,345,2.417,396,1.526,397,2.884,398,4.722,399,4.073,400,2.884,401,3.581,402,4.073,403,2.884,404,4.073,405,1.821,406,2.884,407,4.073,408,4.073,409,2.884,410,2.884,411,2.884,412,2.884,413,2.884,414,4.947,415,1.821,416,2.884,417,1.821,418,2.884,419,2.884,420,1.821,421,2.884,422,1.821,423,2.884,424,2.884,425,1.821,426,1.821,427,2.884,428,2.884,429,1.821,430,1.821,431,1.821,432,1.821,433,1.821,434,4.073,435,1.821,436,1.821,437,1.821,438,1.821,439,1.821,440,1.821,441,1.821,442,4.073,443,2.884,444,2.884,445,1.821]],["title/coverage.html",[446,3.7]],["body/coverage.html",[0,0.148,1,1.137,5,0.21,6,0.287,7,3.12,20,2.875,21,0.466,22,0.03,31,1.233,34,1.467,36,1.343,37,1.049,39,1.467,41,0.013,42,0.018,43,0.013,44,0.425,45,2.094,50,0.71,58,0.897,60,0.604,62,0.897,63,0.768,67,0.897,68,0.97,70,0.897,72,1.613,73,2.948,93,1.467,94,1.233,95,1.343,100,1.613,101,1.613,106,2.3,107,2.3,129,1.343,134,1.467,140,1.467,153,4.768,171,2.3,172,2.3,238,1.467,242,2.992,243,2.992,257,2.007,270,1.467,272,1.467,275,1.467,277,1.788,279,2.007,291,1.877,293,2.3,373,2.3,381,2.3,389,2.3,396,2.3,446,2.3,447,2.745,448,2.745,449,2.745,450,2.745,451,2.745,452,2.745,453,6.013,454,5.926,455,5.018,456,4.595,457,2.745,458,2.745,459,2.745,460,4.595,461,4.595,462,5.526,463,5.526,464,2.745,465,2.745,466,2.745,467,2.745,468,2.745]],["title/dependencies.html",[225,1.905,469,2.71]],["body/dependencies.html",[22,0.031,27,0.855,29,1.381,41,0.019,42,0.024,43,0.019,117,2.482,225,2.066,260,3.54,278,3.54,340,3.54,375,3.54,383,3.54,391,3.54,470,4.225,471,6.416,472,4.225,473,4.225,474,5.25,475,4.398,476,4.225,477,4.225,478,4.225,479,4.225,480,4.225,481,4.225,482,4.225,483,4.225,484,4.225,485,4.225,486,4.225,487,4.225,488,4.225]],["title/miscellaneous/functions.html",[489,1.448,490,3.264]],["body/miscellaneous/functions.html",[6,0.21,18,0.608,22,0.028,31,2.16,41,0.022,42,0.026,43,0.022,200,2.16,242,3.13,243,3.934,277,3.934,279,4.416,489,2.569,490,4.027,491,4.756]],["title/index.html",[18,0.343,492,2.71,493,2.71]],["body/index.html",[16,1.295,22,0.025,41,0.02,42,0.025,43,0.02,100,2.618,102,3.258,109,3.965,110,2.618,117,2.618,125,2.618,132,3.258,140,2.382,174,2.618,179,3.965,198,3.258,244,3.734,245,3.734,494,4.456,495,5.424,496,4.456,497,4.456,498,4.456,499,4.456,500,4.456,501,4.456,502,4.456,503,4.456,504,5.848,505,4.456,506,4.456,507,4.456,508,4.456,509,4.456,510,4.456,511,4.456,512,4.456]],["title/modules.html",[224,2.16]],["body/modules.html",[22,0.026,41,0.022,42,0.026,43,0.022,223,3.106,224,2.332,235,2.802,236,2.802,237,2.802,475,5.215,513,6.225,514,6.225,515,6.225]],["title/overview.html",[516,3.7]],["body/overview.html",[2,0.815,22,0.03,41,0.016,42,0.021,43,0.016,100,2.004,101,3.549,129,2.522,134,3.228,140,1.824,164,1.824,222,1.304,223,4.302,224,1.669,225,1.669,226,2.004,227,2.004,228,2.004,229,2.004,230,2.858,231,2.858,232,2.858,233,2.858,234,2.858,235,3.653,236,3.722,237,3.375,238,2.756,239,2.686,240,2.004,241,2.004,270,2.756,272,2.756,275,2.756,292,1.824,376,2.858,377,2.858,384,2.858,385,2.858,392,2.858,393,2.858,516,2.858,517,3.412,518,4.572,519,3.412,520,3.412]],["title/miscellaneous/typealiases.html",[489,1.448,521,3.896]],["body/miscellaneous/typealiases.html",[6,0.202,18,0.585,21,0.785,22,0.03,33,0.859,41,0.021,42,0.025,43,0.021,44,0.715,45,1.634,49,1.512,50,1.196,51,1.634,52,2.12,53,1.768,54,1.768,58,1.512,62,1.512,67,1.512,70,1.512,71,2.12,489,2.472,522,4.625,523,5.547]],["title/miscellaneous/variables.html",[489,1.448,524,3.264]],["body/miscellaneous/variables.html",[6,0.253,7,2.562,18,0.552,21,0.741,22,0.029,36,2.618,37,2.214,38,2.84,39,2.861,40,2.84,41,0.02,42,0.024,43,0.02,73,2.562,82,2.501,94,1.959,95,2.618,96,2.84,196,3.549,242,2.84,243,3.486,257,3.913,277,2.84,489,2.331,491,3.654,524,3.654,525,5.353,526,4.361]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":518,"title":{},"body":{"overview.html":{}}}],["1.3.4",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":153,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":155,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["15",{"_index":520,"title":{},"body":{"overview.html":{}}}],["1em",{"_index":161,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.13.0",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":157,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3/3",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":517,"title":{},"body":{"overview.html":{}}}],["5",{"_index":519,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":505,"title":{},"body":{"index.html":{}}}],["7.1.5",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":138,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["accessors",{"_index":191,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/PluginService.html":{}}}],["actual_component",{"_index":170,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["add",{"_index":402,"title":{},"body":{"injectables/PluginService.html":{}}}],["add(name",{"_index":413,"title":{},"body":{"injectables/PluginService.html":{}}}],["adds",{"_index":315,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["afterviewinit",{"_index":186,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["aliases",{"_index":522,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":162,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["allow",{"_index":14,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["angular",{"_index":179,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["angular/animations",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":260,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":27,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":323,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["api](https://editorjs.io/api",{"_index":360,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":246,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["application",{"_index":110,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"index.html":{}}}],["array",{"_index":335,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["attach",{"_index":176,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["attributes",{"_index":111,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["autofocus",{"_index":76,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["autofocused",{"_index":80,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["available",{"_index":49,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{},"miscellaneous/typealiases.html":{}}}],["await",{"_index":365,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["base",{"_index":46,"title":{},"body":{"interfaces/Block.html":{}}}],["baseplugin",{"_index":1,"title":{"interfaces/BasePlugin.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"coverage.html":{}}}],["basic",{"_index":57,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["behaviorsubject",{"_index":339,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["block",{"_index":44,"title":{"interfaces/Block.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["blocks",{"_index":66,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["blocks(holder",{"_index":307,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["blocksmap",{"_index":296,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["blocktypes",{"_index":71,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["bootstrap",{"_index":227,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["border",{"_index":156,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["browse",{"_index":515,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":475,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["changelog",{"_index":508,"title":{},"body":{"index.html":{}}}],["changes",{"_index":205,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks",{"_index":215,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":218,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":216,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["class",{"_index":148,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":230,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":231,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":233,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_imports",{"_index":232,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":234,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":376,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":377,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":384,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":385,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":392,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":393,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["collection",{"_index":244,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["commonmodule",{"_index":259,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["component",{"_index":100,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component/editorjs.component",{"_index":264,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["component/editorjs.component.ts",{"_index":107,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["component/editorjs.component.ts:23",{"_index":137,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:29",{"_index":133,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:35",{"_index":130,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:42",{"_index":141,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component_template",{"_index":167,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["components",{"_index":102,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{}}}],["config",{"_index":91,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PluginService.html":{}}}],["config.editorjs.autofocus",{"_index":284,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.data",{"_index":290,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.holder",{"_index":286,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.initialblock",{"_index":288,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":74,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["configurations",{"_index":424,"title":{},"body":{"injectables/PluginService.html":{}}}],["const",{"_index":35,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["constructor",{"_index":127,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["constructor(config",{"_index":302,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":192,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(initialplugins",{"_index":405,"title":{},"body":{"injectables/PluginService.html":{}}}],["constructor(private",{"_index":212,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(public",{"_index":150,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["constructor(service",{"_index":128,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["containers/editorjs",{"_index":263,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["control",{"_index":177,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["core",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":446,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":113,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["createeditor",{"_index":298,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createeditor(holder",{"_index":310,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["creates",{"_index":314,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createtools",{"_index":279,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creation",{"_index":81,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["darkgray",{"_index":159,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":47,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["date.now",{"_index":355,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["declarations",{"_index":226,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["decorators",{"_index":135,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["default",{"_index":82,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PluginService.html":{},"miscellaneous/variables.html":{}}}],["default_config",{"_index":257,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_config.editorjs.autofocus",{"_index":285,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["default_config.editorjs.holder",{"_index":287,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["default_config.editorjs.initialblock",{"_index":289,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["defaultconfig",{"_index":277,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":98,"title":{},"body":{"interfaces/Image.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{}}}],["defines",{"_index":9,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["delete",{"_index":436,"title":{},"body":{"injectables/PluginService.html":{}}}],["demo",{"_index":509,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":225,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{}}}],["destroy",{"_index":299,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroy(holder",{"_index":318,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["details",{"_index":326,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["developed",{"_index":496,"title":{},"body":{"index.html":{}}}],["directive",{"_index":140,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":168,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["directives/ngx",{"_index":144,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["docs",{"_index":324,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["documentation",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":104,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["dynamic",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["editor",{"_index":123,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{}}}],["editorconfig",{"_index":338,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs",{"_index":16,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"index.html":{}}}],["editorjs(options",{"_index":359,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs.component.html",{"_index":121,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":119,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":145,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":172,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs.directive.ts:26",{"_index":194,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:28",{"_index":207,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:33",{"_index":209,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:37",{"_index":211,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:41",{"_index":204,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:47",{"_index":199,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:51",{"_index":206,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.module.ts",{"_index":243,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs.module.ts:63",{"_index":254,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":357,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/editorjs",{"_index":29,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"dependencies.html":{}}}],["editorjs/header",{"_index":375,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{}}}],["editorjs/list",{"_index":383,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/paragraph",{"_index":391,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":106,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":171,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs/src/lib/ngx",{"_index":242,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/plugins/header/header.module.ts",{"_index":378,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["editorjs/src/lib/plugins/header/header.plugin.ts",{"_index":373,"title":{},"body":{"injectables/PluginHeader.html":{},"coverage.html":{}}}],["editorjs/src/lib/plugins/header/header.plugin.ts:14",{"_index":374,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["editorjs/src/lib/plugins/list/list.module.ts",{"_index":386,"title":{},"body":{"modules/PluginListModule.html":{}}}],["editorjs/src/lib/plugins/list/list.plugin.ts",{"_index":381,"title":{},"body":{"injectables/PluginList.html":{},"coverage.html":{}}}],["editorjs/src/lib/plugins/list/list.plugin.ts:14",{"_index":382,"title":{},"body":{"injectables/PluginList.html":{}}}],["editorjs/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":394,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":389,"title":{},"body":{"injectables/PluginParagraph.html":{},"coverage.html":{}}}],["editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":390,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":293,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:102",{"_index":319,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:15",{"_index":336,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:16",{"_index":306,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:31",{"_index":312,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:58",{"_index":321,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:67",{"_index":334,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:83",{"_index":329,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:94",{"_index":308,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":396,"title":{},"body":{"injectables/PluginService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:15",{"_index":406,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:35",{"_index":415,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:43",{"_index":422,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:52",{"_index":417,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:59",{"_index":426,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:67",{"_index":420,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":45,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:62",{"_index":99,"title":{},"body":{"interfaces/Image.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":73,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/config.ts:4",{"_index":371,"title":{},"body":{"interfaces/NgxEditorJSTools.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":7,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:4",{"_index":372,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs/src/lib/types/plugins.ts:8",{"_index":388,"title":{},"body":{"interfaces/PluginMap.html":{}}}],["editorjs](http://editorjs.io",{"_index":280,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsconfig",{"_index":72,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{}}}],["editormap",{"_index":297,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorservice",{"_index":187,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["el",{"_index":195,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["element",{"_index":89,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["elementref",{"_index":193,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["example",{"_index":114,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["exclude",{"_index":344,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["exclude.includes(key",{"_index":440,"title":{},"body":{"injectables/PluginService.html":{}}}],["excludetools",{"_index":311,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["export",{"_index":30,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{}}}],["exports",{"_index":229,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["extends",{"_index":59,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["false",{"_index":83,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["feature",{"_index":249,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["features",{"_index":245,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"coverage.html":{}}}],["filter(([key",{"_index":439,"title":{},"body":{"injectables/PluginService.html":{}}}],["finaltools",{"_index":445,"title":{},"body":{"injectables/PluginService.html":{}}}],["folder",{"_index":510,"title":{},"body":{"index.html":{}}}],["foreach(([key",{"_index":432,"title":{},"body":{"injectables/PluginService.html":{}}}],["forroot",{"_index":252,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(tools",{"_index":253,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["function",{"_index":20,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{}}}],["functions",{"_index":490,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":511,"title":{},"body":{"index.html":{}}}],["get(name",{"_index":416,"title":{},"body":{"injectables/PluginService.html":{}}}],["geteditor",{"_index":208,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(holder",{"_index":320,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getplugins",{"_index":425,"title":{},"body":{"injectables/PluginService.html":{}}}],["gets",{"_index":330,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getservice",{"_index":210,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getting",{"_index":492,"title":{"index.html":{}},"body":{}}],["gettools",{"_index":403,"title":{},"body":{"injectables/PluginService.html":{}}}],["gettools(exclude",{"_index":419,"title":{},"body":{"injectables/PluginService.html":{}}}],["header",{"_index":63,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{}}}],["header.plugin",{"_index":380,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":67,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":154,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["hold",{"_index":90,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["holder",{"_index":77,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["host",{"_index":151,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["html",{"_index":165,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["https://tinynodes",{"_index":500,"title":{},"body":{"index.html":{}}}],["id",{"_index":88,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["identifier",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":68,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{}}}],["imageblock",{"_index":70,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["implements",{"_index":183,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{}}}],["imports",{"_index":250,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["include",{"_index":346,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["including",{"_index":506,"title":{},"body":{"index.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":97,"title":{},"body":{"interfaces/Image.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{}}}],["initial",{"_index":85,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PluginService.html":{}}}],["initialblock",{"_index":78,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["initialized",{"_index":407,"title":{},"body":{"injectables/PluginService.html":{}}}],["initialplugins",{"_index":36,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":337,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["inject(initialplugins",{"_index":429,"title":{},"body":{"injectables/PluginService.html":{}}}],["inject(ngx_editorjs_config",{"_index":343,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(userplugins",{"_index":430,"title":{},"body":{"injectables/PluginService.html":{}}}],["injectable",{"_index":291,"title":{"injectables/NgxEditorJSService.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{}},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"coverage.html":{}}}],["injectables",{"_index":292,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"overview.html":{}}}],["injected",{"_index":399,"title":{},"body":{"injectables/PluginService.html":{}}}],["injectiontoken",{"_index":26,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["injectiontoken('initialplugins",{"_index":38,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":96,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":40,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":142,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["inputs",{"_index":126,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["instance",{"_index":75,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["instances",{"_index":317,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"overview.html":{}}}],["internal",{"_index":379,"title":{},"body":{"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{}}}],["items",{"_index":56,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":278,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"dependencies.html":{}}}],["key",{"_index":32,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{}}}],["keys",{"_index":345,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["left",{"_index":163,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":164,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["level",{"_index":64,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["libraries",{"_index":502,"title":{},"body":{"index.html":{}}}],["libs/.../blocks.ts",{"_index":523,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../ngx",{"_index":491,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":6,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":50,"title":{"interfaces/List.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["list.plugin",{"_index":387,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":58,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["liststyle",{"_index":52,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["main",{"_index":173,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["makes",{"_index":400,"title":{},"body":{"injectables/PluginService.html":{}}}],["map",{"_index":316,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["markdown",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":42,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merged",{"_index":410,"title":{},"body":{"injectables/PluginService.html":{}}}],["metadata",{"_index":115,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["method",{"_index":313,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methods",{"_index":13,"title":{},"body":{"interfaces/BasePlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{}}}],["miscellaneous",{"_index":489,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":222,"title":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"overview.html":{}}}],["modules",{"_index":224,"title":{"modules.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":258,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["more",{"_index":325,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["name",{"_index":92,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PluginService.html":{}}}],["new",{"_index":37,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":188,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngmodule",{"_index":261,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{}}}],["ngonchanges",{"_index":189,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":202,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":190,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngx",{"_index":117,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngx.firebaseapp.com",{"_index":501,"title":{},"body":{"index.html":{}}}],["ngx_editorjs_config",{"_index":95,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":169,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjscomponent",{"_index":101,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"overview.html":{}}}],["ngxeditorjsconfig",{"_index":94,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":134,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"overview.html":{}}}],["ngxeditorjsmodule",{"_index":223,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":247,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["ngxeditorjsservice",{"_index":129,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{}}}],["ngxeditorjstools",{"_index":93,"title":{"interfaces/NgxEditorJSTools.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{}}}],["ngzone",{"_index":305,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["null",{"_index":435,"title":{},"body":{"injectables/PluginService.html":{}}}],["number",{"_index":65,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["nx",{"_index":512,"title":{},"body":{"index.html":{}}}],["object",{"_index":423,"title":{},"body":{"injectables/PluginService.html":{}}}],["object.entries",{"_index":431,"title":{},"body":{"injectables/PluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":438,"title":{},"body":{"injectables/PluginService.html":{}}}],["observable",{"_index":309,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":185,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ondestroy",{"_index":184,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{}}}],["options",{"_index":350,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data",{"_index":353,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":53,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":241,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["output",{"_index":86,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["outputdata",{"_index":84,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["over",{"_index":294,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["overview",{"_index":516,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":442,"title":{},"body":{"injectables/PluginService.html":{}}}],["package",{"_index":469,"title":{"dependencies.html":{}},"body":{}}],["paragraph",{"_index":60,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{}}}],["paragraph.plugin",{"_index":395,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":62,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":149,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["parameters",{"_index":131,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["parentmodule",{"_index":282,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["passed",{"_index":409,"title":{},"body":{"injectables/PluginService.html":{}}}],["piper",{"_index":498,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":12,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{}}}],["plugin.plugin",{"_index":444,"title":{},"body":{"injectables/PluginService.html":{}}}],["plugin.shortcut",{"_index":443,"title":{},"body":{"injectables/PluginService.html":{}}}],["pluginconfig",{"_index":31,"title":{"interfaces/PluginConfig.html":{}},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluginheader",{"_index":270,"title":{"injectables/PluginHeader.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginheadermodule",{"_index":235,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlist",{"_index":272,"title":{"injectables/PluginList.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlistmodule",{"_index":237,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginmap",{"_index":34,"title":{"interfaces/PluginMap.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"coverage.html":{}}}],["pluginparagraph",{"_index":275,"title":{"injectables/PluginParagraph.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginparagraphmodule",{"_index":236,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{}}}],["plugins",{"_index":303,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["plugins.service",{"_index":341,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugins/header/header.module",{"_index":265,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/header/header.plugin",{"_index":271,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/list/list.module",{"_index":266,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/list/list.plugin",{"_index":273,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":274,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/paragraph/paragraph.plugin",{"_index":276,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["pluginservice",{"_index":238,"title":{"injectables/PluginService.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"coverage.html":{},"overview.html":{}}}],["pluginsmap",{"_index":401,"title":{},"body":{"injectables/PluginService.html":{}}}],["private",{"_index":295,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["produced",{"_index":412,"title":{},"body":{"injectables/PluginService.html":{}}}],["project",{"_index":504,"title":{},"body":{"index.html":{}}}],["properties",{"_index":19,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{}}}],["property",{"_index":182,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":197,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{}}}],["provided",{"_index":108,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["providedin",{"_index":342,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["providers",{"_index":228,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["provides",{"_index":174,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"index.html":{}}}],["public",{"_index":122,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{}}}],["radius",{"_index":160,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["readme",{"_index":507,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":124,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["reduce((finaltools",{"_index":441,"title":{},"body":{"injectables/PluginService.html":{}}}],["registered",{"_index":427,"title":{},"body":{"injectables/PluginService.html":{}}}],["remove",{"_index":404,"title":{},"body":{"injectables/PluginService.html":{}}}],["remove(name",{"_index":421,"title":{},"body":{"injectables/PluginService.html":{}}}],["render",{"_index":87,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["repo",{"_index":495,"title":{},"body":{"index.html":{}}}],["required",{"_index":10,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["reset",{"_index":240,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["result",{"_index":41,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":43,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":15,"title":{},"body":{"interfaces/BasePlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{}}}],["returned",{"_index":24,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["returns",{"_index":200,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":248,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["runs",{"_index":499,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":340,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"dependencies.html":{}}}],["save",{"_index":300,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["save(holder",{"_index":328,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["see",{"_index":322,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["selector",{"_index":116,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["service",{"_index":125,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"index.html":{}}}],["services",{"_index":180,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["services/editorjs.service",{"_index":146,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":267,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["servuce",{"_index":428,"title":{},"body":{"injectables/PluginService.html":{}}}],["set",{"_index":132,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["settings",{"_index":23,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{}}}],["shortcut",{"_index":17,"title":{},"body":{"interfaces/BasePlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{}}}],["simplechanges",{"_index":203,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["single",{"_index":418,"title":{},"body":{"injectables/PluginService.html":{}}}],["singleton",{"_index":397,"title":{},"body":{"injectables/PluginService.html":{}}}],["skipself",{"_index":262,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["solid",{"_index":158,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{}}}],["started",{"_index":493,"title":{"index.html":{}},"body":{}}],["statements",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":251,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["store",{"_index":398,"title":{},"body":{"injectables/PluginService.html":{}}}],["stored",{"_index":411,"title":{},"body":{"injectables/PluginService.html":{}}}],["string",{"_index":33,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"miscellaneous/typealiases.html":{}}}],["style",{"_index":55,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":51,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":118,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["subject",{"_index":332,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["support",{"_index":513,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":514,"title":{},"body":{"modules.html":{}}}],["t",{"_index":48,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["table",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["tane",{"_index":497,"title":{},"body":{"index.html":{}}}],["template",{"_index":103,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["templateurl",{"_index":120,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["text",{"_index":61,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["this.add(key",{"_index":433,"title":{},"body":{"injectables/PluginService.html":{}}}],["this.blocks",{"_index":220,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocksmap.get(holder).asobservable",{"_index":368,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.blocksmap.get(holder).next(outputdata.blocks",{"_index":367,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":351,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.destroy(holder",{"_index":348,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.delete(holder",{"_index":370,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder",{"_index":361,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder).blocks.clear",{"_index":362,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder).blocks.render",{"_index":363,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder).destroy",{"_index":369,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder).saver.save",{"_index":366,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.has(holder",{"_index":347,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.set(holder",{"_index":358,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":214,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.createeditor(this.el.nativeelement.id",{"_index":219,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.destroy(this.el.nativeelement.id",{"_index":221,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.geteditor(this.el.nativeelement.id",{"_index":213,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.update(this.el.nativeelement.id",{"_index":217,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.plugins.gettools(excludetools",{"_index":352,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":437,"title":{},"body":{"injectables/PluginService.html":{}}}],["this.pluginsmap[name",{"_index":434,"title":{},"body":{"injectables/PluginService.html":{}}}],["this.zone.run",{"_index":349,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":364,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["time",{"_index":354,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["tinynodes",{"_index":494,"title":{},"body":{"index.html":{}}}],["tinynodes/ngx",{"_index":503,"title":{},"body":{"index.html":{}}}],["tool",{"_index":414,"title":{},"body":{"injectables/PluginService.html":{}}}],["tools",{"_index":255,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["toolsettings",{"_index":28,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{}}}],["tree",{"_index":105,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["type",{"_index":21,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":521,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/blocks",{"_index":147,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":268,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":269,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{}}}],["undefined",{"_index":327,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["underlying",{"_index":139,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["unordered",{"_index":54,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["update",{"_index":301,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["update(holder",{"_index":333,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updates",{"_index":331,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["url",{"_index":69,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["use",{"_index":181,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["usefactory",{"_index":281,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["user",{"_index":408,"title":{},"body":{"injectables/PluginService.html":{}}}],["userplugins",{"_index":39,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":283,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":109,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["value",{"_index":196,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":166,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["variable",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":524,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":356,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["via",{"_index":178,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["viewchild",{"_index":143,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":136,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["void",{"_index":201,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["way",{"_index":175,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["width",{"_index":152,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["within",{"_index":198,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["without",{"_index":112,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["yes",{"_index":256,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["zone",{"_index":304,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":239,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\n\nexport interface PluginConfig {\n  [key: string]: BasePlugin;\n}\n\nexport interface PluginMap {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, ToolSettings } from '@editorjs/editorjs';\n\nexport interface NgxEditorJSTools {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n}\n\nexport interface NgxEditorJSConfig {\n  editorjs?: EditorJSConfig;\n}\n\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Header data type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Header blocks\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Image data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:62\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Image blocks\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a list type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a basic list block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                holder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:29\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:23\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:42\n                            \n                        \n\n                \n                    \n                        The editor service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editor: NgxEditorJSDirective;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(public readonly service: NgxEditorJSService) {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.editor {\n  width: 100%;\n  height: 100vh;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:         EditorJSConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, ToolSettings } from '@editorjs/editorjs';\n\nexport interface NgxEditorJSTools {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n}\n\nexport interface NgxEditorJSConfig {\n  editorjs?: EditorJSConfig;\n}\n\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterViewInit\n            \n\n            \n                Example\n            \n            \n                        \n                            ```html\n * \n * ```\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                editorService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    service\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:26\n                            \n                        \n                \n                    \n                        Provide EditorJS blocks to render within the instance\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            editorService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:33\n                                \n                            \n                    \n                        \n                                Get the instance of the editor this directive has created\n\n\n                                \n                                    Returns :     EditorJS\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:37\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport EditorJS from '@editorjs/editorjs';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * ```html\n * \n * ```\n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterViewInit {\n  /**\n   * Provide `EditorJS` blocks to render within the instance\n   */\n  @Input()\n  blocks: Block[] = [];\n\n  constructor(private readonly el: ElementRef, public readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the instance of the editor this directive has created\n   */\n  get editor(): EditorJS {\n    return this.editorService.getEditor(this.el.nativeElement.id);\n  }\n\n  get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      this.editorService.update(this.el.nativeElement.id, changes.blocks.currentValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.editorService.createEditor(this.el.nativeElement.id, this.blocks);\n  }\n\n  ngOnDestroy() {\n    this.editorService.destroy(this.el.nativeElement.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorJSModule->PluginHeaderModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorJSModule -->\n\nPluginHeaderModule->NgxEditorJSModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorJSModule -->\n\nPluginListModule->NgxEditorJSModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorJSModule -->\n\nPluginParagraphModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginService\n\nPluginService\n\nNgxEditorJSModule -->\n\nPluginService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS\ninstance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application,\nthis will provide a default instance, import with NgxEditorJSModule in feature modules\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                        \n                            PluginService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(tools?: NgxEditorJSTools, config: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tools\n                                    \n                                                NgxEditorJSTools\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONFIG\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { NgxEditorJSComponent } from './containers/editorjs-component/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { PluginService } from './services/plugins.service';\nimport { NgxEditorJSConfig, NgxEditorJSTools, NGX_EDITORJS_CONFIG } from './types/config';\nimport { InitialPlugins, PluginConfig } from './types/plugins';\nimport { PluginHeader } from './plugins/header/header.plugin';\nimport { PluginList } from './plugins/list/list.plugin';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginParagraph } from './plugins/paragraph/paragraph.plugin';\n\nexport function defaultConfig() {\n  return {\n    editorjs: { autofocus: false, initialBlock: 'paragraph', holder: 'editor-js' }\n  };\n}\n\nexport function createTools(): PluginConfig {\n  return { header: new PluginHeader(), list: new PluginList(), paragraph: new PluginParagraph() };\n}\n\nconst DEFAULT_CONFIG: NgxEditorJSConfig = defaultConfig();\n\n/**\n * The ngx-editorjs module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io)\n * instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application,\n * this will provide a default instance, import with `NgxEditorJSModule` in feature modules\n */\n@NgModule({\n  imports: [CommonModule, PluginHeaderModule, PluginListModule, PluginParagraphModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSDirective],\n  exports: [\n    NgxEditorJSComponent,\n    NgxEditorJSDirective,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginParagraphModule\n  ],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: InitialPlugins,\n      useFactory: createTools\n    },\n    PluginService,\n    PluginHeaderModule\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  static forRoot(tools?: NgxEditorJSTools, config: NgxEditorJSConfig = DEFAULT_CONFIG): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useValue: {\n            editorjs: {\n              autofocus: config.editorjs.autofocus || DEFAULT_CONFIG.editorjs.autofocus,\n              holder: config.editorjs.holder || DEFAULT_CONFIG.editorjs.holder,\n              initialBlock: config.editorjs.initialBlock || DEFAULT_CONFIG.editorjs.initialBlock,\n              data: config.editorjs.data\n            }\n          }\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control over an editor instance within an application\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blocksMap\n                            \n                            \n                                    Private\n                                editorMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                blocks\n                            \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, plugins: PluginService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            blocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    blocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:94\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for this EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(holder: string, blocks?: Block[], excludeTools?: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:31\n                \n            \n\n\n            \n                \n                    This method creates an editor instance and adds it to a map of\ninstances using the holder as the key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional initial set of blocks to render in the editor\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:102\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:58\n                \n            \n\n\n            \n                \n                    Get the EditorJS instance\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorJS | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:83\n                \n            \n\n\n            \n                \n                    This methods gets the block data from the output data and updates\nthe service subject\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:67\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of blocks to render\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blocksMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editorMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Block } from '../types/blocks';\nimport { NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { PluginService } from './plugins.service';\n\n/**\n * The NgxEditorJSService provides control over an editor instance within an application\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  private editorMap = new Map();\n  private blocksMap = new Map>();\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly plugins: PluginService,\n    private zone: NgZone\n  ) {}\n\n  /**\n   * This method creates an editor instance and adds it to a map of\n   * instances using the holder as the key\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param exclude String array of keys to not include with this editor\n   */\n  public createEditor(holder: string, blocks?: Block[], excludeTools?: string[]) {\n    if (this.editorMap.has(holder)) {\n      this.destroy(holder);\n    }\n\n    this.zone.run(() => {\n      const options: EditorConfig = {\n        ...this.config.editorjs,\n        holder,\n        tools: this.plugins.getTools(excludeTools)\n      };\n      if (blocks) {\n        options.data = {\n          blocks,\n          time: Date.now(),\n          version: EditorJS.version\n        };\n      }\n      this.editorMap.set(holder, new EditorJS(options));\n    });\n  }\n\n  /**\n   * Get the EditorJS instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): EditorJS | undefined {\n    return this.editorMap.get(holder);\n  }\n\n  /**\n   * This method updates the blocks within the EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of blocks to render\n   */\n  public update(holder: string, blocks: Block[]) {\n    this.zone.run(() => {\n      this.editorMap.get(holder).blocks.clear();\n      this.editorMap.get(holder).blocks.render({\n        blocks,\n        time: Date.now(),\n        version: EditorJS.version\n      });\n    });\n  }\n\n  /**\n   * This methods gets the block data from the output data and updates\n   * the service subject\n   * @param holder The ID of the holder of the instance\n   */\n  public save(holder: string): void {\n    this.zone.run(async () => {\n      const outputData = await this.editorMap.get(holder).saver.save();\n      this.blocksMap.get(holder).next(outputData.blocks);\n    });\n  }\n\n  /**\n   * Get an observable of the blocks for this EditorJS instance\n   * @param holder The ID of the holder of the instance\n   */\n  public blocks(holder: string): Observable {\n    return this.blocksMap.get(holder).asObservable();\n  }\n\n  /**\n   * Destroy the EditorJS instance\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy(holder: string): void {\n    this.zone.run(() => {\n      if (this.editorMap.has(holder)) {\n        this.editorMap.get(holder).destroy();\n      }\n    });\n    this.editorMap.delete(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSTools.html":{"url":"interfaces/NgxEditorJSTools.html","title":"interface - NgxEditorJSTools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSTools\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/config.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, ToolSettings } from '@editorjs/editorjs';\n\nexport interface NgxEditorJSTools {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n}\n\nexport interface NgxEditorJSConfig {\n  editorjs?: EditorJSConfig;\n}\n\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\n\nexport interface PluginConfig {\n  [key: string]: BasePlugin;\n}\n\nexport interface PluginMap {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Header from '@editorjs/header';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Internal module to provide the Header block editor\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * Internal module to provide the Header block editor\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Internal module to provide the List block editor\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * Internal module to provide the List block editor\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginMap.html":{"url":"interfaces/PluginMap.html","title":"interface - PluginMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\n\nexport interface PluginConfig {\n  [key: string]: BasePlugin;\n}\n\nexport interface PluginMap {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Internal module to provide the Paragraph block editor\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * Internal module to provide the Paragraph block editor\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginService.html":{"url":"injectables/PluginService.html","title":"injectable - PluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pluginsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialPlugins: PluginConfig, userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initialPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Default plugins produced by the module\n\n                                                        \n                                                \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(name: string, tool: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:35\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tool\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:52\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:67\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:43\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pluginsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PluginConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                        Object map of the plugin configurations\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:59\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this servuce\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { BasePlugin, InitialPlugins, PluginConfig, PluginMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of EditorJS\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(\n    @Inject(InitialPlugins) initialPlugins: PluginConfig,\n    @Optional() @Inject(UserPlugins) userPlugins: PluginConfig\n  ) {\n    Object.entries({ ...initialPlugins, ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param name\n   * @param tool\n   */\n  public add(name: string, tool: BasePlugin) {\n    this.pluginsMap[name] = tool;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param name\n   */\n  public remove(name: string) {\n    this.pluginsMap[name] = null;\n    delete this.pluginsMap[name];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(name: string) {\n    this.pluginsMap[name];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this servuce\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): PluginMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        let p;\n        if (plugin.shortcut) {\n          p = {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            }\n          };\n        } else {\n          p = { [key]: plugin.plugin() };\n        }\n        return { ...finalTools, ...p };\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n            \n            component\n            NgxEditorJSComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n            \n            directive\n            NgxEditorJSDirective\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            createTools\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            variable\n            DEFAULT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/plugins/header/header.plugin.ts\n            \n            injectable\n            PluginHeader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/plugins/list/list.plugin.ts\n            \n            injectable\n            PluginList\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts\n            \n            injectable\n            PluginParagraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n            \n            injectable\n            NgxEditorJSService\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/plugins.service.ts\n            \n            injectable\n            PluginService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Block\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Header\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            HeaderBlock\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Image\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ImageBlock\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            List\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ListBlock\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Paragraph\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ParagraphBlock\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            EditorJSConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            NgxEditorJSConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            NgxEditorJSTools\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            NGX_EDITORJS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            PluginMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            core-js : ^2.5.4\n        \n            ngx-markdown : ^7.1.5\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTools   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            defaultConfig   (libs/.../ngx-editorjs.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTools()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultConfig\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultConfig()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repo is a collection of Angular components developed by me, Tane Piper.\nThe application for this repo runs on https://tinynodes-ngx.firebaseapp.com/\nLibraries\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+ - including a directive, component and service\n\nReadme\nChangelog\nDemo\nProject Folder\n\nThis project was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorJSModule->PluginHeaderModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorJSModule -->\n\nPluginHeaderModule->NgxEditorJSModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorJSModule -->\n\nPluginListModule->NgxEditorJSModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorJSModule -->\n\nPluginParagraphModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginService\n\nPluginService\n\nNgxEditorJSModule -->\n\nPluginService->NgxEditorJSModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_CONFIG   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSConfig\n\n                        \n                    \n                    \n                        \n                            Default value : defaultConfig()\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
