var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppContainerComponent.html",[0,1.864,1,2.683]],["body/components/AppContainerComponent.html",[0,3.126,1,3.51,2,2.568,3,0.106,4,0.199,5,1.923,6,1.305,7,1.671,8,1.923,9,0.081,10,3.012,11,2.895,12,0.221,13,3.244,14,1.297,15,1.413,16,3.839,17,4.055,18,1.835,19,4.367,20,4.551,21,1.828,22,4.822,23,1.96,24,2.955,25,5.419,26,2.955,27,4.449,28,0.37,29,0.994,30,7.215,31,1.413,32,4.901,33,5.37,34,2.365,35,4.551,36,3.125,37,3.806,38,2.681,39,6.081,40,5.419,41,4.785,42,4.785,43,0.92,44,2.557,45,3.37,46,1.447,47,2.895,48,1.016,49,0.009,50,1.39,51,0.616,52,0.563,53,2.005,54,0.693,55,1.266,56,2.288,57,2.21,58,2.895,59,2.057,60,2.681,61,2.895,62,3.929,63,1.951,64,2.691,65,2.895,66,4.785,67,2.895,68,5.419,69,2.333,70,4.449,71,2.895,72,3.929,73,2.921,74,2.895,75,2.895,76,2.895,77,2.895,78,2.63,79,2.895,80,2.895,81,5.37,82,2.895,83,2.895,84,3.586,85,0.366,86,2.681,87,2.557,88,0.443,89,2.034,90,0.92,91,1.745,92,1.671,93,2.466,94,2.466,95,1.305,96,3.33,97,2.333,98,1.828,99,0.1,100,0.296,101,2.373,102,2.442,103,1.735,104,2.557,105,2.167,106,0.942,107,2.557,108,1.828,109,2.895,110,2.895,111,1.84,112,2.895,113,2.895,114,2.895,115,2.557,116,2.333,117,2.895,118,1.099,119,2.895,120,2.895,121,2.557,122,2.557,123,2.557,124,1.544,125,2.895,126,2.895,127,6.081,128,2.167,129,3.266,130,2.557,131,4.055,132,2.895,133,2.21,134,2.557,135,3.929,136,3.929,137,2.557,138,2.557,139,2.557,140,2.557,141,2.557,142,1.229,143,1.016,144,1.544,145,3.929,146,3.839,147,4.785,148,2.557,149,2.557,150,1.745,151,2.568,152,2.955,153,0.681,154,3.929,155,2.557,156,2.333,157,2.557,158,3.586,159,2.557,160,2.557,161,2.557,162,2.167,163,1.745,164,2.557,165,2.557,166,1.043,167,2.955,168,2.21,169,1.438,170,4.039,171,1.923,172,1.923,173,1.544,174,1.745,175,1.923,176,1.671,177,1.923,178,1.923,179,1.544,180,0.971,181,1.923,182,1.605,183,1.923,184,1.671,185,1.828,186,1.489,187,1.745,188,1.923,189,0.003,190,0.004,191,0.003]],["title/modules/AppModule.html",[192,0.784,193,3.265]],["body/modules/AppModule.html",[1,4.914,3,0.139,4,0.139,9,0.105,10,1.437,12,0.29,13,2.897,14,1.48,23,1.63,49,0.009,53,1.707,59,2.062,85,0.496,88,0.579,89,2.66,90,2.017,91,3.827,99,0.131,100,0.387,166,1.364,173,4.078,176,4.413,180,1.387,184,4.413,189,0.004,190,0.005,191,0.004,192,1.071,193,6.355,194,1.329,195,1.4,196,2.619,197,2.619,198,1.477,199,1.437,200,3.343,201,3.343,202,3.343,203,3.343,204,5.37,205,5.078,206,5.078,207,4.24,208,5.37,209,5.078,210,2.306,211,1.562,212,1.518,213,3.787,214,5.432,215,4.377,216,4.796,217,4.377,218,2.008,219,3.01,220,4.377,221,5.432,222,3.052,223,2.119,224,5.432,225,3.343,226,3.343,227,4.796,228,4.377,229,2.515,230,5.432,231,3.787,232,3.787,233,2.698,234,3.343,235,3.343,236,1.819,237,3.787,238,3.343,239,0.344,240,3.343,241,3.052,242,3.052,243,3.787,244,3.787,245,3.787,246,3.787,247,3.343,248,3.787,249,3.787,250,3.787,251,3.787,252,3.343,253,3.343,254,3.052,255,3.787,256,3.787,257,2.66,258,3.787,259,3.787,260,3.787,261,3.787,262,3.787]],["title/modules/AppRoutingModule.html",[192,0.784,204,3.265]],["body/modules/AppRoutingModule.html",[0,2.316,3,0.212,4,0.212,9,0.161,10,2.192,12,0.442,13,3.08,14,1.678,15,2.291,49,0.009,53,3.251,85,0.439,88,0.884,99,0.249,100,0.591,173,3.847,174,4.347,189,0.006,190,0.007,191,0.006,192,1.217,194,2.027,199,2.192,204,5.066,219,3.201,223,2.813,252,5.1,253,5.1,263,5.1,264,5.1,265,7.213,266,6.369,267,7.213,268,5.813,269,5.813,270,3.201,271,5.1,272,2.774,273,5.1,274,6.369,275,5.1,276,5.1,277,4.322,278,5.775]],["title/injectables/AppService.html",[45,2.576,279,0.969]],["body/injectables/AppService.html",[3,0.117,4,0.117,9,0.089,12,0.489,13,3.408,14,1.591,15,1.52,23,1.845,28,0.408,31,2.029,34,2.492,35,4.781,38,2.884,43,1.52,45,2.653,46,1.27,48,2.403,49,0.009,50,1.565,51,0.947,52,1.117,63,2.763,64,1.583,73,2.299,78,2.425,85,0.428,88,0.488,93,4.35,95,1.437,96,3.582,98,2.012,99,0.11,100,0.326,101,3.065,102,2.59,106,2.34,111,2.072,118,2.599,146,3.022,189,0.003,190,0.005,191,0.003,198,1.867,218,2.658,220,5.149,222,2.569,236,3.685,279,0.998,280,1.178,281,0.512,282,3.187,283,3.173,284,3.857,285,1.52,286,2.132,287,3.857,288,3.178,289,4.226,290,4.226,291,3.857,292,2.569,293,3.85,294,3.541,295,6.349,296,3.187,297,2.762,298,3.362,299,4.809,300,5.381,301,4.226,302,4.226,303,1.047,304,3.187,305,1.597,306,3.857,307,4.226,308,5.518,309,4.226,310,3.187,311,3.857,312,2.125,313,4.226,314,1.53,315,3.187,316,3.857,317,2.814,318,3.187,319,2.461,320,1.483,321,2.239,322,1.243,323,2.653,324,1.639,325,1.583,326,2.513,327,2.117,328,2.569,329,2.239,330,3.521,331,2.814,332,2.814,333,2.814,334,2.814,335,2.814,336,2.814,337,2.814,338,2.814,339,3.187,340,2.239,341,3.362,342,3.187,343,2.814,344,2.814,345,2.814,346,2.814,347,2.814,348,2.814,349,1.243,350,2.814,351,2.814,352,2.814,353,2.814]],["title/injectables/AppService-1.html",[45,2.174,279,0.818,354,1.342]],["body/injectables/AppService-1.html",[3,0.119,4,0.119,9,0.09,10,2.749,12,0.493,13,3.439,14,1.601,15,1.541,28,0.415,31,2.048,34,2.505,35,4.825,38,2.924,43,1.541,45,2.689,46,1.28,48,2.422,49,0.009,50,1.578,51,0.955,52,1.13,63,2.778,64,1.612,73,2.331,78,2.448,85,0.43,88,0.497,93,4.371,95,1.463,96,3.631,98,2.05,99,0.112,100,0.332,101,3.099,102,2.619,106,2.357,111,2.088,118,2.62,146,2.05,189,0.003,190,0.005,191,0.003,198,1.893,218,2.677,220,5.196,222,2.616,236,3.705,279,1.012,280,1.2,283,3.202,284,3.911,285,1.541,286,2.109,287,3.911,288,3.223,289,4.285,290,4.285,291,3.911,292,2.616,293,3.885,294,3.573,295,6.393,297,2.801,298,3.408,299,4.847,300,5.418,301,4.285,302,4.285,303,1.054,305,1.619,306,3.911,307,4.285,308,5.561,309,4.285,311,3.911,312,2.148,313,4.285,314,1.542,316,3.911,317,2.867,319,2.496,320,1.504,321,2.28,322,1.266,323,2.689,324,1.67,325,1.612,326,2.122,327,2.156,328,2.616,329,2.28,330,3.549,331,2.867,332,2.867,333,2.867,334,2.867,335,2.867,336,2.867,337,2.867,338,2.867,340,2.28,341,3.408,343,2.867,344,2.867,345,2.867,346,2.867,347,2.867,348,2.867,349,1.266,350,2.867,351,2.867,352,2.867,353,2.867,355,3.247,356,3.247,357,3.247,358,3.247,359,3.247,360,3.247,361,2.867]],["title/interfaces/ApplicationData.html",[323,2.576,362,0.283]],["body/interfaces/ApplicationData.html",[3,0.169,4,0.169,9,0.128,12,0.54,14,1.328,23,1.598,28,0.589,29,1.391,49,0.009,51,0.862,52,1.371,53,2.806,60,4.553,73,3.388,78,3.365,85,0.257,99,0.243,118,3.088,142,3.207,143,2.185,150,3.752,151,2.659,163,3.752,189,0.004,190,0.006,191,0.004,270,2.553,281,0.328,303,1.211,312,2.793,314,1.576,320,1.428,323,3.451,349,2.947,362,0.48,363,1.029,364,3.712,365,4.135,366,1.896,367,4.135,368,2.364,369,4.135,370,4.684,371,4.769,372,3.503,373,2.659,374,3.059,375,3.931,376,2.076,377,2.776,378,4.684,379,2.806,380,3.059,381,3.059,382,2.014,383,3.059,384,3.059,385,2.908,386,2.553]],["title/interfaces/ApplicationData-1.html",[323,2.174,354,1.342,362,0.238]],["body/interfaces/ApplicationData-1.html",[3,0.17,4,0.17,9,0.128,10,1.752,12,0.54,14,1.33,23,1.184,28,0.591,29,1.393,49,0.009,51,0.863,52,1.373,53,2.81,60,4.557,73,3.391,78,3.366,85,0.257,99,0.244,118,3.089,142,3.209,143,2.188,150,3.757,151,2.664,163,3.757,189,0.004,190,0.006,191,0.004,270,2.558,303,1.211,312,2.795,314,1.577,320,1.431,323,3.456,349,2.949,362,0.48,363,1.031,365,4.141,366,1.898,367,4.141,368,2.367,369,4.141,370,4.689,371,4.773,372,3.507,373,2.664,374,3.065,375,3.936,376,2.08,377,2.782,378,4.689,379,2.81,380,3.065,381,3.065,382,2.018,383,3.065,384,3.065,385,2.914,386,2.558,387,3.72]],["title/modules/ApplicationDataModule.html",[192,0.784,205,3.087]],["body/modules/ApplicationDataModule.html",[3,0.203,4,0.203,9,0.154,12,0.423,14,1.496,23,1.977,45,4.739,49,0.009,85,0.452,88,0.845,99,0.191,100,0.565,106,2.283,166,1.989,189,0.005,190,0.007,191,0.005,192,1.3,194,1.938,195,2.042,196,2.278,197,2.278,198,3.006,199,2.097,205,5.939,210,2.977,211,2.278,212,2.215,223,2.735,281,0.393,293,5.153,294,4.739,328,4.451,329,3.879,373,4.048,388,4.877,389,4.877,390,5.523,391,3.741,392,7.013,393,5.652,394,4.657,395,5.523]],["title/injectables/ApplicationQuery.html",[279,0.969,293,2.801]],["body/injectables/ApplicationQuery.html",[3,0.207,4,0.207,9,0.156,12,0.542,14,1.512,23,1.819,43,1.784,46,1.042,48,1.972,49,0.009,50,1.284,51,0.777,52,1.092,85,0.455,88,0.86,99,0.194,100,0.795,106,2.307,189,0.005,190,0.007,191,0.005,233,2.79,236,4.188,279,1.478,280,2.077,281,0.504,286,1.862,293,4.272,294,4.521,299,5.907,327,3.731,329,3.946,330,2.89,391,3.781,396,5.619,397,5.713,398,2.197,399,4.528,400,5.619,401,2.621,402,3.009,403,2.532,404,4.528,405,4.528]],["title/injectables/ApplicationQuery-1.html",[279,0.818,293,2.363,354,1.342]],["body/injectables/ApplicationQuery-1.html",[3,0.208,4,0.208,9,0.157,10,2.7,12,0.544,14,1.517,43,1.793,46,1.048,48,1.982,49,0.009,50,1.291,51,0.781,52,1.098,85,0.456,88,0.864,99,0.195,100,0.796,106,2.315,189,0.005,190,0.007,191,0.005,233,2.804,236,4.193,279,1.482,280,2.087,286,1.868,293,4.286,294,4.529,299,5.916,327,3.75,329,3.966,330,2.904,391,3.793,397,5.731,398,2.204,399,4.55,401,2.629,402,3.019,403,2.545,404,4.55,405,4.55,406,5.646,407,5.646]],["title/interfaces/ApplicationState.html",[362,0.283,403,2.095]],["body/interfaces/ApplicationState.html",[3,0.154,4,0.154,9,0.117,12,0.321,14,1.628,23,1.497,28,0.536,29,1.304,49,0.009,50,1.334,51,0.929,57,3.334,78,2.215,85,0.325,90,1.331,99,0.273,106,2.363,118,3.188,124,3.112,153,0.893,180,1.666,189,0.004,190,0.006,191,0.004,218,3.205,239,0.5,281,0.298,285,1.331,286,2.257,303,0.61,305,1.398,312,2.821,314,1.5,319,3.001,320,1.809,324,2.155,325,2.081,326,3.758,349,3.276,362,0.493,363,0.936,366,1.805,372,2.081,382,1.832,398,1.299,403,2.63,408,2.783,409,3.112,410,3.234,411,2.63,412,2.081,413,2.013,414,2.155,415,2.235,416,2.081,417,1.765,418,3.001,419,2.155]],["title/interfaces/ApplicationState-1.html",[354,1.342,362,0.238,403,1.767]],["body/interfaces/ApplicationState-1.html",[3,0.157,4,0.157,9,0.119,10,1.618,12,0.326,14,1.638,23,1.093,28,0.545,29,1.319,49,0.009,50,1.35,51,0.937,57,3.364,78,2.241,85,0.329,90,1.353,99,0.274,106,2.38,118,3.2,153,0.903,180,1.676,189,0.004,190,0.006,191,0.004,218,3.187,239,0.503,285,1.353,286,2.264,303,0.62,305,1.422,312,2.703,314,1.513,319,3.036,320,1.83,324,2.192,325,2.117,326,3.769,349,3.288,362,0.495,363,0.952,366,1.821,382,1.863,398,1.321,403,2.661,409,3.149,410,3.272,411,2.661,412,2.117,413,2.047,414,2.192,415,2.273,416,2.117,417,1.786,418,3.036,419,2.192,420,2.83]],["title/injectables/ApplicationStore.html",[279,0.969,294,2.576]],["body/injectables/ApplicationStore.html",[3,0.213,4,0.213,9,0.162,12,0.444,14,1.812,23,1.857,43,2.504,46,1.077,49,0.009,50,1.327,85,0.44,88,0.888,99,0.2,100,0.594,106,2.686,118,2.204,189,0.006,190,0.007,191,0.006,233,2.883,236,4.079,279,1.508,280,2.146,281,0.515,286,1.9,294,4.01,326,2.538,327,3.855,349,2.264,391,3.86,398,2.243,403,2.616,421,5.805,422,5.805,423,5.415,424,5.415,425,4.077,426,2.985]],["title/injectables/ApplicationStore-1.html",[279,0.818,294,2.174,354,1.342]],["body/injectables/ApplicationStore-1.html",[3,0.215,4,0.215,9,0.162,10,2.756,12,0.446,14,1.814,43,2.509,46,1.082,49,0.009,50,1.334,85,0.441,88,0.893,99,0.201,100,0.597,106,2.691,118,2.215,189,0.006,190,0.007,191,0.006,233,2.898,236,4.085,279,1.513,280,2.157,286,1.906,294,4.023,326,2.551,327,3.875,349,2.276,391,3.872,398,2.25,403,2.63,423,5.432,424,5.432,425,4.098,426,3.001,427,5.835,428,5.835]],["title/interfaces/BasePlugin.html",[362,0.283,429,1.813]],["body/interfaces/BasePlugin.html",[3,0.168,4,0.168,9,0.127,12,0.35,14,0.977,28,0.586,29,1.385,31,2.393,46,0.849,49,0.009,51,0.858,52,1.642,85,0.346,88,0.701,99,0.272,100,0.468,103,2.419,111,1.876,180,1,189,0.004,190,0.006,191,0.004,192,1.046,239,0.445,272,2.978,281,0.326,285,1.454,303,1.024,314,1.684,322,1.786,362,0.479,363,1.023,429,2.939,430,3.426,431,4.118,432,3.737,433,2.747,434,3.579,435,4.194,436,5.005,437,3.619,438,4.118,439,2.643,440,3.074,441,4.669,442,1.175,443,2.129,444,2.538,445,3.041,446,2.129,447,2.643,448,3.041,449,1.649,450,3.437,451,3.437,452,2.632,453,2.759,454,2.891,455,2.759,456,2.002,457,2.538,458,2.891]],["title/interfaces/BasePlugin-1.html",[354,1.342,362,0.238,429,1.53]],["body/interfaces/BasePlugin-1.html",[3,0.168,4,0.168,9,0.127,12,0.35,14,0.975,28,0.585,29,1.383,31,2.391,46,0.848,49,0.009,51,0.857,52,1.641,85,0.345,88,0.699,99,0.272,100,0.467,103,2.415,111,1.874,180,0.998,189,0.004,190,0.006,191,0.004,192,1.045,239,0.477,272,2.974,281,0.325,285,1.451,303,1.023,314,1.682,322,1.782,362,0.478,363,1.021,429,2.937,431,4.112,432,3.732,433,2.746,434,3.574,435,4.192,436,5,437,3.616,438,4.112,439,2.637,440,3.071,441,4.665,442,1.172,443,2.125,444,2.533,445,3.035,446,2.125,447,2.637,448,3.035,449,1.646,450,3.432,451,3.432,452,2.629,453,2.754,454,2.885,455,2.754,456,1.998,457,2.533,458,2.885,459,3.42]],["title/interfaces/Block.html",[153,0.711,362,0.283]],["body/interfaces/Block.html",[3,0.129,4,0.129,6,1.585,9,0.098,12,0.269,28,0.45,29,1.498,46,0.653,49,0.009,51,1.256,52,1.303,54,1.708,99,0.278,133,3.329,142,2.186,143,2.771,144,2.746,153,1.375,189,0.003,190,0.005,191,0.003,239,0.5,266,3.106,281,0.366,286,2.15,303,1.208,305,2.381,314,1.15,354,1.203,362,0.52,363,0.786,366,1.637,368,1.335,376,2.321,398,2.078,402,1.493,433,1.064,460,1.949,461,1.949,462,3.517,463,2.251,464,1.876,465,2.854,466,2.854,467,1.876,468,1.689,469,2.854,470,2.746,471,3.028,472,2.746,473,3.268,474,2.746,475,1.949,476,1.451,477,2.746,478,3.427,479,2.972,480,1.949,481,3.376,482,2.03,483,2.03,484,2.03,485,2.03,486,2.03,487,2.746,488,1.949,489,1.949]],["title/interfaces/BlocksMap.html",[362,0.283,490,2.683]],["body/interfaces/BlocksMap.html",[3,0.169,4,0.169,9,0.128,12,0.351,46,0.851,49,0.009,51,0.859,85,0.393,92,5.208,94,2.543,95,2.068,99,0.28,106,1.493,153,1.206,189,0.004,190,0.006,191,0.004,239,0.542,281,0.442,303,1.209,305,1.531,314,1.966,322,3.433,362,0.494,363,1.025,366,1.669,401,1.696,417,1.388,442,1.177,461,2.543,476,2.561,490,3.584,491,3.047,492,5.845,493,3.92,494,4.588,495,3.441,496,2.896,497,3.742,498,2.36,499,2.765,500,2.204,501,2.765,502,2.648,503,2.006,504,2.648,505,2.896,506,2.36,507,2.279,508,2.648]],["title/interfaces/ChangeMap.html",[362,0.283,508,2.683]],["body/interfaces/ChangeMap.html",[3,0.168,4,0.168,9,0.127,12,0.35,46,0.848,49,0.009,51,0.857,85,0.392,92,5.205,94,2.533,95,2.059,99,0.28,106,1.487,153,1.075,189,0.004,190,0.006,191,0.004,239,0.542,281,0.441,303,1.208,305,1.525,314,1.965,322,3.431,362,0.493,363,1.021,366,1.665,401,1.689,417,1.383,442,1.172,461,2.533,476,3.105,490,2.637,491,3.035,492,5.841,493,2.885,495,3.432,496,2.885,497,3.732,498,2.35,499,2.754,500,2.195,501,2.754,502,2.637,503,1.998,504,2.637,505,3.909,506,3.185,507,3.076,508,3.574,509,4.57]],["title/classes/Changed.html",[100,0.476,510,2.576]],["body/classes/Changed.html",[3,0.161,4,0.161,9,0.122,18,3.303,28,0.56,29,1.343,34,1.909,43,1.39,46,1.274,48,1.536,49,0.009,50,1,51,1.217,52,0.851,54,1.048,55,1.913,85,0.335,99,0.283,100,0.793,102,3.697,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.579,303,1.129,411,1.972,442,1.123,498,4.297,503,3.389,510,4.296,511,2.526,512,4.669,513,2.763,514,4.735,515,3.074,516,4.824,517,6.013,518,4.376,519,4.223,520,2.906,521,3.964,522,2.763,523,3.964,524,3.796,525,1.913,526,3.964,527,2.763,528,4.139,529,3.074,530,4.894,531,3.494,532,3.074,533,3.074,534,3.074,535,2.906]],["title/interfaces/DemoData.html",[326,2.032,362,0.283]],["body/interfaces/DemoData.html",[3,0.156,4,0.156,9,0.118,12,0.325,14,1.444,23,1.513,28,0.544,29,1.317,49,0.009,50,1.815,51,0.816,57,2.928,78,1.615,85,0.329,90,1.351,99,0.274,106,2.202,118,2.913,124,3.145,153,0.902,180,1.733,189,0.004,190,0.006,191,0.004,218,3.291,239,0.516,281,0.303,285,1.351,286,2.314,303,0.985,305,2.258,312,2.501,314,1.512,319,2.188,320,1.318,324,2.188,325,2.113,326,3.559,349,2.993,362,0.504,363,0.95,366,1.143,372,2.113,382,2.578,398,1.318,403,1.917,408,2.825,409,2.269,410,2.357,411,2.657,412,2.113,413,2.832,414,2.188,415,2.269,416,2.113,417,1.784,418,3.032,419,2.188]],["title/interfaces/DemoData-1.html",[326,1.715,354,1.342,362,0.238]],["body/interfaces/DemoData-1.html",[3,0.159,4,0.159,9,0.12,10,1.642,12,0.331,14,1.457,23,1.11,28,0.554,29,1.333,49,0.009,50,1.825,51,0.825,57,2.963,78,1.642,85,0.333,90,1.374,99,0.275,106,2.222,118,2.931,153,0.913,180,1.742,189,0.004,190,0.006,191,0.004,218,3.283,239,0.518,285,1.374,286,2.32,303,0.994,305,2.278,312,2.205,314,1.525,319,2.225,320,1.341,324,2.225,325,2.149,326,3.576,349,3.011,362,0.507,363,0.967,366,1.163,382,2.608,398,1.341,403,1.95,409,2.308,410,2.398,411,2.688,412,2.149,413,2.865,414,2.225,415,2.308,416,2.149,417,1.805,418,3.068,419,2.225,420,2.873]],["title/interfaces/EditorJSConfig.html",[362,0.283,536,2.683]],["body/interfaces/EditorJSConfig.html",[3,0.139,4,0.139,9,0.105,12,0.29,28,0.485,29,1.213,49,0.009,50,1.242,51,1.115,52,1.704,53,1.707,54,1.83,85,0.303,88,0.579,99,0.253,103,2.477,129,3.273,153,1.17,168,2.698,189,0.004,190,0.005,191,0.004,239,0.51,257,2.66,272,3.05,281,0.269,285,2.204,286,2.008,303,1.194,320,1.683,362,0.33,363,0.846,366,2.055,379,2.448,401,2.348,426,2.793,439,2.185,442,0.972,443,3.555,450,2.099,451,3.01,471,2.306,476,2.619,506,2.793,521,4.005,531,3.127,536,3.666,537,3.052,538,4.873,539,4.873,540,4.873,541,4.873,542,5.37,543,5.37,544,4.796,545,4.065,546,4.065,547,4.377,548,3.815,549,4.796,550,4.065,551,2.609,552,4.065,553,2.953,554,3.815,555,3.815,556,3.607,557,3.815,558,3.815,559,3.429,560,5.192,561,4.065,562,3.052,563,3.052,564,2.185,565,4.01,566,2.515,567,3.052,568,2.66,569,3.052,570,2.099,571,3.052,572,2.515,573,2.834,574,3.052,575,2.834,576,3.052,577,3.052]],["title/modules/EditorJSInstanceModule.html",[192,0.784,578,3.265]],["body/modules/EditorJSInstanceModule.html",[3,0.21,4,0.21,9,0.159,12,0.437,15,2.276,49,0.009,85,0.437,88,0.875,99,0.197,100,0.585,166,2.059,189,0.006,190,0.007,191,0.006,192,1.321,194,2.007,195,2.114,196,2.358,197,2.358,198,3.054,199,2.17,210,3.042,211,2.358,212,2.292,223,2.796,239,0.554,279,1.494,281,0.407,371,4.525,391,3.05,442,1.467,500,3.442,572,4.76,578,6.059,579,5.048,580,5.048,581,6.059,582,4.608,583,5.717,584,5.776,585,5.776,586,4.278,587,5.048]],["title/injectables/EditorJSInstanceService.html",[279,0.969,581,3.265]],["body/injectables/EditorJSInstanceService.html",[3,0.052,4,0.052,7,1.416,9,0.039,12,0.48,14,0.523,15,0.446,16,0.888,20,1.052,28,0.18,31,0.779,34,2.554,43,0.779,46,1.164,48,2.129,49,0.009,50,1.387,51,0.989,52,1.179,54,0.587,55,2.826,56,2.857,63,2.612,64,2.894,66,1.241,85,0.31,88,0.215,92,2.559,93,4.073,94,2.457,95,0.634,97,1.133,98,0.888,99,0.085,100,0.498,101,3.688,102,1.105,103,2.745,107,1.241,111,1.585,115,2.166,116,1.133,121,1.241,122,1.241,142,1.385,146,0.888,153,0.892,168,1.218,189,0.001,190,0.002,191,0.001,239,0.551,272,2.516,279,0.511,280,0.52,281,0.46,283,2.419,297,1.416,298,3.421,303,1.193,320,0.436,321,0.987,322,2.043,330,4.034,340,2.291,341,1.723,373,0.811,379,1.761,397,2.629,401,3.126,402,0.597,417,2.129,426,1.678,439,0.811,442,0.361,443,1.14,450,0.779,451,0.779,490,2.255,495,1.359,497,0.847,498,0.723,499,1.966,500,1.877,501,1.966,502,1.883,503,1.938,504,2.255,507,1.941,508,2.255,525,2.291,531,3.841,551,3.61,553,1.517,564,2.559,570,3.23,572,1.629,581,1.723,582,5.208,584,1.977,585,1.133,588,1.241,589,3.45,590,3.907,591,5.146,592,2.166,593,2.453,594,3.479,595,3.479,596,2.453,597,1.977,598,2.453,599,2.453,600,2.453,601,3.925,602,1.406,603,5.058,604,3.149,605,3.45,606,3.907,607,1.406,608,1.977,609,2.453,610,4.87,611,2.453,612,2.166,613,1.406,614,4.626,615,4.157,616,2.453,617,2.291,618,1.406,619,1.723,620,4.87,621,2.453,622,1.406,623,2.453,624,1.835,625,2.453,626,1.406,627,2.166,628,2.453,629,2.166,630,1.406,631,2.453,632,1.406,633,2.453,634,1.406,635,2.453,636,1.406,637,2.166,638,1.406,639,2.166,640,1.406,641,2.441,642,1.133,643,1.406,644,1.052,645,1.406,646,1.052,647,1.241,648,1.241,649,1.133,650,2.453,651,1.406,652,1.406,653,2.453,654,1.406,655,3.262,656,4.433,657,1.406,658,1.406,659,1.406,660,4.433,661,1.406,662,1.406,663,1.406,664,3.262,665,4.433,666,4.87,667,5.555,668,1.241,669,1.406,670,2.453,671,1.406,672,2.453,673,1.406,674,1.406,675,2.453,676,1.406,677,1.406,678,1.406,679,1.406,680,1.406,681,1.406,682,1.406,683,1.406,684,1.406,685,2.881,686,0.987,687,1.406,688,1.406,689,1.406,690,2.453,691,4.433,692,1.406,693,2.453,694,1.406,695,1.241,696,1.406,697,1.406,698,1.406,699,3.907,700,1.406,701,1.406,702,1.406,703,1.406,704,1.406,705,1.406,706,1.406,707,1.133,708,1.406,709,1.406,710,2.629,711,2.629,712,1.406,713,1.406,714,1.406,715,2.881,716,2.881,717,1.406,718,1.406,719,1.406,720,1.406,721,1.406,722,1.406,723,1.406,724,1.406,725,0.888,726,0.888,727,0.811,728,1.052,729,1.406]],["title/interfaces/EditorMap.html",[362,0.283,501,2.801]],["body/interfaces/EditorMap.html",[3,0.169,4,0.169,9,0.128,12,0.352,46,0.855,49,0.009,51,0.862,85,0.393,92,5.191,94,2.553,95,2.076,99,0.281,106,1.499,153,1.079,189,0.004,190,0.006,191,0.004,239,0.549,281,0.443,303,1.211,305,1.537,314,1.968,322,3.435,362,0.494,363,1.029,366,1.674,401,1.703,417,1.394,442,1.182,461,2.553,476,2.568,490,2.659,491,3.059,492,5.849,493,2.908,495,3.451,496,2.908,497,3.752,498,2.369,499,2.776,500,2.99,501,3.752,502,2.659,503,2.014,504,2.659,505,2.908,506,2.369,507,2.288,508,2.659,730,4.607]],["title/interfaces/EventMap.html",[362,0.283,499,2.801]],["body/interfaces/EventMap.html",[3,0.169,4,0.169,9,0.128,12,0.351,46,0.851,49,0.009,51,0.859,85,0.393,92,5.188,94,3.441,95,2.068,99,0.28,106,1.493,153,1.077,189,0.004,190,0.006,191,0.004,239,0.542,281,0.442,303,1.209,305,1.531,314,1.966,322,3.433,362,0.494,363,1.025,366,1.669,401,2.295,417,1.388,442,1.177,461,2.543,476,2.561,490,2.648,491,3.047,492,5.845,493,2.896,495,3.901,496,2.896,497,4.242,498,2.36,499,3.742,500,2.204,501,2.765,502,2.648,503,2.006,504,2.648,505,2.896,506,2.36,507,2.279,508,2.648,731,4.588]],["title/interfaces/EventType.html",[362,0.283,497,2.801]],["body/interfaces/EventType.html",[3,0.167,4,0.167,9,0.126,12,0.347,28,0.581,29,1.378,49,0.009,51,1.166,52,1.199,85,0.391,92,5.134,94,2.517,95,2.047,99,0.279,106,1.478,153,1.072,189,0.004,190,0.006,191,0.004,239,0.541,281,0.323,303,1.227,305,2.336,314,1.93,322,3.37,362,0.492,363,1.015,366,1.658,401,1.679,417,1.374,442,1.165,476,2.544,490,2.622,491,3.016,492,5.738,493,2.868,495,3.881,496,3.893,497,4.22,498,3.863,499,2.737,500,2.182,501,2.737,502,2.622,503,1.986,504,2.622,505,2.868,506,2.336,507,2.256,508,2.622]],["title/interfaces/Header.html",[362,0.283,473,1.973]],["body/interfaces/Header.html",[3,0.131,4,0.131,6,1.608,9,0.099,12,0.273,28,0.456,29,1.372,49,0.009,51,1.241,52,1.312,54,1.793,99,0.279,133,3.937,142,2.208,143,2.782,144,2.775,153,1.365,189,0.003,190,0.005,191,0.003,239,0.474,281,0.254,286,2.031,303,1.196,305,2.049,314,0.797,354,1.78,362,0.517,363,0.797,366,1.65,368,1.354,376,2.344,398,2.092,402,1.514,433,1.079,460,1.977,463,1.56,464,1.903,465,2.883,466,2.883,467,1.903,468,1.713,469,2.883,470,2.775,471,3.046,472,2.775,473,3.533,474,3.995,475,2.883,476,2.532,477,2.775,478,3.446,479,3.002,480,1.977,481,3.403,482,2.059,483,2.059,484,2.059,485,2.059,486,2.059,487,2.775,488,1.977,489,1.977]],["title/interfaces/HeaderBlock.html",[362,0.283,477,2.48]],["body/interfaces/HeaderBlock.html",[3,0.134,4,0.134,6,1.644,9,0.102,12,0.279,28,0.467,29,1.389,49,0.009,51,1.247,52,1.326,54,1.733,99,0.28,133,3.387,142,2.244,143,2.799,144,2.82,153,1.376,189,0.004,190,0.005,191,0.004,239,0.493,281,0.259,286,1.982,303,1.161,305,2.075,314,0.815,354,1.248,362,0.523,363,0.815,366,1.671,368,1.385,376,2.383,398,2.244,402,1.548,433,1.103,460,2.021,463,1.594,464,1.945,465,2.93,466,2.93,467,1.945,468,1.752,469,2.93,470,2.82,471,3.073,472,2.82,473,3.385,474,2.82,475,2.021,476,1.504,477,3.317,478,3.477,479,3.051,480,2.021,481,3.446,482,2.105,483,2.105,484,2.105,485,2.105,486,2.105,487,2.82,488,2.021,489,2.021]],["title/components/HomePageComponent.html",[0,1.864,173,2.48]],["body/components/HomePageComponent.html",[0,2.757,1,2.531,2,4.272,3,0.161,4,0.161,5,2.912,6,1.976,7,2.531,8,2.912,9,0.122,10,2.61,21,2.768,22,5.355,23,2.223,24,3.998,26,3.998,28,0.561,34,1.392,38,3.628,43,1.392,44,3.872,45,4.102,46,1.117,48,1.539,49,0.009,50,1.692,51,0.607,52,0.852,53,2.713,56,3.096,57,2.99,59,2.61,73,2.106,78,2.945,85,0.336,88,0.671,90,1.392,99,0.151,100,0.449,102,1.976,108,2.768,111,1.327,123,3.872,124,2.339,143,2.113,166,1.579,167,3.998,168,2.99,169,2.178,170,4.915,171,2.912,172,2.912,173,3.948,174,5.038,175,2.912,176,2.531,177,2.912,178,2.912,179,2.339,180,1.314,181,2.912,182,2.43,183,2.912,184,2.531,185,2.768,186,2.255,187,2.642,188,2.912,189,0.004,190,0.006,191,0.004,217,4.852,218,2.226,291,3.534,394,4.915,463,2.632,732,6.876,733,4.385,734,6.876,735,6.021,736,4.385,737,4.385,738,3.281,739,6.021,740,4.852,741,5.316,742,4.505,743,6.021,744,6.021,745,4.852,746,5.316,747,3.801,748,4.505,749,5.316,750,6.021,751,4.505,752,3.801,753,4.852,754,6.021]],["title/interfaces/Image.html",[362,0.283,478,2.233]],["body/interfaces/Image.html",[3,0.124,4,0.124,6,1.519,9,0.094,12,0.258,28,0.431,29,1.328,49,0.009,51,1.244,52,1.674,54,1.758,99,0.275,133,3.262,142,2.118,143,2.738,144,2.662,153,1.356,189,0.003,190,0.005,191,0.003,239,0.465,281,0.24,286,1.995,303,1.212,305,1.983,314,0.753,354,1.154,362,0.511,363,0.753,366,2.142,368,1.28,376,3.309,398,2.036,402,1.431,433,1.02,460,1.869,463,1.474,464,1.798,465,2.766,466,2.766,467,1.798,468,1.619,469,2.766,470,2.662,471,2.976,472,2.662,473,3.311,474,2.662,475,1.869,476,1.39,477,2.662,478,3.747,479,4.237,480,2.766,481,4.069,482,3.791,483,2.88,484,3.791,485,2.88,486,3.791,487,2.662,488,1.869,489,1.869]],["title/interfaces/ImageBlock.html",[362,0.283,487,2.48]],["body/interfaces/ImageBlock.html",[3,0.134,4,0.134,6,1.644,9,0.102,12,0.279,28,0.467,29,1.389,49,0.009,51,1.247,52,1.326,54,1.733,99,0.28,133,3.387,142,2.244,143,2.799,144,2.82,153,1.376,189,0.004,190,0.005,191,0.004,239,0.493,281,0.259,286,1.982,303,1.161,305,2.075,314,0.815,354,1.248,362,0.523,363,0.815,366,1.671,368,1.385,376,2.383,398,2.244,402,1.548,433,1.103,460,2.021,463,1.594,464,1.945,465,2.93,466,2.93,467,1.945,468,1.752,469,2.93,470,2.82,471,3.073,472,2.82,473,3.305,474,2.82,475,2.021,476,1.504,477,2.82,478,3.625,479,3.051,480,2.021,481,3.446,482,2.105,483,2.105,484,2.105,485,2.105,486,2.105,487,3.317,488,2.021,489,2.021]],["title/interfaces/List.html",[143,1.632,362,0.283]],["body/interfaces/List.html",[3,0.131,4,0.131,6,1.608,9,0.099,12,0.273,28,0.456,29,1.372,49,0.009,51,1.245,52,1.312,54,1.793,99,0.279,133,3.352,142,3.18,143,2.954,144,3.995,153,1.365,189,0.003,190,0.005,191,0.003,239,0.474,281,0.254,286,2.031,303,1.154,305,2.499,314,0.797,354,1.22,362,0.517,363,0.797,366,1.65,368,1.354,376,2.344,398,2.092,402,1.514,433,1.079,460,1.977,463,1.56,464,1.903,465,2.883,466,2.883,467,1.903,468,1.713,469,3.74,470,2.775,471,3.046,472,2.775,473,3.283,474,2.775,475,1.977,476,1.471,477,2.775,478,3.446,479,3.002,480,1.977,481,3.403,482,2.059,483,2.059,484,2.059,485,2.059,486,2.059,487,2.775,488,1.977,489,1.977]],["title/interfaces/ListBlock.html",[362,0.283,470,2.48]],["body/interfaces/ListBlock.html",[3,0.133,4,0.133,6,1.633,9,0.101,12,0.277,28,0.464,29,1.384,49,0.009,51,1.247,52,1.322,54,1.803,99,0.28,133,3.377,142,2.234,143,2.893,144,2.807,153,1.375,189,0.004,190,0.005,191,0.004,239,0.504,281,0.258,286,1.978,303,1.159,305,2.067,314,0.81,354,1.24,362,0.518,363,0.81,366,1.665,368,1.376,376,2.371,398,2.238,402,2.234,433,1.592,460,2.008,463,1.584,464,1.933,465,2.916,466,2.916,467,1.933,468,1.74,469,2.916,470,3.305,471,3.065,472,2.807,473,3.299,474,2.807,475,2.008,476,1.495,477,2.807,478,3.468,479,3.037,480,2.008,481,3.434,482,2.091,483,2.091,484,2.091,485,2.091,486,2.091,487,2.807,488,2.008,489,2.008]],["title/modules/MaterialModule.html",[192,0.784,206,3.087]],["body/modules/MaterialModule.html",[3,0.224,4,0.224,9,0.169,10,2.31,12,0.465,49,0.009,56,3.831,72,6.577,85,0.415,88,0.931,89,4.273,99,0.21,100,0.622,189,0.006,190,0.007,191,0.006,192,1.257,194,2.135,199,2.31,206,4.947,219,3.372,223,2.905,254,6.488,284,6.003,432,4.489,570,4.128,755,6.084,756,5.574,757,8.051,758,8.051,759,8.051,760,8.051,761,7.109]],["title/interfaces/MenuGroup.html",[312,1.718,362,0.283]],["body/interfaces/MenuGroup.html",[3,0.162,4,0.162,9,0.122,12,0.527,14,0.937,23,1.547,28,0.562,29,1.347,49,0.009,51,0.952,52,1.597,53,2.717,60,5.114,73,3.306,78,3.394,85,0.245,99,0.237,118,2.289,142,3.644,143,1.542,150,3.633,151,2.536,163,3.633,189,0.004,190,0.006,191,0.004,270,2.435,281,0.313,303,1.262,312,2.544,314,1.868,320,1.868,323,2.435,349,1.714,362,0.45,363,0.981,364,3.54,365,2.917,366,1.181,367,2.917,368,1.668,369,2.917,370,4.571,371,4.676,372,3.855,373,2.536,374,2.917,375,4.345,376,1.98,377,2.647,378,4.919,379,3.102,380,4.003,381,4.003,382,2.636,383,4.003,384,4.003,385,3.806,386,3.341]],["title/interfaces/MenuGroup-1.html",[312,1.45,354,1.342,362,0.238]],["body/interfaces/MenuGroup-1.html",[3,0.162,4,0.162,9,0.123,10,1.671,12,0.527,14,0.939,23,1.129,28,0.563,29,1.349,49,0.009,51,0.953,52,1.597,53,2.721,60,5.116,73,3.309,78,3.395,85,0.246,99,0.238,118,2.292,142,3.646,143,1.545,150,3.638,151,2.54,163,3.638,189,0.004,190,0.006,191,0.004,270,2.44,303,1.263,312,2.547,314,1.869,320,1.871,323,2.44,349,1.717,362,0.451,363,0.983,365,2.923,366,1.183,367,2.923,368,1.671,369,2.923,370,4.575,371,4.68,372,3.858,373,2.54,374,2.923,375,4.349,376,1.984,377,2.653,378,4.923,379,3.105,380,4.009,381,4.009,382,2.639,383,4.009,384,4.009,385,3.811,386,3.346,387,3.547]],["title/interfaces/MenuItem.html",[362,0.283,372,2.309]],["body/interfaces/MenuItem.html",[3,0.155,4,0.155,9,0.117,12,0.621,14,0.897,23,1.726,28,0.538,29,1.307,49,0.009,51,1.057,52,1.687,53,3.277,60,4.606,73,2.81,78,3.358,85,0.235,99,0.232,118,2.221,142,3.086,143,1.476,150,4.768,151,3.377,163,4.768,189,0.004,190,0.006,191,0.004,270,2.331,281,0.299,303,1.294,312,2.163,314,1.503,320,1.304,323,2.331,349,1.641,362,0.442,363,0.94,364,3.39,365,2.793,366,1.131,367,2.793,368,1.597,369,2.793,370,5.254,371,5.225,372,3.929,373,3.377,374,3.885,375,4.247,376,2.637,377,4.382,378,5.39,379,3.032,380,2.793,381,2.793,382,1.839,383,2.793,384,2.793,385,2.656,386,2.331]],["title/interfaces/MenuItem-1.html",[354,1.342,362,0.238,372,1.948]],["body/interfaces/MenuItem-1.html",[3,0.155,4,0.155,9,0.117,10,1.6,12,0.621,14,0.899,23,1.503,28,0.539,29,1.309,49,0.009,51,1.058,52,1.687,53,3.28,60,4.609,73,2.813,78,3.359,85,0.235,99,0.232,118,2.224,142,3.089,143,1.479,150,4.771,151,3.381,163,4.771,189,0.004,190,0.006,191,0.004,270,2.336,303,1.295,312,2.165,314,1.504,320,1.306,323,2.336,349,1.644,362,0.442,363,0.941,365,2.799,366,1.133,367,2.799,368,1.6,369,2.799,370,5.257,371,5.227,372,3.932,373,3.381,374,3.89,375,4.251,376,2.64,377,4.385,378,5.392,379,3.035,380,2.799,381,2.799,382,1.842,383,2.799,384,2.799,385,2.66,386,2.336,387,3.396]],["title/classes/MockEditorJS.html",[100,0.476,762,3.479]],["body/classes/MockEditorJS.html",[3,0.176,4,0.176,9,0.133,18,1.972,28,0.612,29,1.426,34,1.518,43,2.027,46,1.483,48,1.678,49,0.009,50,1.093,51,1.106,52,0.929,64,2.374,85,0.401,99,0.248,100,0.785,108,3.018,111,2.32,189,0.005,190,0.006,191,0.005,281,0.585,303,0.929,379,2.877,417,2.32,429,2.49,433,1.446,435,3.17,436,3.175,440,2.791,442,1.227,511,2.759,525,2.09,536,4.426,553,3.342,594,3.175,595,4.773,725,3.018,726,3.018,727,4.426,762,4.777,763,3.853,764,5.792,765,4.221,766,6.384,767,4.781,768,4.781,769,4.781,770,3.853,771,3.853,772,4.777,773,3.853,774,3.578,775,5.792,776,3.853,777,3.853,778,3.358,779,3.853,780,3.578,781,3.853,782,3.853]],["title/injectables/MockNgZone.html",[279,0.969,783,4.105]],["body/injectables/MockNgZone.html",[3,0.184,4,0.184,9,0.14,12,0.383,28,0.641,29,1.471,31,2.092,43,2.336,46,1.506,48,2.312,49,0.009,50,1.506,51,1.018,52,1.281,54,1.2,55,2.191,63,2.649,64,3.271,85,0.28,88,0.767,99,0.173,100,0.513,103,2.569,111,1.993,189,0.005,190,0.006,191,0.005,279,1.373,280,1.853,281,0.593,377,3.021,398,2.042,425,3.52,426,2.578,436,5.533,603,6.714,604,6.541,608,5.308,783,5.816,784,8.332,785,5.012,786,6.587,787,6.587,788,7.357,789,6.587,790,7.814,791,6.587,792,6.587,793,5.012,794,7.814,795,6.587,796,5.012,797,5.012,798,6.496,799,6.587,800,5.012,801,5.012]],["title/classes/MockPlugin.html",[100,0.476,774,3.479]],["body/classes/MockPlugin.html",[3,0.184,4,0.184,9,0.139,18,2.713,28,0.64,31,2.089,34,2.334,43,1.588,46,1.22,49,0.009,63,2.369,64,2.484,85,0.41,99,0.254,100,0.799,108,3.157,111,2.362,189,0.005,190,0.006,191,0.005,281,0.523,303,0.958,379,2.964,417,1.99,429,2.867,433,2.362,435,4.028,440,3.213,442,1.283,511,2.886,525,2.187,536,3.796,553,3.058,594,3.321,595,3.321,725,3.157,726,3.157,727,3.796,762,3.743,763,4.031,764,4.031,770,4.031,771,4.031,772,4.922,773,4.031,774,4.922,775,5.923,776,4.031,777,4.031,778,3.513,779,4.031,780,3.743,781,4.031,782,4.031,802,5.001,803,5.001]],["title/components/NavBarComponent.html",[0,1.864,176,2.683]],["body/components/NavBarComponent.html",[0,3.285,1,2.175,2,3.124,3,0.139,4,0.139,5,2.502,6,1.698,7,2.175,8,2.502,9,0.105,10,2.628,12,0.288,13,2.887,14,1.155,15,1.719,21,2.379,22,5.173,23,2.102,24,3.594,26,3.594,28,0.482,35,4.74,36,3.801,46,1.175,49,0.009,50,1.448,51,0.749,54,0.902,55,1.647,59,1.43,60,4.739,73,3.522,78,2.985,85,0.302,86,3.817,88,0.577,90,1.197,99,0.13,100,0.385,103,1.47,129,3.262,131,4.05,133,2.688,134,3.327,135,4.779,136,4.779,137,3.327,138,3.327,139,3.327,140,3.327,141,3.327,142,1.599,143,1.322,144,2.01,145,4.779,146,4.37,147,5.592,148,3.327,149,3.327,150,2.271,151,3.124,152,3.594,153,0.828,154,4.779,155,3.327,156,3.036,157,3.327,158,4.362,159,3.327,160,3.327,161,3.327,162,2.82,163,2.271,164,3.327,165,3.327,166,1.357,167,3.594,168,2.688,169,1.871,170,4.597,171,2.502,172,2.502,173,2.01,174,2.271,175,2.502,176,3.996,177,5.343,178,2.502,179,2.01,180,1.182,181,2.502,182,2.088,183,2.502,184,2.175,185,2.379,186,1.938,187,2.271,188,2.502,189,0.004,190,0.005,191,0.004,247,6.113,312,2.341,320,1.677,495,3,546,4.05,570,3,738,2.82,798,5.592,804,6.923,805,3.768,806,6.923,807,3.417,808,5.412,809,6.923,810,5.412,811,5.412,812,6.334,813,5.412,814,5.412,815,3.768,816,3.768,817,3.768,818,5.412,819,3.768,820,5.412]],["title/components/NgxEditorJSComponent.html",[0,1.864,179,2.48]],["body/components/NgxEditorJSComponent.html",[0,3.086,1,1.488,2,2.346,3,0.095,4,0.095,5,1.712,6,1.162,7,2.904,8,1.712,9,0.072,12,0.311,14,0.867,21,1.627,22,4.653,23,1.465,24,2.699,26,2.699,28,0.33,29,0.908,34,2.628,36,2.854,43,0.819,46,1.473,48,0.905,49,0.009,50,1.51,51,1.098,52,0.978,54,1.655,55,1.127,59,0.978,69,2.077,73,1.238,85,0.347,86,4.638,87,2.276,88,0.394,93,3.165,99,0.089,100,0.264,102,2.268,129,3.442,131,3.041,133,1.28,151,1.488,153,1.128,158,2.077,166,0.928,167,2.699,168,2.837,169,2.499,170,3.793,171,1.712,172,1.712,173,1.375,174,1.553,175,1.712,176,1.488,177,1.712,178,1.712,179,3.046,180,1.247,181,1.712,182,1.428,183,1.712,184,1.488,185,1.627,186,2.937,187,1.553,188,1.712,189,0.003,190,0.004,191,0.003,229,2.699,239,0.478,281,0.572,283,3.748,285,1.814,288,3.793,297,3.296,303,1.099,320,2.22,330,1.326,354,0.882,362,0.247,366,1.775,368,1.543,379,1.832,401,2.111,402,1.725,417,2.091,423,3.041,426,2.09,435,2.018,442,0.661,443,1.89,446,2.656,471,1.725,476,1.676,480,2.252,506,2.09,507,2.018,525,1.777,530,1.627,531,2.268,538,4.365,539,3.534,540,3.534,541,3.534,542,4.365,543,4.365,548,2.854,550,3.041,551,1.952,552,3.041,554,2.854,555,2.854,556,2.699,557,2.854,558,2.854,559,2.566,560,3.765,561,3.041,615,3.958,617,3.534,644,1.929,686,4.011,749,2.276,821,8.038,822,2.577,823,2.854,824,4.064,825,3.041,826,3.041,827,5.032,828,4.064,829,4.055,830,2.577,831,3.445,832,4.064,833,2.577,834,3.275,835,2.577,836,3.589,837,2.577,838,2.577,839,2.577,840,2.854,841,4.274,842,2.577,843,2.577,844,2.577,845,2.577,846,4.064,847,2.577,848,4.064,849,3.275,850,2.577,851,2.276,852,2.276,853,2.077,854,2.276,855,4.064,856,4.064,857,5.043,858,4.443,859,2.577,860,2.577,861,2.577,862,2.577,863,2.577,864,2.577,865,2.577]],["title/interfaces/NgxEditorJSConfig.html",[362,0.283,565,2.935]],["body/interfaces/NgxEditorJSConfig.html",[3,0.166,4,0.166,9,0.125,12,0.345,28,0.577,29,1.37,49,0.009,50,1.03,51,0.624,52,1.193,53,2.031,54,1.669,85,0.342,88,0.69,99,0.27,103,2.72,129,2.716,153,1.067,168,2.238,189,0.004,190,0.006,191,0.004,239,0.546,257,4.308,272,3.349,281,0.321,285,1.948,286,1.611,303,1.015,320,1.397,362,0.373,363,1.007,366,1.649,379,2.031,401,2.268,426,2.317,439,2.601,442,1.156,443,3.757,450,2.497,451,3.4,471,1.913,476,1.858,506,2.317,521,3.54,531,2.031,536,4.321,537,3.632,538,3.165,539,3.165,540,3.165,541,3.165,542,4.308,543,4.308,544,3.979,545,3.372,546,3.372,547,3.632,548,3.165,549,3.979,550,3.372,551,2.164,552,3.372,553,2.852,554,3.165,555,3.165,556,2.993,557,3.165,558,3.165,559,2.845,560,4.59,561,3.372,562,4.943,563,4.943,564,3.54,565,4.726,566,4.074,567,3.632,568,3.165,569,3.632,570,2.497,571,3.632,572,2.993,573,3.372,574,3.632,575,3.372,576,3.632,577,3.632]],["title/interfaces/NgxEditorJSDemo.html",[362,0.283,416,2.309]],["body/interfaces/NgxEditorJSDemo.html",[3,0.156,4,0.156,9,0.118,12,0.325,14,1.444,23,1.513,28,0.544,29,1.317,49,0.009,50,1.348,51,0.816,57,2.928,78,1.615,85,0.329,90,1.351,99,0.274,106,2.202,118,2.913,124,4.235,153,1.118,180,1.733,189,0.004,190,0.006,191,0.004,218,3.275,239,0.516,281,0.303,285,1.872,286,2.24,303,0.619,305,1.419,312,2.837,314,1.512,319,2.188,320,1.318,324,2.188,325,2.113,326,3.471,349,2.993,362,0.504,363,0.95,366,1.143,372,2.113,382,1.86,398,1.318,403,1.917,408,2.825,409,2.269,410,2.357,411,2.657,412,2.113,413,2.043,414,3.032,415,3.145,416,2.928,417,2.402,418,3.032,419,2.188]],["title/interfaces/NgxEditorJSDemo-1.html",[354,1.342,362,0.238,416,1.948]],["body/interfaces/NgxEditorJSDemo-1.html",[3,0.162,4,0.162,9,0.123,10,1.671,12,0.337,14,1.47,23,1.129,28,0.563,29,1.349,49,0.009,50,1.38,51,0.609,57,2.998,78,1.671,85,0.337,90,1.398,99,0.277,106,2.242,118,2.949,153,1.135,180,1.752,189,0.004,190,0.006,191,0.004,218,3.254,239,0.52,285,1.917,286,2.255,303,0.641,305,1.469,312,2.232,314,1.539,319,2.264,320,1.364,324,2.264,325,2.186,326,3.508,349,3.03,362,0.509,363,0.983,366,1.183,382,1.924,398,1.364,403,1.984,409,2.348,410,2.44,411,2.721,412,2.186,413,2.114,414,3.104,415,3.22,416,2.998,417,2.427,418,3.104,419,2.264,420,2.923]],["title/interfaces/NgxEditorJSDemoData.html",[362,0.283,418,2.391]],["body/interfaces/NgxEditorJSDemoData.html",[3,0.163,4,0.163,9,0.123,12,0.339,14,1.476,23,1.557,49,0.009,50,1.387,57,3.014,78,1.684,85,0.338,90,1.409,99,0.277,106,2.251,118,2.957,124,3.237,153,0.929,180,1.756,189,0.004,190,0.006,191,0.004,218,3.277,239,0.521,281,0.316,285,1.409,286,2.259,303,0.646,305,1.48,312,2.557,314,1.545,319,2.281,320,1.375,324,2.281,325,2.203,326,3.6,349,3.038,362,0.5,363,0.991,366,1.192,372,2.203,382,1.939,398,1.881,403,1.999,408,2.946,409,2.366,410,2.459,411,2.735,412,2.203,413,2.131,414,2.281,415,2.366,416,2.203,417,1.836,418,3.558,419,2.281]],["title/interfaces/NgxEditorJSDemoData-1.html",[354,1.342,362,0.238,418,2.017]],["body/interfaces/NgxEditorJSDemoData-1.html",[3,0.166,4,0.166,9,0.126,10,1.714,12,0.345,14,1.489,23,1.158,49,0.009,50,1.404,57,3.051,78,1.714,85,0.343,90,1.434,99,0.279,106,2.272,118,2.975,153,0.94,180,1.765,189,0.004,190,0.006,191,0.004,218,3.267,239,0.524,285,1.434,286,2.267,303,0.657,305,1.507,312,2.271,314,1.56,319,2.322,320,1.399,324,2.322,325,2.242,326,3.616,349,3.057,362,0.503,363,1.009,366,1.214,382,1.974,398,1.904,403,2.035,409,2.408,410,2.502,411,2.768,412,2.242,413,2.169,414,2.322,415,2.408,416,2.242,417,1.858,418,3.59,419,2.322,420,2.998]],["title/directives/NgxEditorJSDirective.html",[169,2.309,186,2.391]],["body/directives/NgxEditorJSDirective.html",[0,2.048,2,2.009,3,0.078,4,0.078,7,2.009,9,0.059,12,0.266,13,1.856,15,1.105,18,1.435,19,3.562,20,3.307,21,1.342,22,2.197,28,0.272,31,1.105,32,4.117,33,4.511,34,2.47,36,2.444,38,2.097,43,0.675,46,1.476,48,1.551,49,0.009,50,1.289,51,1.046,52,0.859,54,1.449,55,1.521,56,1.79,63,2.18,64,3.006,85,0.356,86,4.385,88,0.325,93,3.542,95,0.958,99,0.073,100,0.217,101,2.357,102,1.568,103,1.724,108,1.342,111,1.546,128,2.604,129,2.097,146,1.342,153,1.057,168,3.174,169,3.614,180,0.76,185,1.342,186,1.79,187,2.097,189,0.002,190,0.003,191,0.002,229,2.311,239,0.493,272,1.021,281,0.571,283,3.174,285,1.622,288,4.02,297,2.949,303,1.059,320,2.067,330,1.79,366,1.627,379,1.568,401,2.745,417,2.247,423,2.604,426,1.79,442,0.545,443,2.376,446,2.376,456,1.521,471,1.477,476,1.435,481,2.831,503,1.521,506,1.79,507,1.728,525,1.521,531,2.302,536,3.494,538,4.251,539,3.588,540,3.588,541,3.588,542,4.251,543,4.251,548,2.444,550,2.604,551,2.907,552,2.604,553,2.621,554,2.444,555,2.444,556,2.311,557,2.444,558,2.444,559,2.197,560,3.307,561,2.604,584,4.117,595,2.311,615,3.887,617,3.104,619,2.444,644,1.59,685,3.073,686,2.444,715,3.073,725,1.342,726,1.342,727,1.226,728,1.59,778,2.444,807,2.197,826,2.604,829,3.562,831,3.696,834,2.805,836,4.511,840,2.444,841,3.823,853,1.713,866,8.033,867,2.125,868,2.805,869,3.823,870,3.48,871,2.097,872,4.419,873,3.073,874,5.109,875,2.125,876,5.109,877,3.562,878,3.48,879,3.48,880,2.125,881,2.125,882,2.125,883,2.125,884,2.125,885,2.125,886,2.125,887,2.125,888,2.125,889,3.073,890,2.125,891,1.493,892,2.125,893,3.48,894,5.109,895,2.125,896,3.073,897,3.48,898,4.511,899,3.48,900,3.073,901,2.805,902,3.48,903,3.48,904,2.197,905,2.125,906,1.876,907,2.125,908,2.125,909,2.125,910,2.805,911,2.125,912,1.713,913,2.125,914,2.125,915,2.125,916,2.125,917,2.125,918,2.125,919,2.125,920,2.125,921,2.125,922,2.125,923,5.109,924,3.48,925,2.125,926,2.125,927,1.876,928,2.125,929,2.125,930,2.125,931,2.125,932,2.125,933,2.125,934,2.125,935,2.125,936,2.125,937,2.125,938,2.125,939,2.125]],["title/injectables/NgxEditorJSEffects.html",[279,0.969,940,4.105]],["body/injectables/NgxEditorJSEffects.html",[3,0.164,4,0.164,9,0.124,28,0.571,29,1.361,43,1.417,46,1.13,48,1.566,49,0.009,50,1.02,51,0.617,52,0.868,54,1.068,55,1.951,69,3.596,85,0.46,88,0.683,90,1.417,93,3.845,95,2.011,98,2.817,99,0.154,100,0.456,101,2.38,102,2.746,103,2.377,108,2.817,111,2.256,153,0.683,189,0.004,190,0.006,191,0.004,239,0.494,279,1.27,280,1.649,281,0.494,286,1.6,322,1.74,417,2.437,426,3.134,442,1.145,514,4.65,522,2.817,523,4.759,525,3.034,526,4.005,531,2.746,725,3.847,726,3.847,727,3.517,728,4.56,831,4.132,877,5.592,940,5.38,941,6.939,942,4.462,943,4.462,944,7.114,945,4.462,946,6.093,947,6.093,948,7.456,949,6.093,950,6.939,951,6.093,952,6.093,953,6.093,954,6.093,955,4.462,956,4.462,957,6.093,958,4.462,959,3.339,960,4.462,961,4.462,962,4.462,963,3.94,964,4.462,965,4.462]],["title/modules/NgxEditorJSModule.html",[192,0.784,207,2.683]],["body/modules/NgxEditorJSModule.html",[3,0.131,4,0.131,9,0.099,12,0.397,14,1.439,15,1.65,16,4.257,31,1.131,43,1.131,46,0.661,48,1.25,49,0.009,50,0.814,51,0.493,52,1.571,53,2.342,54,1.244,56,2.672,63,1.283,85,0.469,88,0.545,90,1.65,99,0.123,100,0.364,111,1.078,166,1.283,179,4.488,186,4.327,189,0.003,190,0.005,191,0.003,192,1.21,194,1.25,195,1.317,196,2.53,197,1.469,198,2.63,199,2.329,207,5.088,210,2.206,211,1.469,212,1.428,219,2.88,223,2.393,239,0.388,257,3.649,281,0.37,297,2.999,330,1.832,391,3.597,401,2.493,402,2.206,434,2.999,443,3.136,553,3.594,564,3.892,565,4.726,568,3.649,573,4.591,578,5.91,587,3.145,740,4.187,756,3.888,807,3.28,831,4.149,851,3.145,852,3.145,853,2.87,871,4.775,891,2.501,912,2.87,966,3.145,967,3.145,968,3.561,969,3.145,970,3.145,971,4.726,972,5.196,973,3.561,974,5.417,975,4.588,976,5.196,977,3.561,978,3.561,979,5.954,980,5.954,981,6.134,982,3.649,983,2.365,984,5.196,985,5.196,986,2.87,987,4.588,988,3.561,989,3.561,990,3.561,991,3.561,992,3.145,993,3.561,994,3.561,995,3.561,996,3.561,997,2.87,998,3.561]],["title/injectables/NgxEditorJSPluginService.html",[279,0.969,971,2.935]],["body/injectables/NgxEditorJSPluginService.html",[3,0.115,4,0.115,9,0.087,12,0.485,14,1.351,15,1.501,16,1.979,28,0.401,31,1.501,34,2.632,38,2.848,43,0.996,46,1.326,48,2.386,49,0.009,50,1.634,51,0.941,52,1.442,54,1.132,55,1.371,62,5.594,63,2.813,64,2.347,85,0.264,88,0.48,99,0.108,100,0.648,101,1.672,111,2.162,189,0.003,190,0.005,191,0.003,192,0.529,215,3.809,236,3.667,239,0.299,279,0.985,280,1.159,281,0.528,283,3.549,285,1.501,303,1.193,314,1.778,322,3.233,330,3.814,368,1.794,401,1.747,412,2.347,413,1.506,429,2.787,433,2.621,435,1.557,444,4.111,446,2.198,447,3.284,449,1.702,452,3.553,453,1.889,457,3.768,500,2.27,553,2.198,563,3.809,575,4.741,592,4.173,615,2.431,642,2.526,649,2.526,710,2.526,711,2.526,840,3.32,971,2.984,999,3.135,1000,4.727,1001,4.727,1002,5.019,1003,4.727,1004,5.594,1005,3.135,1006,3.135,1007,6.335,1008,4.727,1009,4.727,1010,3.135,1011,4.727,1012,3.135,1013,4.727,1014,3.135,1015,6.335,1016,4.727,1017,3.135,1018,3.135,1019,3.135,1020,4.727,1021,1.809,1022,2.346,1023,3.135,1024,3.135,1025,3.135,1026,3.135,1027,3.135,1028,3.135,1029,6.335,1030,3.135,1031,3.135,1032,3.135,1033,3.135,1034,3.135,1035,4.727,1036,4.727,1037,4.727]],["title/injectables/NgxEditorJSService.html",[279,0.969,831,2.576]],["body/injectables/NgxEditorJSService.html",[3,0.081,4,0.081,9,0.061,12,0.516,15,1.134,16,1.384,28,0.281,31,1.134,34,2.711,43,1.134,46,1.332,48,2.519,49,0.009,50,1.768,51,0.993,52,1.428,54,0.525,55,0.959,56,1.836,63,2.822,64,3.217,85,0.377,88,0.336,93,4.344,95,0.988,98,1.384,99,0.076,100,0.224,101,2.776,102,1.609,103,1.393,105,3.895,106,1.162,111,1.575,153,1.033,189,0.002,190,0.003,191,0.002,239,0.516,272,1.053,279,0.744,280,0.811,281,0.523,283,1.773,285,0.696,297,2.06,303,1.248,320,1.4,321,1.54,322,2.396,330,3.92,340,1.54,341,1.54,379,2.035,386,1.979,401,3.201,412,1.089,413,1.715,417,2.371,426,2.677,442,0.563,446,1.02,452,1.917,456,1.561,493,2.254,496,3.286,500,1.715,502,3.004,503,1.561,505,2.254,506,1.836,507,2.585,521,2.06,525,2.276,531,3.89,536,3.004,551,3.661,553,2.42,564,4.143,565,3.286,566,1.456,568,1.54,581,3.656,586,1.641,591,3.152,594,2.371,595,3.457,597,2.877,601,4.195,603,3.639,604,4.195,612,3.152,614,4.596,615,2.322,617,3.656,619,2.507,624,2.672,627,3.152,629,3.152,637,3.152,639,3.152,641,3.895,642,1.767,644,1.641,649,1.767,765,1.936,780,2.672,807,2.254,829,3.639,831,2.885,840,3.172,873,5.424,877,3.639,889,3.152,891,1.54,904,2.254,906,3.152,912,1.767,927,4.596,971,3.286,980,3.152,992,1.936,1038,2.193,1039,3.987,1040,3.57,1041,3.57,1042,2.193,1043,2.193,1044,3.57,1045,2.193,1046,3.152,1047,3.57,1048,3.57,1049,2.193,1050,3.57,1051,2.672,1052,3.57,1053,2.193,1054,3.57,1055,2.193,1056,1.715,1057,1.17,1058,2.507,1059,1.715,1060,3.57,1061,2.193,1062,5.205,1063,4.596,1064,3.57,1065,2.193,1066,2.193,1067,5.205,1068,2.193,1069,2.193,1070,2.193,1071,2.193,1072,1.54,1073,2.193,1074,2.193,1075,2.193,1076,2.193,1077,2.193,1078,2.193,1079,2.193,1080,2.193,1081,2.193,1082,2.193,1083,2.193,1084,2.193,1085,2.193,1086,2.193]],["title/modules/NgxEditorjsDemoModule.html",[192,0.784,208,3.265]],["body/modules/NgxEditorjsDemoModule.html",[3,0.145,4,0.145,9,0.109,10,1.492,23,1.008,49,0.009,85,0.486,88,0.602,89,2.761,90,2.059,99,0.136,100,0.402,166,1.415,180,1.218,182,4.825,189,0.004,190,0.005,191,0.004,192,0.663,194,1.379,195,1.453,196,2.674,197,1.621,198,2.176,199,2.461,206,5.141,207,4.468,208,6.435,209,5.141,210,2.368,211,1.621,212,1.576,219,3.091,223,2.176,239,0.472,240,3.47,241,3.168,254,4.495,269,3.168,270,2.178,281,0.28,391,2.096,452,1.668,457,3.091,553,1.828,738,2.941,761,4.925,982,3.918,983,2.61,986,3.168,997,3.168,1087,3.47,1088,3.47,1089,3.47,1090,3.47,1091,6.021,1092,4.887,1093,4.665,1094,4.887,1095,4.887,1096,4.887,1097,4.665,1098,4.887,1099,3.168,1100,3.168,1101,5.578,1102,5.578,1103,5.578,1104,5.578,1105,4.925,1106,3.93,1107,3.47,1108,3.93,1109,3.47,1110,3.93,1111,3.93,1112,3.93,1113,3.93,1114,3.93]],["title/modules/NgxEditorjsNgrxModule.html",[192,0.784,1115,3.479]],["body/modules/NgxEditorjsNgrxModule.html",[3,0.2,4,0.2,9,0.151,12,0.415,15,2.203,49,0.009,85,0.449,88,0.831,90,1.725,99,0.187,100,0.556,105,5.192,166,1.956,189,0.005,190,0.007,191,0.005,192,1.404,194,1.906,195,2.008,196,2.24,197,2.24,198,2.118,199,2.062,207,4.913,210,2.945,211,2.24,212,2.178,219,3.845,223,2.706,236,3.332,239,0.527,281,0.386,320,2.15,401,2.565,434,4.004,456,3.033,807,4.38,944,6.126,959,4.064,982,4.873,983,3.607,1115,6.371,1116,4.795,1117,5.431,1118,5.431,1119,5.431,1120,6.126,1121,5.591,1122,6.938,1123,6.938,1124,5.431,1125,5.431,1126,5.431,1127,5.431]],["title/modules/NgxEditorjsPluginsModule.html",[192,0.784,1128,3.479]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.142,4,0.142,9,0.108,12,0.296,15,1.75,49,0.009,85,0.477,88,0.591,99,0.133,100,0.395,152,3.659,153,0.843,166,1.391,189,0.004,190,0.005,191,0.004,192,1.084,194,2.598,195,1.428,196,1.593,197,1.593,198,1.507,199,2.438,210,2.339,211,1.593,212,1.549,219,3.054,223,2.149,239,0.443,281,0.275,391,2.939,432,3.321,446,2.562,463,2.409,646,4.124,868,4.441,982,3.87,983,2.566,1072,3.87,1092,5.395,1093,5.15,1094,5.395,1095,5.395,1096,5.395,1097,5.15,1098,5.395,1128,6.868,1129,3.412,1130,3.412,1131,3.412,1132,5.675,1133,3.864,1134,3.864,1135,4.866,1136,5.51,1137,5.51,1138,5.51,1139,5.51,1140,4.866,1141,3.864,1142,3.864,1143,3.864,1144,3.864,1145,3.864,1146,3.864,1147,3.864,1148,3.864,1149,3.114,1150,3.864]],["title/modules/NgxHideableHeaderDemoModule.html",[192,0.784,1151,3.746]],["body/modules/NgxHideableHeaderDemoModule.html",[3,0.234,4,0.234,9,0.177,49,0.009,85,0.458,88,0.975,99,0.264,100,0.652,189,0.006,190,0.007,191,0.006,194,2.237,219,3.532,223,2.989,268,6.175,269,6.175,270,3.532,272,3.061,281,0.453,473,3.252,982,5.382,983,4.233,1099,5.137,1100,5.137,1151,6.175,1152,6.175,1153,5.628]],["title/modules/NgxTinynodesCoreModule.html",[192,0.784,209,3.087]],["body/modules/NgxTinynodesCoreModule.html",[3,0.201,4,0.201,9,0.152,12,0.418,15,2.565,23,2.073,45,3.863,49,0.009,85,0.389,88,0.837,91,4.2,99,0.189,100,0.56,106,2.269,166,1.97,189,0.005,190,0.007,191,0.005,192,1.294,194,1.92,195,2.022,196,2.256,197,2.256,198,2.134,199,2.912,205,6.051,209,5.756,210,2.959,211,2.256,212,2.193,219,3.863,223,2.719,281,0.389,286,1.83,394,4.629,456,3.047,756,5.216,901,5.617,1154,4.83,1155,5.47,1156,4.83,1157,5.47,1158,5.47,1159,6.97,1160,6.154,1161,6.154,1162,5.47]],["title/classes/NotReady.html",[100,0.476,528,2.801]],["body/classes/NotReady.html",[3,0.161,4,0.161,9,0.122,18,3.303,28,0.56,29,1.343,34,1.909,43,1.39,46,1.274,48,1.536,49,0.009,50,1,51,1.217,52,0.851,54,1.048,55,1.913,85,0.335,99,0.283,100,0.793,102,3.697,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.579,303,1.129,411,1.972,442,1.123,498,4.297,503,3.389,510,4.099,511,2.526,512,4.669,513,2.763,514,4.735,515,3.074,516,4.824,519,3.074,520,2.906,521,3.964,522,2.763,523,3.964,524,3.796,525,1.913,526,3.964,527,2.763,528,4.457,529,3.074,530,4.894,531,3.494,532,3.074,533,4.223,534,3.074,535,2.906,1163,6.013,1164,4.376]],["title/interfaces/Page.html",[59,1.765,362,0.283]],["body/interfaces/Page.html",[3,0.213,4,0.213,9,0.161,28,0.741,29,1.614,37,5.791,49,0.009,51,1.141,59,2.743,85,0.403,90,1.839,99,0.272,153,1.106,189,0.006,190,0.007,191,0.006,233,2.876,239,0.458,281,0.412,303,1.2,314,1.294,362,0.479,363,1.294,398,1.795,417,2.495,551,4.327,1165,4.666,1166,6.171,1167,5.791,1168,5.476]],["title/interfaces/PageBlock.html",[362,0.283,1167,3.265]],["body/interfaces/PageBlock.html",[3,0.224,4,0.224,9,0.169,28,0.778,29,1.664,37,4.273,49,0.009,51,0.842,59,2.31,85,0.415,90,1.932,99,0.278,153,1.232,189,0.006,190,0.007,191,0.006,233,3.022,239,0.472,281,0.433,303,1.084,314,1.359,362,0.489,363,1.359,398,2.309,417,1.841,551,4.36,1165,4.903,1166,4.553,1167,5.655,1168,4.947]],["title/components/PageContainerComponent.html",[0,1.864,182,2.576]],["body/components/PageContainerComponent.html",[0,2.425,1,1.084,2,1.813,3,0.069,4,0.069,5,1.247,6,0.846,7,1.084,8,1.247,9,0.052,10,0.713,12,0.24,13,1.676,14,0.67,15,1.503,17,3.543,18,1.296,19,3.264,20,2.351,21,1.186,22,4.161,23,1.462,24,2.086,26,2.086,28,0.24,29,0.702,31,0.998,32,3.815,34,2.507,38,1.893,43,1.503,45,2.624,46,1.327,48,1.103,49,0.009,50,1.204,51,0.56,52,0.611,53,2.134,54,0.969,55,1.373,59,3.049,63,2.052,64,2.617,73,0.902,78,0.713,84,3.264,85,0.368,88,0.287,90,1.921,92,1.084,93,2.624,94,2.244,95,0.846,96,2.351,97,1.513,98,1.186,99,0.065,100,0.192,101,3.383,102,1.825,103,1.58,106,1.022,111,1.724,116,1.513,124,3.815,128,2.351,129,1.893,130,2.774,131,2.351,143,1.662,153,0.926,166,0.676,167,2.086,168,1.56,169,0.933,170,3.144,171,1.247,172,1.247,173,1.002,174,1.132,175,1.247,176,1.084,177,1.247,178,1.247,179,1.002,180,1.485,181,1.247,182,2.624,183,1.247,184,1.084,185,1.186,186,0.966,187,1.132,188,1.247,189,0.002,190,0.003,191,0.004,211,2.616,215,2.532,216,2.774,218,2.918,239,0.53,281,0.519,283,3.15,285,0.998,286,1.878,297,1.813,298,2.206,303,0.273,311,2.532,312,0.694,316,2.532,321,1.319,322,0.732,330,2.435,340,1.319,341,1.319,354,0.643,361,1.658,366,1.089,376,1.416,401,1.75,416,1.56,417,2.388,433,0.95,449,1.131,463,1.373,471,1.333,473,1.333,478,1.509,507,1.56,524,2.989,525,2.773,531,2.374,546,3.943,551,1.509,556,2.086,564,1.813,570,1.041,589,2.774,594,4.212,597,1.513,605,2.774,615,4.02,668,1.658,710,1.513,716,2.774,738,1.405,751,4.263,778,2.206,831,2.624,854,1.658,857,2.774,858,1.658,871,1.893,963,2.774,1002,2.206,1039,4.18,1056,1.509,1059,1.509,1107,6.441,1161,2.774,1168,2.086,1169,7.295,1170,1.878,1171,3.141,1172,3.141,1173,3.141,1174,4.05,1175,3.141,1176,3.141,1177,5.697,1178,4.248,1179,5.269,1180,1.878,1181,4.248,1182,4.734,1183,4.734,1184,1.878,1185,1.878,1186,1.878,1187,3.141,1188,3.141,1189,1.878,1190,1.878,1191,3.141,1192,1.878,1193,6.049,1194,1.878,1195,1.878,1196,1.878,1197,1.878,1198,1.878,1199,1.878,1200,1.658,1201,1.878,1202,1.878,1203,1.878,1204,3.141,1205,3.141,1206,1.878,1207,1.878,1208,1.878,1209,1.405,1210,1.878,1211,1.878,1212,1.878,1213,1.878,1214,1.878,1215,1.878,1216,1.878,1217,1.878,1218,1.878,1219,1.878,1220,1.878,1221,1.878,1222,1.878,1223,1.878,1224,1.878,1225,1.878,1226,1.878,1227,1.878,1228,1.878,1229,1.878,1230,1.878,1231,1.878,1232,1.878,1233,1.878,1234,1.878,1235,1.878,1236,1.878,1237,2.351,1238,2.774,1239,5.697,1240,3.141,1241,3.141,1242,3.141,1243,3.141,1244,1.878,1245,1.878,1246,1.878,1247,1.878,1248,1.878,1249,1.878,1250,2.774,1251,3.141,1252,2.774,1253,3.141,1254,2.774,1255,3.141,1256,3.141,1257,3.141,1258,2.774,1259,3.141,1260,1.878,1261,1.878,1262,1.878]],["title/modules/PageStoreModule.html",[192,0.784,1091,3.265]],["body/modules/PageStoreModule.html",[3,0.196,4,0.196,9,0.148,12,0.407,49,0.009,59,2.598,85,0.446,88,0.814,99,0.183,100,0.544,166,1.915,180,1.494,189,0.005,190,0.007,191,0.005,192,1.395,194,1.866,195,1.965,196,2.193,197,2.193,198,2.952,199,2.018,210,2.905,211,2.193,212,2.132,218,2.53,223,2.67,236,3.287,239,0.479,281,0.378,434,3.95,545,5.122,570,3.793,1091,6.242,1120,6.043,1121,5.516,1178,4.807,1181,5.946,1263,4.695,1264,4.695,1265,5.946,1266,5.345,1267,5.317,1268,5.516,1269,4.545,1270,6.043,1271,4.695,1272,5.317,1273,4.285]],["title/injectables/PagesQuery.html",[279,0.969,1265,3.265]],["body/injectables/PagesQuery.html",[3,0.224,4,0.224,9,0.17,43,1.937,46,1.132,48,2.141,49,0.009,50,1.395,51,0.844,52,1.186,59,2.316,85,0.468,88,0.934,99,0.21,100,0.624,189,0.006,190,0.007,191,0.006,233,3.03,236,3.583,239,0.473,279,1.555,280,2.255,281,0.531,398,2.313,399,4.916,404,4.916,405,4.916,1265,5.24,1266,5.302,1273,4.916,1274,6.1,1275,8.061,1276,6.1,1277,4.565,1278,4.565]],["title/injectables/PagesService.html",[279,0.969,1181,3.265]],["body/injectables/PagesService.html",[3,0.112,4,0.112,9,0.085,12,0.479,15,1.474,28,0.391,29,1.037,31,1.474,34,2.136,37,2.148,38,2.796,43,0.971,46,1.468,48,2.581,49,0.009,50,1.681,51,1.074,52,1.509,59,3.41,63,2.649,64,3.516,85,0.41,88,0.468,90,0.971,93,3.923,95,1.379,99,0.106,100,0.313,101,1.632,102,3.19,103,1.193,111,0.925,153,1.23,189,0.003,190,0.005,191,0.003,233,1.519,236,3.861,239,0.516,272,1.469,279,0.967,280,1.131,281,0.572,283,2.304,288,3.081,292,2.465,299,4.395,330,2.883,368,1.761,379,2.091,417,2.225,456,2.029,468,2.228,525,2.029,530,1.931,551,4.097,619,3.259,641,3.472,686,3.259,711,3.739,868,3.739,891,2.148,1002,4.395,1166,2.289,1167,5.166,1178,5.322,1181,3.259,1200,2.701,1265,4.724,1266,4.246,1271,2.701,1273,2.465,1277,2.289,1279,3.059,1280,4.64,1281,4.64,1282,4.64,1283,4.64,1284,3.059,1285,4.64,1286,3.059,1287,4.64,1288,3.059,1289,6.726,1290,4.64,1291,3.059,1292,4.64,1293,3.259,1294,4.64,1295,3.059,1296,4.64,1297,3.059,1298,4.64,1299,3.059,1300,4.64,1301,3.059,1302,3.059,1303,3.059,1304,6.257,1305,4.64,1306,3.059,1307,3.059,1308,3.059,1309,4.64,1310,3.059,1311,3.059,1312,5.606,1313,4.64,1314,3.059,1315,3.059,1316,3.059]],["title/interfaces/PagesState.html",[362,0.283,1278,3.479]],["body/interfaces/PagesState.html",[3,0.231,4,0.231,9,0.174,43,1.991,49,0.009,50,1.433,59,2.38,85,0.455,88,0.959,99,0.262,100,0.641,189,0.006,190,0.007,191,0.006,233,3.113,239,0.397,279,1.581,281,0.446,362,0.381,363,1.4,398,2.528,424,5.676,425,4.403,1178,4.403,1266,3.957,1277,4.691,1278,5.676,1317,5.535,1318,7.202,1319,6.698]],["title/injectables/PagesStore.html",[279,0.969,1266,2.935]],["body/injectables/PagesStore.html",[3,0.227,4,0.227,9,0.172,43,2.572,46,1.144,49,0.009,50,1.41,59,2.341,85,0.452,88,0.944,99,0.259,100,0.631,189,0.006,190,0.007,191,0.006,233,3.063,239,0.476,279,1.566,280,2.28,281,0.534,362,0.375,398,2.51,424,5.62,425,4.331,1178,4.331,1266,4.741,1277,4.615,1278,4.615,1317,5.445,1318,6.632,1319,7.151,1320,6.166]],["title/interfaces/Paragraph.html",[362,0.283,471,1.973]],["body/interfaces/Paragraph.html",[3,0.133,4,0.133,6,1.636,9,0.101,12,0.278,28,0.464,29,1.385,49,0.009,51,1.24,52,1.323,54,1.804,99,0.28,133,3.956,142,2.236,143,2.795,144,2.81,153,1.367,189,0.004,190,0.005,191,0.004,239,0.477,281,0.258,286,2.042,303,1.201,305,2.069,314,0.811,354,1.242,362,0.518,363,0.811,366,1.667,368,1.378,376,2.374,398,2.109,402,1.541,433,1.098,460,2.012,463,1.587,464,1.936,465,2.92,466,2.92,467,1.936,468,1.743,469,2.92,470,2.81,471,3.381,472,2.81,473,3.3,474,2.81,475,2.012,476,1.497,477,2.81,478,3.47,479,3.041,480,2.012,481,3.437,482,2.095,483,2.095,484,2.095,485,2.095,486,2.095,487,2.81,488,2.012,489,2.012]],["title/interfaces/ParagraphBlock.html",[362,0.283,472,2.48]],["body/interfaces/ParagraphBlock.html",[3,0.134,4,0.134,6,1.644,9,0.102,12,0.279,28,0.467,29,1.389,49,0.009,51,1.247,52,1.326,54,1.733,99,0.28,133,3.387,142,2.244,143,2.799,144,2.82,153,1.376,189,0.004,190,0.005,191,0.004,239,0.493,281,0.259,286,1.982,303,1.161,305,2.075,314,0.815,354,1.248,362,0.523,363,0.815,366,1.671,368,1.385,376,2.383,398,2.244,402,1.548,433,1.103,460,2.021,463,1.594,464,1.945,465,2.93,466,2.93,467,1.945,468,1.752,469,2.93,470,2.82,471,3.204,472,3.317,473,3.305,474,2.82,475,2.021,476,1.504,477,2.82,478,3.477,479,3.051,480,2.021,481,3.446,482,2.105,483,2.105,484,2.105,485,2.105,486,2.105,487,2.82,488,2.021,489,2.021]],["title/injectables/PluginCode.html",[279,0.969,1321,3.479]],["body/injectables/PluginCode.html",[3,0.21,4,0.21,9,0.159,12,0.437,18,2.358,28,0.732,31,2.276,34,2.486,46,1.061,49,0.009,63,3.045,85,0.458,88,0.875,99,0.197,100,0.585,111,1.73,153,1.097,189,0.006,190,0.007,191,0.006,239,0.52,279,1.494,280,2.114,281,0.51,429,2.796,433,2.678,437,3.442,440,3.696,442,1.467,449,2.956,753,5.776,1021,3.3,1321,5.364,1322,5.717,1323,5.717,1324,5.717]],["title/modules/PluginCodeModule.html",[192,0.784,1092,2.935]],["body/modules/PluginCodeModule.html",[3,0.213,4,0.213,9,0.162,12,0.444,15,2.298,49,0.009,54,1.732,85,0.404,88,0.888,99,0.2,100,0.594,153,1.107,166,2.09,189,0.006,190,0.007,191,0.006,192,1.33,194,2.037,195,2.146,196,2.394,197,2.394,198,3.075,199,2.204,210,3.071,211,2.394,212,2.327,223,2.822,239,0.499,281,0.413,449,2.606,1056,3.475,1057,3.86,1059,3.475,1092,5.467,1321,6.48,1325,5.126,1326,5.126,1327,5.805,1328,3.86,1329,3.35,1330,5.805,1331,3.498,1332,5.805]],["title/interfaces/PluginConfig.html",[362,0.283,444,2.576]],["body/interfaces/PluginConfig.html",[3,0.177,4,0.177,9,0.134,12,0.367,14,1.024,31,2.033,46,1.188,49,0.009,52,1.4,85,0.357,88,0.735,99,0.276,100,0.655,103,2.497,111,1.452,180,1.048,189,0.005,190,0.006,191,0.005,192,1.215,239,0.405,272,3.075,281,0.455,285,1.525,303,1.118,314,1.839,322,1.873,362,0.467,363,1.073,429,3.121,430,3.593,431,3.188,432,2.893,433,2.712,434,2.771,435,3.577,437,3.459,438,3.188,439,2.771,440,3.149,441,4.783,442,1.232,443,2.977,444,3.548,445,4.251,446,2.232,447,2.771,448,3.188,449,1.729,450,3.548,451,3.548,452,2.717,453,2.893,454,3.031,455,2.893,456,2.099,457,2.661,458,3.031,461,2.661,1333,4.801]],["title/interfaces/PluginConfig-1.html",[354,1.342,362,0.238,444,2.174]],["body/interfaces/PluginConfig-1.html",[3,0.176,4,0.176,9,0.133,12,0.366,14,1.02,31,2.027,46,1.184,49,0.009,52,1.397,85,0.356,88,0.732,99,0.276,100,0.653,103,2.49,111,1.446,180,1.044,189,0.005,190,0.006,191,0.005,192,1.212,239,0.486,272,3.066,281,0.454,285,1.518,303,1.117,314,1.837,322,1.865,362,0.466,363,1.068,429,3.117,431,3.175,432,2.881,433,2.71,434,2.759,435,3.569,437,3.452,438,3.175,439,2.759,440,3.142,441,4.773,442,1.227,443,2.968,444,3.538,445,4.239,446,2.223,447,2.759,448,3.175,449,1.722,450,3.538,451,3.538,452,2.71,453,2.881,454,3.018,455,2.881,456,2.09,457,2.65,458,3.018,459,3.578,461,2.65,1334,4.781]],["title/injectables/PluginHeader.html",[279,0.969,1335,3.265]],["body/injectables/PluginHeader.html",[3,0.21,4,0.21,9,0.159,12,0.436,18,2.352,28,0.73,31,2.273,34,2.484,46,1.058,49,0.009,63,3.042,85,0.457,88,0.873,99,0.197,100,0.583,111,1.725,153,1.095,189,0.006,190,0.007,191,0.006,239,0.519,279,1.492,280,2.108,281,0.509,429,2.791,433,2.677,437,3.939,440,3.419,442,1.463,449,2.953,473,3.038,1021,3.291,1335,5.026,1336,5.703,1337,5.703,1338,4.596]],["title/modules/PluginHeaderModule.html",[192,0.784,1093,2.801]],["body/modules/PluginHeaderModule.html",[3,0.213,4,0.213,9,0.161,12,0.443,15,2.294,49,0.009,54,1.729,85,0.403,88,0.886,99,0.2,100,0.592,153,1.106,166,2.085,189,0.006,190,0.007,191,0.006,192,1.329,194,2.032,195,2.14,196,2.388,197,2.388,198,3.071,199,2.198,210,3.067,211,2.388,212,2.322,223,2.818,239,0.499,281,0.412,449,2.602,473,3.067,1056,3.47,1057,3.853,1059,3.47,1093,5.215,1328,3.853,1329,3.342,1331,3.489,1335,6.078,1339,5.112,1340,5.112,1341,5.79,1342,5.79,1343,5.79]],["title/injectables/PluginImage.html",[279,0.969,1344,3.479]],["body/injectables/PluginImage.html",[3,0.21,4,0.21,9,0.159,12,0.436,18,2.352,28,0.73,31,2.273,34,2.484,46,1.058,49,0.009,63,3.042,85,0.457,88,0.873,99,0.197,100,0.583,111,1.725,153,1.095,189,0.006,190,0.007,191,0.006,239,0.519,279,1.492,280,2.108,281,0.509,429,2.791,433,2.677,437,3.939,440,3.419,442,1.463,449,2.953,478,3.437,1021,3.291,1344,5.355,1345,5.703,1346,5.703,1347,5.703]],["title/modules/PluginImageModule.html",[192,0.784,1132,3.087]],["body/modules/PluginImageModule.html",[3,0.213,4,0.213,9,0.162,12,0.444,15,2.298,49,0.009,54,1.732,85,0.404,88,0.888,99,0.2,100,0.594,153,1.107,166,2.09,189,0.006,190,0.007,191,0.006,192,1.33,194,2.037,195,2.146,196,2.394,197,2.394,198,3.075,199,2.204,210,3.071,211,2.394,212,2.327,223,2.822,239,0.499,281,0.413,449,2.606,1056,3.475,1057,3.86,1059,3.475,1132,5.75,1328,3.86,1329,3.35,1331,3.498,1344,6.48,1348,5.126,1349,5.126,1350,5.805,1351,5.126,1352,5.126]],["title/injectables/PluginLink.html",[279,0.969,1353,3.479]],["body/injectables/PluginLink.html",[3,0.21,4,0.21,9,0.159,12,0.437,18,2.358,28,0.732,31,2.276,34,2.486,46,1.061,49,0.009,63,3.045,85,0.458,88,0.875,99,0.197,100,0.585,111,1.73,153,1.097,189,0.006,190,0.007,191,0.006,239,0.52,279,1.494,280,2.114,281,0.51,377,4.319,429,2.796,433,2.678,437,3.942,440,3.423,442,1.467,449,2.956,1021,3.3,1353,5.364,1354,5.717,1355,5.717,1356,5.717]],["title/modules/PluginLinkModule.html",[192,0.784,1094,2.935]],["body/modules/PluginLinkModule.html",[3,0.213,4,0.213,9,0.162,12,0.444,15,2.298,49,0.009,54,1.732,85,0.404,88,0.888,99,0.2,100,0.594,153,1.107,166,2.09,189,0.006,190,0.007,191,0.006,192,1.33,194,2.037,195,2.146,196,2.394,197,2.394,198,3.075,199,2.204,210,3.071,211,2.394,212,2.327,223,2.822,239,0.499,281,0.413,449,2.606,1056,3.475,1057,3.86,1059,3.475,1094,5.467,1328,3.86,1329,3.35,1331,3.498,1353,6.48,1357,5.126,1358,5.126,1359,5.805,1360,5.805,1361,5.805]],["title/injectables/PluginList.html",[279,0.969,1362,3.265]],["body/injectables/PluginList.html",[3,0.21,4,0.21,9,0.159,12,0.436,18,2.352,28,0.73,31,2.273,34,2.484,46,1.058,49,0.009,63,3.042,85,0.457,88,0.873,99,0.197,100,0.583,111,1.725,143,2.512,153,1.095,189,0.006,190,0.007,191,0.006,239,0.519,279,1.492,280,2.108,281,0.509,429,2.791,433,2.677,437,3.939,440,3.419,442,1.463,449,2.953,1021,3.291,1362,5.026,1363,5.703,1364,5.703,1365,5.036]],["title/modules/PluginListModule.html",[192,0.784,1095,2.935]],["body/modules/PluginListModule.html",[3,0.213,4,0.213,9,0.161,12,0.443,15,2.294,49,0.009,54,1.729,85,0.403,88,0.886,99,0.2,100,0.592,153,1.106,166,2.085,189,0.006,190,0.007,191,0.006,192,1.329,194,2.032,195,2.14,196,2.388,197,2.388,198,3.071,199,2.198,210,3.067,211,2.388,212,2.322,223,2.818,239,0.499,281,0.412,449,2.602,1056,3.47,1057,3.853,1059,3.47,1095,5.463,1328,3.853,1329,3.342,1331,3.489,1362,6.078,1366,5.112,1367,5.112,1368,5.79,1369,5.79,1370,5.79]],["title/injectables/PluginMarker.html",[279,0.969,1371,3.479]],["body/injectables/PluginMarker.html",[3,0.196,4,0.196,9,0.149,12,0.409,18,2.203,28,0.683,31,2.18,34,2.692,46,1.274,49,0.009,63,3.145,85,0.447,88,0.817,99,0.184,100,0.546,111,2.077,152,4.559,189,0.005,190,0.007,191,0.005,239,0.524,279,1.431,280,1.975,281,0.54,303,0.778,429,2.678,433,2.691,435,4.21,437,3.845,440,3.317,442,1.371,449,2.883,1021,3.083,1371,5.137,1372,5.342,1373,7.07,1374,5.342,1375,5.342,1376,5.342,1377,5.342]],["title/modules/PluginMarkerModule.html",[192,0.784,1096,2.935]],["body/modules/PluginMarkerModule.html",[3,0.213,4,0.213,9,0.161,12,0.443,15,2.294,49,0.009,54,1.729,85,0.403,88,0.886,99,0.2,100,0.592,152,4.798,166,2.085,189,0.006,190,0.007,191,0.006,192,1.329,194,2.032,195,2.14,196,2.388,197,2.388,198,3.071,199,2.198,210,3.067,211,2.388,212,2.322,223,2.818,239,0.499,281,0.412,449,2.602,1056,3.47,1057,3.853,1059,3.47,1096,5.463,1328,3.853,1329,3.342,1331,3.489,1371,6.476,1373,6.379,1378,5.112,1379,5.112,1380,5.79,1381,5.79,1382,5.79]],["title/injectables/PluginParagraph.html",[279,0.969,1383,3.265]],["body/injectables/PluginParagraph.html",[3,0.21,4,0.21,9,0.159,12,0.437,18,2.358,28,0.732,31,2.276,34,2.486,46,1.061,49,0.009,63,3.045,85,0.458,88,0.875,99,0.197,100,0.585,111,1.73,153,1.097,189,0.006,190,0.007,191,0.006,239,0.52,279,1.494,280,2.114,281,0.51,429,2.796,433,2.678,437,3.942,440,3.423,442,1.467,449,2.956,471,3.042,1021,3.3,1383,5.034,1384,5.717,1385,5.717,1386,4.278]],["title/modules/PluginParagraphModule.html",[192,0.784,1097,2.801]],["body/modules/PluginParagraphModule.html",[3,0.213,4,0.213,9,0.162,12,0.444,15,2.298,49,0.009,54,1.732,85,0.404,88,0.888,99,0.2,100,0.594,153,1.107,166,2.09,189,0.006,190,0.007,191,0.006,192,1.33,194,2.037,195,2.146,196,2.394,197,2.394,198,3.075,199,2.204,210,3.071,211,2.394,212,2.327,223,2.822,239,0.499,281,0.413,449,2.606,1056,3.475,1057,3.86,1059,3.475,1097,5.218,1328,3.86,1329,3.35,1331,3.498,1383,6.082,1387,5.126,1388,5.126,1389,5.805,1390,5.805,1391,5.805]],["title/injectables/PluginSimpleImage.html",[279,0.969,1392,3.479]],["body/injectables/PluginSimpleImage.html",[3,0.207,4,0.207,9,0.156,12,0.43,18,2.317,28,0.719,31,2.251,34,2.467,46,1.042,49,0.009,63,3.029,85,0.455,88,0.86,99,0.194,100,0.575,111,1.7,153,1.085,189,0.005,190,0.007,191,0.005,239,0.517,279,1.478,280,2.077,281,0.504,429,2.765,433,2.669,437,3.405,440,3.396,442,1.442,449,2.553,478,3.73,615,3.646,1021,3.243,1149,5.713,1252,6.26,1392,5.305,1393,6.26,1394,5.619,1395,6.26,1396,5.619,1397,5.619]],["title/modules/PluginSimpleImageModule.html",[192,0.784,1098,2.935]],["body/modules/PluginSimpleImageModule.html",[3,0.21,4,0.21,9,0.159,12,0.436,15,2.273,49,0.009,85,0.399,88,0.873,99,0.197,100,0.583,153,1.095,166,2.054,189,0.006,190,0.007,191,0.006,192,1.319,194,2.002,195,2.108,196,2.352,197,2.352,198,3.05,199,2.165,210,3.038,211,2.352,212,2.287,223,2.791,239,0.495,281,0.406,446,3.328,449,2.577,478,3.437,1056,3.437,1057,3.817,1059,3.437,1098,5.442,1149,4.596,1328,3.817,1329,3.291,1331,3.437,1351,5.036,1352,5.036,1392,6.451,1393,5.036,1395,6.905,1398,5.036,1399,5.036,1400,5.703]],["title/classes/Ready.html",[100,0.476,503,2.032]],["body/classes/Ready.html",[3,0.161,4,0.161,9,0.122,18,3.303,28,0.56,29,1.343,34,1.909,43,1.39,46,1.274,48,1.536,49,0.009,50,1,51,1.217,52,0.851,54,1.048,55,1.913,85,0.335,99,0.283,100,0.793,102,3.697,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.579,303,1.129,411,1.972,442,1.123,498,4.297,503,3.502,510,4.099,511,2.526,512,4.669,513,2.763,514,4.735,515,3.074,516,4.824,519,3.074,520,2.906,521,3.964,522,2.763,523,3.964,524,3.796,525,1.913,526,3.964,527,2.763,528,4.139,529,3.074,530,4.894,531,3.494,532,3.074,533,3.074,534,4.223,535,2.906,1401,6.013,1402,4.376]],["title/interfaces/ReadyMap.html",[362,0.283,504,2.683]],["body/interfaces/ReadyMap.html",[3,0.168,4,0.168,9,0.127,12,0.35,46,0.848,49,0.009,51,0.857,85,0.392,92,5.205,94,2.533,95,2.059,99,0.28,106,2.016,153,1.075,189,0.004,190,0.006,191,0.004,239,0.542,281,0.441,303,1.208,305,1.525,314,1.965,322,3.431,362,0.493,363,1.021,366,2.024,401,1.689,417,1.383,442,1.172,461,2.533,476,2.554,490,2.637,491,3.035,492,5.841,493,2.885,495,3.432,496,2.885,497,3.732,498,2.35,499,2.754,500,2.195,501,2.754,502,3.574,503,2.707,504,3.574,505,2.885,506,2.35,507,2.269,508,2.637,1403,4.57]],["title/classes/SaveEnd.html",[100,0.476,526,2.683]],["body/classes/SaveEnd.html",[3,0.161,4,0.161,9,0.122,18,3.303,28,0.56,29,1.343,34,1.909,43,1.39,46,1.274,48,1.536,49,0.009,50,1,51,1.217,52,0.851,54,1.048,55,1.913,85,0.335,99,0.283,100,0.793,102,3.697,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.579,303,1.129,411,1.972,442,1.123,498,4.297,503,3.389,510,4.099,511,2.526,512,4.669,513,2.763,514,4.735,515,3.074,516,4.824,519,3.074,520,2.906,521,3.964,522,2.763,523,3.964,524,3.796,525,1.913,526,4.268,527,2.763,528,4.139,529,3.074,530,4.894,531,3.494,532,4.223,533,3.074,534,3.074,535,2.906,1404,6.013,1405,4.376]],["title/classes/SaveStart.html",[100,0.476,523,2.683]],["body/classes/SaveStart.html",[3,0.161,4,0.161,9,0.122,18,3.303,28,0.56,29,1.343,34,1.909,43,1.39,46,1.274,48,1.536,49,0.009,50,1,51,1.217,52,0.851,54,1.048,55,1.913,85,0.335,99,0.283,100,0.793,102,3.697,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.579,303,1.129,411,1.972,442,1.123,498,4.297,503,3.389,510,4.099,511,2.526,512,4.669,513,2.763,514,4.735,515,3.074,516,4.824,519,3.074,520,2.906,521,3.964,522,2.763,523,4.268,524,3.796,525,1.913,526,3.964,527,2.763,528,4.139,529,4.223,530,4.894,531,3.494,532,3.074,533,3.074,534,3.074,535,2.906,1406,6.013,1407,4.376]],["title/components/SidebarComponent.html",[0,1.864,184,2.683]],["body/components/SidebarComponent.html",[0,2.903,1,2.8,2,3.721,3,0.178,4,0.178,5,3.222,6,2.187,7,2.8,8,3.222,9,0.135,10,2.749,21,3.063,22,5.468,23,2.162,24,4.281,26,4.281,28,0.621,36,4.528,41,6.393,42,6.393,46,1.196,49,0.009,50,1.655,51,0.892,59,1.842,73,3.477,85,0.36,86,4.363,88,0.743,90,1.541,91,2.924,99,0.167,100,0.496,166,1.747,167,4.281,168,3.202,169,2.41,170,5.123,171,3.222,172,3.222,173,2.588,174,2.924,175,3.222,176,2.8,177,3.222,178,3.222,179,2.588,180,1.407,181,3.222,182,2.689,183,3.222,184,4.453,185,3.063,186,2.495,187,2.924,188,3.222,189,0.005,190,0.006,191,0.005,312,2.969,1408,7.24,1409,4.852,1410,7.24,1411,6.447,1412,4.852,1413,4.852,1414,6.447,1415,7.715,1416,6.447]],["title/interfaces/Tag.html",[362,0.283,1168,3.087]],["body/interfaces/Tag.html",[3,0.225,4,0.225,9,0.17,28,0.783,29,1.67,37,4.296,49,0.009,51,0.846,59,2.322,85,0.417,90,1.943,99,0.278,153,1.144,189,0.006,190,0.007,191,0.006,233,3.038,239,0.473,281,0.435,303,1.224,314,1.878,362,0.491,363,1.366,398,1.896,417,1.851,551,4.14,1165,4.93,1166,4.577,1167,5.249,1168,5.359]],["title/classes/TestClass.html",[100,0.476,772,3.479]],["body/classes/TestClass.html",[3,0.188,4,0.188,9,0.142,18,2.104,28,0.653,31,2.116,34,1.62,43,2.357,46,1.236,49,0.009,63,1.837,64,2.534,85,0.414,99,0.256,100,0.805,108,3.221,111,2.38,189,0.005,190,0.006,191,0.005,281,0.528,303,0.743,379,3.679,417,2.016,429,2.599,433,1.544,435,3.31,440,2.913,442,1.309,511,2.945,525,2.231,536,3.846,553,3.099,594,3.388,595,3.388,725,3.221,726,3.221,727,3.846,762,3.818,763,4.112,764,4.112,770,4.112,771,4.112,772,5.553,773,4.112,774,3.818,775,5.981,776,4.112,777,4.112,778,3.584,779,4.112,780,3.818,781,4.112,782,4.112,1417,5.102,1418,5.102]],["title/interfaces/TinynodeDemos.html",[362,0.283,419,2.391]],["body/interfaces/TinynodeDemos.html",[3,0.158,4,0.158,9,0.12,12,0.33,14,1.454,23,1.748,28,0.551,29,1.329,49,0.009,50,1.36,51,0.596,57,3.384,78,1.636,85,0.332,90,1.369,99,0.275,106,2.218,118,2.927,124,3.173,153,0.911,180,1.845,189,0.004,190,0.006,191,0.004,218,3.297,239,0.542,281,0.307,285,1.369,286,2.246,303,0.627,305,1.438,312,2.519,314,1.522,319,2.217,320,1.336,324,2.217,325,2.141,326,3.485,349,3.007,362,0.497,363,0.963,366,1.159,372,2.141,382,1.884,398,1.336,403,1.942,408,2.862,409,2.299,410,2.389,411,2.681,412,2.141,413,2.07,414,2.217,415,2.299,416,2.141,417,1.8,418,3.779,419,3.06]],["title/interfaces/TinynodeDemos-1.html",[354,1.342,362,0.238,419,2.017]],["body/interfaces/TinynodeDemos-1.html",[3,0.161,4,0.161,9,0.122,10,1.665,12,0.335,14,1.467,23,1.545,28,0.561,29,1.345,49,0.009,50,1.376,51,0.607,57,3.415,78,1.665,85,0.336,90,1.392,99,0.277,106,2.238,118,2.945,153,0.921,180,1.852,189,0.004,190,0.006,191,0.004,218,3.289,239,0.543,285,1.392,286,2.254,303,0.638,305,1.463,312,2.226,314,1.536,319,2.255,320,1.359,324,2.255,325,2.178,326,3.504,349,3.026,362,0.499,363,0.98,366,1.179,382,1.917,398,1.359,403,1.976,409,2.339,410,2.43,411,2.713,412,2.178,413,2.106,414,2.255,415,2.339,416,2.178,417,1.822,418,3.806,419,3.096,420,2.912]],["title/interfaces/ToolSettingsMap.html",[362,0.283,447,2.683]],["body/interfaces/ToolSettingsMap.html",[3,0.176,4,0.176,9,0.133,12,0.366,14,1.02,31,2.027,46,1.184,49,0.009,52,1.397,85,0.356,88,0.732,99,0.276,100,0.489,103,2.49,111,1.446,180,1.044,189,0.005,190,0.006,191,0.005,192,1.077,239,0.404,272,3.066,281,0.454,285,1.518,303,1.117,314,1.837,322,2.49,362,0.466,363,1.068,429,2.803,430,3.578,431,3.175,432,2.881,433,2.696,434,2.759,435,3.569,437,3.838,438,3.175,439,2.759,440,3.353,441,5.093,442,1.227,443,2.223,444,2.65,445,3.175,446,2.968,447,3.684,448,4.239,449,2.299,450,3.538,451,3.538,452,2.71,453,2.881,454,3.018,455,2.881,456,2.09,457,2.65,458,3.018,461,2.65,1419,4.781]],["title/interfaces/ToolSettingsMap-1.html",[354,1.342,362,0.238,447,2.263]],["body/interfaces/ToolSettingsMap-1.html",[3,0.175,4,0.175,9,0.133,12,0.364,14,1.016,31,2.022,46,1.181,49,0.009,52,1.394,85,0.355,88,0.729,99,0.275,100,0.487,103,2.483,111,1.44,180,1.039,189,0.005,190,0.006,191,0.005,192,1.074,239,0.485,272,3.057,281,0.453,285,1.512,303,1.115,314,1.834,322,2.483,362,0.465,363,1.064,429,2.797,431,3.162,432,2.869,433,2.695,434,2.748,435,3.562,437,3.833,438,3.162,439,2.748,440,3.347,441,5.084,442,1.221,443,2.214,444,2.638,445,3.162,446,2.96,447,3.674,448,4.227,449,2.292,450,3.528,451,3.528,452,2.702,453,2.869,454,3.005,455,2.869,456,2.081,457,2.638,458,3.005,459,3.563,461,2.638,1420,4.761]],["title/changelog.html",[1421,2.755,1422,2.755,1423,2.263]],["body/changelog.html",[0,2.093,13,2.784,14,1.113,15,1.657,23,1.339,49,0.007,53,3.048,54,1.249,56,2.684,90,2.383,91,3.145,103,2.638,105,5.061,153,0.799,189,0.005,190,0.007,191,0.005,192,1.141,199,1.981,218,2.5,239,0.475,386,2.893,394,4.491,401,1.929,452,3.49,468,2.507,474,2.784,507,3.359,559,3.295,586,3.906,686,3.666,695,4.608,727,3.012,742,3.906,745,6.046,746,4.608,748,3.906,752,3.295,823,3.666,825,3.906,826,3.906,849,4.206,1056,2.507,1058,3.666,1135,4.608,1258,4.608,1268,4.206,1293,3.666,1423,3.903,1424,5.219,1425,5.219,1426,3.906,1427,5.219,1428,5.219,1429,5.614,1430,6.763,1431,5.219,1432,5.219,1433,5.45,1434,5.219,1435,5.219,1436,6.763,1437,5.219,1438,5.219,1439,5.219,1440,5.219,1441,5.219,1442,5.219,1443,5.972,1444,4.206,1445,5.219,1446,5.219,1447,5.219,1448,6.763,1449,6.763,1450,5.219,1451,4.608,1452,5.972,1453,4.608,1454,4.206,1455,5.219,1456,5.219,1457,3.295,1458,5.219,1459,5.219,1460,5.219,1461,5.219,1462,5.219,1463,5.219,1464,5.219,1465,5.219,1466,5.219,1467,5.219,1468,5.219,1469,5.219,1470,5.219,1471,4.608,1472,4.608,1473,4.608]],["title/contributing.html",[1421,2.755,1422,2.755,1474,3.463]],["body/contributing.html",[9,0.097,17,2.604,34,1.622,46,0.646,48,1.221,49,0.005,84,2.804,101,2.725,103,1.993,156,2.804,189,0.005,190,0.005,191,0.003,195,1.286,242,4.878,306,2.804,362,0.212,368,1.321,409,1.856,456,2.233,474,1.856,495,1.929,500,2.454,507,2.537,514,2.008,527,2.197,559,2.197,564,2.008,601,2.804,624,2.604,707,2.804,727,3.493,753,6.185,823,3.588,825,2.604,834,5.375,871,3.079,896,3.073,900,3.073,904,2.197,1004,3.073,1059,2.454,1063,4.511,1072,4.251,1140,3.073,1160,3.073,1209,2.604,1237,2.604,1293,2.444,1452,4.511,1453,3.073,1457,5.34,1471,4.511,1472,3.073,1473,3.073,1474,4.511,1475,4.511,1476,5.345,1477,3.48,1478,3.48,1479,3.073,1480,3.073,1481,3.48,1482,3.48,1483,3.073,1484,7.674,1485,5.109,1486,3.48,1487,6.053,1488,3.48,1489,2.604,1490,3.48,1491,3.48,1492,4.117,1493,2.804,1494,3.073,1495,3.48,1496,3.48,1497,3.48,1498,3.48,1499,6.669,1500,2.804,1501,3.48,1502,2.804,1503,3.48,1504,3.48,1505,4.117,1506,3.48,1507,3.48,1508,4.511,1509,3.48,1510,3.48,1511,5.109,1512,3.48,1513,3.48,1514,5.109,1515,3.48,1516,7.103,1517,3.48,1518,7.103,1519,5.109,1520,3.073,1521,5.109,1522,3.48,1523,3.48,1524,3.48,1525,3.48,1526,3.48,1527,3.48,1528,3.48,1529,3.48,1530,5.109,1531,3.48,1532,3.48,1533,5.109,1534,3.48,1535,3.48,1536,3.48,1537,5.109,1538,3.48,1539,5.109,1540,7.103,1541,3.48,1542,3.48,1543,3.48,1544,3.48,1545,5.109,1546,3.48,1547,3.48,1548,3.48,1549,3.48,1550,3.48,1551,3.48,1552,3.48,1553,3.48,1554,3.48,1555,3.48,1556,3.48,1557,3.48,1558,3.48,1559,3.48,1560,5.109,1561,6.053,1562,3.48,1563,3.48,1564,3.48,1565,3.48,1566,3.48,1567,3.48,1568,3.48,1569,3.48,1570,5.109,1571,3.48,1572,3.48,1573,3.073,1574,3.48,1575,3.48,1576,3.48,1577,3.48,1578,5.109,1579,3.48,1580,3.48,1581,3.48,1582,5.109,1583,3.48,1584,3.073,1585,3.48,1586,3.48,1587,3.48,1588,3.48,1589,3.48,1590,5.109,1591,3.48,1592,3.48,1593,5.109,1594,3.48,1595,3.48,1596,3.48,1597,3.48,1598,3.48,1599,3.48,1600,3.48,1601,3.48,1602,3.48,1603,3.48,1604,3.48,1605,5.109,1606,3.48,1607,3.48,1608,3.48,1609,3.48,1610,3.48,1611,3.48,1612,3.48,1613,3.48,1614,5.109,1615,5.109,1616,5.109,1617,3.48,1618,3.48,1619,3.48,1620,3.48,1621,3.48,1622,3.48,1623,3.48,1624,3.48,1625,3.48,1626,3.48,1627,3.48,1628,5.109,1629,3.48,1630,5.109,1631,3.48,1632,3.48,1633,3.073,1634,3.48,1635,3.48,1636,5.109,1637,3.073,1638,3.48,1639,3.48,1640,3.48,1641,3.48,1642,3.48,1643,3.48,1644,3.48,1645,3.48,1646,3.48,1647,3.48,1648,3.48,1649,3.48,1650,3.48,1651,3.48,1652,3.48,1653,3.48,1654,3.48,1655,3.48,1656,3.48,1657,3.48,1658,3.48,1659,3.48,1660,3.48,1661,3.48,1662,3.48,1663,3.48,1664,3.48,1665,3.48,1666,3.48,1667,3.48]],["title/dependencies.html",[195,2.059,1444,3.161]],["body/dependencies.html",[49,0.009,88,0.851,89,3.908,91,3.353,95,2.507,180,1.538,189,0.005,190,0.007,191,0.005,195,2.057,225,4.913,226,4.913,228,5.678,229,4.679,233,3.499,234,4.913,235,4.913,236,2.672,238,4.913,241,4.484,270,3.083,442,1.428,473,2.362,520,3.695,747,3.512,959,4.163,983,3.695,986,4.484,1152,4.484,1338,4.484,1365,4.913,1386,4.163,1489,4.163,1668,5.564,1669,8.804,1670,5.564,1671,7.046,1672,5.564,1673,5.564,1674,5.564,1675,5.564,1676,5.564,1677,5.564,1678,5.564,1679,5.564,1680,5.564,1681,5.564,1682,7.046,1683,4.913,1684,5.564,1685,5.564,1686,5.564,1687,5.564,1688,5.564,1689,5.564,1690,5.564,1691,5.564,1692,5.564,1693,5.564]],["title/miscellaneous/enumerations.html",[1694,2.363,1695,4.918]],["body/miscellaneous/enumerations.html",[10,2.16,14,1.524,23,1.46,28,0.728,49,0.009,55,3.951,106,2.326,118,3.111,180,1.843,189,0.006,190,0.007,191,0.006,239,0.546,281,0.508,325,4.069,326,3.582,349,3.196,408,3.778,411,3.22,412,3.549,420,3.778,503,3.415,510,3.96,512,3.591,513,4.511,522,4.511,523,3.283,524,4.511,525,2.487,526,3.283,527,3.591,528,3.428,1694,3.428,1695,5.023,1696,5.689,1697,5.689,1698,4.585]],["title/miscellaneous/functions.html",[393,4.488,1694,2.363]],["body/miscellaneous/functions.html",[12,0.563,14,1.274,23,1.532,28,0.764,48,2.585,49,0.009,50,1.684,52,1.553,63,2.876,180,1.304,189,0.006,190,0.007,191,0.006,192,1.242,218,2.208,239,0.466,281,0.568,393,4.813,443,2.777,444,3.31,446,2.777,536,3.447,553,3.876,565,3.77,619,5.608,891,5.173,910,5.935,987,6.503,1022,4.469,1105,7.051,1505,4.813,1694,3.599,1699,5.273,1700,7.361,1701,5.972,1702,5.972,1703,5.273,1704,5.972,1705,5.972,1706,5.972,1707,5.972,1708,5.972]],["title/index.html",[28,0.502,1421,2.755,1422,2.755]],["body/index.html",[0,2.193,2,4.023,14,1.487,15,2.565,23,1.403,49,0.007,54,1.309,56,3.945,57,2.717,90,2.436,124,2.918,153,0.837,168,2.717,169,2.717,180,1.675,189,0.005,190,0.007,191,0.005,192,1.176,195,2.022,199,2.077,212,2.193,217,4.408,218,2.577,239,0.556,277,4.093,283,2.717,320,2.16,394,4.629,401,2.022,452,2.959,500,2.627,608,4.408,624,5.216,740,5.617,742,5.216,747,3.453,748,4.093,751,4.093,752,5.099,756,5.216,823,4.895,869,4.093,871,4.2,1056,2.627,1057,2.918,1121,5.617,1237,4.093,1423,4.427,1457,5.099,1475,6.774,1709,5.47,1710,5.47,1711,5.47,1712,5.47,1713,5.47,1714,5.47,1715,5.47,1716,4.629,1717,6.97,1718,4.83,1719,4.83,1720,4.408,1721,5.47]],["title/license.html",[1421,2.755,1422,2.755,1722,3.922]],["body/license.html",[23,1.428,49,0.007,94,3.083,189,0.005,190,0.007,191,0.005,212,2.231,402,2.362,495,3.083,514,3.211,752,3.512,825,5.786,841,4.163,871,4.246,1429,4.163,1500,4.484,1505,4.484,1508,6.221,1520,4.913,1633,4.913,1637,4.913,1718,4.913,1719,4.913,1723,4.913,1724,5.564,1725,5.564,1726,7.732,1727,5.564,1728,5.564,1729,5.564,1730,5.564,1731,5.564,1732,7.046,1733,8.887,1734,5.564,1735,5.564,1736,5.564,1737,7.046,1738,5.564,1739,5.564,1740,5.564,1741,4.913,1742,5.564,1743,5.564,1744,5.564,1745,5.564,1746,7.046,1747,5.564,1748,5.564,1749,5.564,1750,5.564,1751,5.564,1752,5.564,1753,7.046,1754,7.046,1755,5.564,1756,5.564,1757,5.564,1758,5.564,1759,5.564,1760,5.564,1761,5.564,1762,5.564,1763,5.564,1764,5.564,1765,5.564,1766,5.564,1767,5.564,1768,5.564,1769,5.564,1770,5.564,1771,5.564,1772,5.564,1773,5.564,1774,5.564,1775,5.564,1776,5.564,1777,5.564,1778,5.564,1779,5.564]],["title/modules.html",[194,2.199]],["body/modules.html",[49,0.007,189,0.005,190,0.007,191,0.005,193,3.787,194,1.892,204,3.787,205,4.587,206,3.581,207,3.112,208,3.787,209,4.587,229,6.126,368,2.893,578,3.787,1091,3.787,1092,3.404,1093,3.25,1094,3.404,1095,3.404,1096,3.404,1097,3.25,1098,3.404,1115,4.035,1128,4.035,1132,3.581,1151,4.346,1269,6.126,1780,9.224,1781,9.274,1782,7.62]],["title/overview.html",[1783,5.532]],["body/overview.html",[1,4.172,2,1.68,45,3.379,49,0.009,166,1.048,169,1.445,173,2.9,176,3.137,179,3.856,182,4.006,184,3.137,186,3.718,189,0.003,190,0.004,191,0.003,192,0.491,193,6.132,194,1.021,195,1.076,196,1.2,197,1.2,198,1.135,199,1.105,200,2.57,201,2.57,202,2.57,203,2.57,204,3.818,205,5.798,206,4.049,207,4.915,208,6.249,209,5.185,210,1.896,211,1.2,212,1.167,280,1.076,293,3.675,294,3.379,354,0.996,363,0.65,388,2.57,389,2.57,475,1.613,511,1.68,578,5.372,579,2.57,580,2.57,581,3.818,831,3.013,966,2.57,967,2.57,969,2.57,970,2.57,971,3.432,1087,2.57,1088,2.57,1089,2.57,1090,2.57,1091,5.731,1092,4.929,1093,4.705,1094,4.929,1095,4.929,1096,4.929,1097,4.705,1098,4.929,1115,4.563,1116,2.57,1128,6.603,1129,2.57,1130,2.57,1131,2.57,1132,5.08,1154,2.57,1156,2.57,1181,3.818,1263,2.57,1264,2.57,1265,3.818,1266,3.432,1321,4.068,1325,2.57,1326,2.57,1335,3.818,1339,2.57,1340,2.57,1344,4.068,1348,2.57,1349,2.57,1353,4.068,1357,2.57,1358,2.57,1362,3.818,1366,2.57,1367,2.57,1371,4.068,1378,2.57,1379,2.57,1383,3.818,1387,2.57,1388,2.57,1392,4.068,1398,2.57,1399,2.57,1783,2.57,1784,4.467,1785,2.91,1786,2.91]],["title/todo.html",[414,2.017,1421,2.755,1422,2.755]],["body/todo.html",[0,2.401,23,1.536,49,0.007,59,2.273,86,3.609,169,2.974,180,1.745,189,0.006,190,0.007,191,0.006,192,1.01,194,2.102,218,2.214,236,2.876,239,0.528,277,4.481,283,3.664,375,3.78,382,2.618,391,3.194,414,3.08,417,1.812,456,3.225,525,2.618,553,3.717,562,4.826,566,3.977,615,3.08,617,4.206,807,3.78,904,3.78,959,4.481,1002,6.209,1051,4.481,1254,5.287,1269,4.899,1329,3.456,1426,4.481,1573,5.287,1584,5.287,1723,5.287,1741,5.287,1787,5.988,1788,5.988,1789,5.988,1790,5.287,1791,5.988,1792,5.988,1793,5.988,1794,5.988,1795,5.988,1796,5.287,1797,5.287,1798,5.287]],["title/miscellaneous/typealiases.html",[1694,2.363,1799,5.569]],["body/miscellaneous/typealiases.html",[6,2.772,28,0.787,49,0.009,51,1.119,143,2.158,153,1.147,189,0.006,190,0.007,191,0.006,239,0.389,281,0.533,303,1.092,368,2.335,460,3.408,464,3.28,465,4.156,466,4.156,467,3.28,468,2.954,469,4.156,470,3.28,472,3.28,477,3.28,487,3.28,488,3.408,489,4.156,503,2.689,510,3.408,512,3.882,513,4.734,523,3.549,526,3.549,528,3.706,535,4.979,1694,3.706,1698,4.956,1800,6.15,1801,7.498]],["title/miscellaneous/variables.html",[1493,4.488,1694,2.363]],["body/miscellaneous/variables.html",[0,2.505,10,2.598,13,1.961,14,1.333,23,0.943,28,0.47,46,0.987,49,0.009,51,1.08,53,1.657,54,2.11,55,3.814,100,0.376,103,3.118,146,2.321,173,1.961,174,3.204,180,1.653,182,2.947,189,0.004,190,0.005,191,0.004,192,0.897,218,1.359,239,0.541,242,5.516,263,3.246,264,4.695,268,5.034,271,3.246,273,4.695,274,6.412,275,4.695,276,4.695,277,3.979,281,0.555,285,1.689,303,0.535,322,1.434,401,1.359,413,2.554,426,2.735,430,2.751,450,4.195,451,4.326,452,2.905,453,4.125,454,3.357,455,3.204,456,2.325,457,3.794,458,3.357,459,2.751,473,2.652,490,2.122,502,2.122,504,2.122,508,2.122,531,1.657,537,2.963,547,2.963,551,1.766,553,1.71,565,3.357,567,2.963,568,3.735,569,2.963,570,2.947,571,2.963,572,2.442,573,3.979,574,2.963,575,2.751,576,4.285,577,2.963,582,2.963,585,4.285,588,5.516,615,1.891,646,2.751,647,4.695,648,3.246,869,2.751,1099,4.285,1100,4.285,1109,4.695,1152,5.034,1153,4.695,1493,2.963,1683,3.246,1694,2.216,1698,4.285,1699,3.246,1700,4.695,1703,3.246,1802,3.676,1803,5.317,1804,6.247,1805,5.317,1806,3.676,1807,3.676,1808,5.317,1809,3.676,1810,6.845,1811,5.317,1812,3.676,1813,5.317,1814,3.676,1815,3.676,1816,3.676,1817,5.317,1818,3.676]],["title/additional-documentation/tinynodes-library-docs.html",[23,0.767,59,1.134,463,1.306,1058,2.098,1426,2.236]],["body/additional-documentation/tinynodes-library-docs.html",[23,1.722,49,0.008,81,5.927,180,1.465,189,0.007,190,0.008,191,0.007,287,5.409,742,5.023,745,5.409,747,4.988,748,5.023,1059,3.224,1268,5.409,1328,3.58,1423,3.874,1451,5.927,1454,5.409,1476,5.927,1483,5.927,1492,5.409,1500,5.409,1716,4.457,1720,5.409,1819,5.927,1820,7.902,1821,6.712]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[59,1.134,180,0.652,239,0.189,463,1.306,1716,1.984]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,2.618,12,0.255,13,1.777,14,0.711,15,1.874,17,2.493,31,1.058,49,0.009,51,0.461,52,0.648,54,1.413,56,3.035,63,1.2,85,0.408,86,2.982,88,0.51,90,2.074,99,0.171,100,0.341,103,2.302,111,1.008,124,1.777,128,2.493,129,2.008,143,1.169,153,0.903,168,2.457,169,2.457,179,1.777,180,0.727,186,1.714,187,2.008,189,0.003,190,0.005,191,0.003,192,1.177,193,2.34,196,1.374,197,1.374,198,1.3,207,2.855,218,2.181,219,1.847,223,1.93,227,4.369,228,2.685,229,2.213,239,0.556,257,2.34,283,2.931,285,1.058,286,1.55,297,1.923,300,2.493,308,3.987,314,1.318,320,2.024,322,1.3,373,2.855,385,2.104,386,3.271,391,2.639,401,2.181,402,1.414,413,1.6,417,1.976,426,1.714,433,1.497,436,3.286,442,1.269,443,3.244,446,2.744,452,2.505,455,2.982,456,2.58,457,2.742,467,2.639,471,2.1,473,1.414,500,1.6,506,1.714,514,1.923,521,1.923,531,2.943,538,4.145,539,2.34,540,3.475,541,2.34,542,3.475,543,3.475,548,2.34,551,2.376,553,2.301,554,2.34,555,2.34,556,2.213,557,3.475,558,2.34,559,2.104,564,1.923,566,3.919,572,2.213,615,3.035,646,3.702,707,2.685,725,2.104,726,2.104,727,1.923,728,2.493,741,2.942,747,3.725,751,2.493,752,2.104,823,2.34,826,2.493,831,1.847,840,2.34,849,2.685,871,3.936,898,2.942,901,3.987,904,2.104,974,4.369,975,4.369,979,4.369,997,2.685,1022,2.493,1046,2.942,1056,3.511,1057,1.777,1058,3.475,1059,1.6,1072,2.34,1093,2.008,1095,2.104,1097,2.008,1168,2.213,1209,2.493,1237,2.493,1238,2.942,1269,2.213,1328,2.639,1335,3.475,1362,3.475,1383,3.475,1386,2.493,1423,1.923,1426,4.416,1457,2.104,1479,2.942,1489,4.416,1494,2.942,1797,2.942,1798,2.942,1822,3.332,1823,3.332,1824,3.332,1825,3.332,1826,2.942,1827,3.332,1828,3.332,1829,5.901,1830,3.332,1831,4.947,1832,3.332,1833,3.332,1834,4.947,1835,3.332,1836,3.332,1837,3.332,1838,3.332,1839,3.332,1840,3.332,1841,3.332,1842,3.332,1843,3.332,1844,3.332,1845,3.332,1846,3.332,1847,2.942,1848,3.332]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[59,1.134,180,0.652,239,0.189,463,1.306,1423,1.724]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,2.62,7,2.3,9,0.111,14,0.85,15,1.266,16,3.556,29,0.89,31,1.266,49,0.005,52,0.775,54,1.793,56,2.897,63,1.435,86,2.402,90,1.266,91,2.402,100,0.576,104,3.519,143,1.399,162,4.215,168,2.798,169,3.245,179,2.126,180,0.87,186,2.05,189,0.004,190,0.005,191,0.004,192,1.198,207,2.3,218,1.473,239,0.539,279,0.831,283,3.527,285,1.266,286,1.047,288,2.647,298,2.799,300,2.982,303,0.58,320,1.746,362,0.242,368,2.139,386,3.122,394,2.647,401,2.769,402,3.014,429,1.555,433,1.977,435,2.798,436,2.647,443,3.038,446,2.619,452,3.466,456,2.463,464,2.126,468,3.921,471,1.692,473,1.692,500,3.138,510,4.152,531,1.796,545,2.982,551,1.914,564,3.251,566,2.647,570,3.122,586,2.982,615,2.897,747,3.556,752,4.125,807,2.516,831,3.122,841,4.215,869,2.982,871,3.395,904,2.516,910,3.212,971,2.516,1002,2.799,1022,2.982,1051,2.982,1058,5.262,1072,2.799,1209,2.982,1269,2.647,1270,3.519,1293,4.589,1423,3.771,1429,5.982,1433,3.212,1443,7.331,1444,4.54,1454,3.212,1457,4.729,1480,3.519,1502,3.212,1716,2.647,1720,5.723,1790,3.519,1819,3.519,1847,4.974,1849,3.519,1850,3.519,1851,3.519,1852,3.519,1853,3.519,1854,3.519,1855,3.519,1856,3.985,1857,7.058,1858,3.985,1859,3.985,1860,3.985,1861,3.985,1862,3.985,1863,3.985,1864,3.985,1865,3.985,1866,3.985,1867,3.985,1868,3.519,1869,3.985,1870,3.985,1871,3.519,1872,5.633,1873,3.985,1874,3.519,1875,6.534,1876,3.985,1877,3.519,1878,3.985,1879,3.985,1880,3.985,1881,3.985,1882,3.985,1883,3.985,1884,3.985,1885,5.633,1886,3.985,1887,3.985,1888,3.519,1889,3.985,1890,3.985,1891,3.985]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[59,1.013,180,0.583,239,0.169,452,1.133,463,1.167,1716,1.773]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[9,0.14,12,0.384,14,1.072,15,2.769,16,4.164,49,0.009,50,1.148,54,1.203,56,3.788,90,1.595,124,2.679,133,2.495,143,1.763,152,3.336,153,1.3,180,1.097,189,0.005,190,0.006,191,0.005,192,0.847,194,2.315,195,1.857,239,0.495,320,1.557,433,1.996,452,3.126,456,2.196,615,4.37,747,3.171,1092,3.171,1093,3.027,1094,3.171,1096,3.171,1097,3.027,1098,3.171,1132,3.336,1250,4.436,1269,4.381,1328,4.598,1338,4.048,1386,3.759,1457,3.171,1489,4.936,1716,5.725,1796,4.436,1826,4.436,1892,5.023,1893,5.023,1894,5.023,1895,5.023,1896,5.023,1897,5.023,1898,5.023]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[59,1.013,180,0.583,239,0.169,452,1.133,463,1.167,1423,1.541]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[9,0.174,34,1.98,49,0.007,54,1.492,91,3.757,162,4.665,189,0.006,190,0.007,191,0.006,192,1.373,285,1.98,402,2.646,415,3.325,452,2.646,468,2.994,510,3.455,570,3.455,641,4.665,752,3.936,904,3.936,971,4.773,1051,4.665,1056,2.994,1059,2.994,1293,5.31,1423,4.363,1429,6.089,1433,5.024,1457,4.773,1492,5.024,1502,5.024,1849,5.505,1850,5.505,1851,5.505,1852,5.505,1853,5.505,1854,5.505,1855,5.505,1857,7.185,1868,5.505,1871,5.505,1874,5.505,1877,5.505,1888,5.505,1899,6.234]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["0",{"_index":146,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["05",{"_index":1857,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1",{"_index":354,"title":{"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":1888,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.0.4",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1877,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.1",{"_index":1874,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.2",{"_index":1870,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":1449,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1867,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.0",{"_index":1860,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.1",{"_index":1856,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.4",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1665,"title":{},"body":{"contributing.html":{}}}],["10",{"_index":1875,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["100",{"_index":857,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["100vh",{"_index":130,"title":{},"body":{"components/AppContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["11",{"_index":1871,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["12th",{"_index":1446,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1868,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["13th",{"_index":1441,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":162,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["15th",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["1em",{"_index":865,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.0.8",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1429,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["22",{"_index":1784,"title":{},"body":{"overview.html":{}}}],["250px",{"_index":132,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["2px",{"_index":861,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3.0.2",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":154,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["4",{"_index":1234,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["43",{"_index":1786,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":157,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["6",{"_index":475,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["6.3.3",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1715,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1785,"title":{},"body":{"overview.html":{}}}],["85",{"_index":165,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["a:active",{"_index":139,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["a:hover",{"_index":138,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["above",{"_index":1752,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1631,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1588,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1552,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":848,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["accessors",{"_index":38,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/HomePageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1622,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1623,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":514,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["action.payload.holder",{"_index":954,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions",{"_index":944,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{}}}],["actions/ngx",{"_index":960,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actual_component",{"_index":188,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["adapted",{"_index":1663,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":1002,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["add(key",{"_index":1009,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["add(page",{"_index":1285,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1280,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1287,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":468,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":455,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":463,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1578,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":621,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["adheres",{"_index":1854,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1567,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":19,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["again",{"_index":1839,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["age",{"_index":1524,"title":{},"body":{"contributing.html":{}}}],["aggregate",{"_index":365,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["akitangdevtools",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangdevtools.forroot",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule.forroot",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":1800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":158,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["aligned",{"_index":1601,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":434,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["allows",{"_index":557,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["along",{"_index":1825,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["and/or",{"_index":1744,"title":{},"body":{"license.html":{}}}],["angular",{"_index":56,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular/animations",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":983,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["angular/compiler",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":88,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/flex",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":986,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":89,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{}}}],["any)(editorconfig",{"_index":658,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["any).onready",{"_index":782,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["aot",{"_index":1885,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":1057,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["api](https://editorjs.io/api",{"_index":1077,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":53,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":1830,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["app.component.scss",{"_index":25,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["appcomponent",{"_index":1829,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appcontainercomponent",{"_index":1,"title":{"components/AppContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["appear",{"_index":1242,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1534,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["application.model",{"_index":327,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}}}],["application.query",{"_index":328,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{}}}],["application.service",{"_index":395,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["application.store",{"_index":329,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}}}],["applicationdata",{"_index":323,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["applicationdatamodule",{"_index":205,"title":{"modules/ApplicationDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationquery",{"_index":293,"title":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"overview.html":{}}}],["applicationref",{"_index":606,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["applicationstate",{"_index":403,"title":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{}},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["applicationstatekeys",{"_index":325,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["applicationstatekeys.hidden",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["applicationstore",{"_index":294,"title":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"overview.html":{}}}],["applies",{"_index":1612,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":193,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":1624,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1590,"title":{},"body":{"contributing.html":{}}}],["approutes",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":204,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":369,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["apps/.../app",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../application.model.ts",{"_index":1697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../environment.prod.ts",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":45,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["area",{"_index":556,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["aria",{"_index":374,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["arising",{"_index":1777,"title":{},"body":{"license.html":{}}}],["array",{"_index":840,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["arrayadd",{"_index":1302,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1314,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1303,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1315,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1179,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":1734,"title":{},"body":{"license.html":{}}}],["async",{"_index":1039,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["attach",{"_index":869,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":1884,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":1572,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1566,"title":{},"body":{"contributing.html":{}}}],["attributes",{"_index":824,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["attribution",{"_index":1662,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1768,"title":{},"body":{"license.html":{}}}],["auto",{"_index":155,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["autofocus",{"_index":538,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":544,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["autosave",{"_index":617,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["available",{"_index":368,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["await",{"_index":1075,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":1051,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["background",{"_index":483,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1602,"title":{},"body":{"contributing.html":{}}}],["bar",{"_index":811,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":178,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":813,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":812,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":805,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:18",{"_index":816,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:21",{"_index":815,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:27",{"_index":817,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{}}}],["base",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Block.html":{}}}],["based",{"_index":1852,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":429,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":1826,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["basic",{"_index":488,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":1063,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["behavior",{"_index":1540,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1606,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":92,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{}}}],["behaviorsubject(0",{"_index":673,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["behaviorsubject(editor",{"_index":689,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["behaviorsubject(false",{"_index":107,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{}}}],["behaviorsubject(true",{"_index":1214,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["behaviorsubject(undefined",{"_index":668,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["behaviorsubject(value",{"_index":692,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["being",{"_index":1546,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":751,"title":{},"body":{"components/HomePageComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["best",{"_index":1556,"title":{},"body":{"contributing.html":{}}}],["beta.24",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":153,"title":{"interfaces/Block.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["block.id",{"_index":1316,"title":{},"body":{"injectables/PagesService.html":{}}}],["blocks",{"_index":417,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocks.subscribe",{"_index":953,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["blocksmap",{"_index":490,"title":{"interfaces/BlocksMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["blocktypes",{"_index":489,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["body",{"_index":1525,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":366,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["bootstrap",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":480,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1613,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":555,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["box",{"_index":1713,"title":{},"body":{"index.html":{}}}],["break",{"_index":1463,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1781,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browser/animations",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":1454,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["build",{"_index":1452,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builds",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":589,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":836,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["calling",{"_index":496,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["calls",{"_index":614,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":479,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":1260,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["cd",{"_index":1182,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["center",{"_index":159,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":507,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":510,"title":{"classes/Changed.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changedetection",{"_index":1172,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":1206,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1173,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":1183,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1423,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":1876,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":508,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["changes",{"_index":904,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":919,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":922,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":920,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1729,"title":{},"body":{"license.html":{}}}],["check",{"_index":1256,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["child.label",{"_index":1415,"title":{},"body":{"components/SidebarComponent.html":{}}}],["children",{"_index":378,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["ci",{"_index":1788,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1643,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1771,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1629,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1587,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":100,"title":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["classes",{"_index":511,"title":{},"body":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"overview.html":{}}}],["cleaning",{"_index":706,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["cleans",{"_index":628,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["cleanupsubjects(holder",{"_index":708,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["clear",{"_index":594,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"classes/TestClass.html":{}}}],["clear(holder",{"_index":612,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["clearhandler(holder",{"_index":720,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["clears",{"_index":1044,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":1239,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["client",{"_index":301,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["close",{"_index":1240,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["cluster_applicationdatamodule",{"_index":388,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_applicationdatamodule_providers",{"_index":389,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_editorjsinstancemodule",{"_index":579,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"overview.html":{}}}],["cluster_editorjsinstancemodule_providers",{"_index":580,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":1087,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":1088,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":1090,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":1089,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":966,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":967,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":969,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_imports",{"_index":968,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":970,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule",{"_index":1116,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule_imports",{"_index":1117,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1129,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1131,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1130,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule",{"_index":1154,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_exports",{"_index":1156,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_imports",{"_index":1155,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["cluster_pagestoremodule",{"_index":1263,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1264,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule",{"_index":1325,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule_providers",{"_index":1326,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":1339,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":1340,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule",{"_index":1348,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule_providers",{"_index":1349,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule",{"_index":1357,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule_providers",{"_index":1358,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":1366,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":1367,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule",{"_index":1378,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule_providers",{"_index":1379,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":1387,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":1388,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule",{"_index":1398,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule_providers",{"_index":1399,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":1377,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":753,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/PluginCode.html":{},"contributing.html":{}}}],["code.plugin",{"_index":1330,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["collection",{"_index":740,"title":{},"body":{"components/HomePageComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["color",{"_index":136,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["combinelatest",{"_index":643,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["combinelatest([this.eventmap[holder",{"_index":697,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["comments",{"_index":1570,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1597,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1458,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":982,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{}}}],["community",{"_index":1518,"title":{},"body":{"contributing.html":{}}}],["complaints",{"_index":1638,"title":{},"body":{"contributing.html":{}}}],["completes",{"_index":1052,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["compodoc",{"_index":1819,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component/editorjs.component",{"_index":990,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["component/editorjs.component.ts",{"_index":822,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:24",{"_index":847,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:30",{"_index":833,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:36",{"_index":837,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:42",{"_index":838,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:48",{"_index":842,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:54",{"_index":843,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:60",{"_index":844,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:66",{"_index":845,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:73",{"_index":839,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:80",{"_index":835,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:86",{"_index":832,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:93",{"_index":850,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/sidebar.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":1409,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:11",{"_index":1413,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:14",{"_index":1412,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component_template",{"_index":171,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{}}}],["components/nav",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["conditions",{"_index":1751,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1484,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1646,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":553,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["config.data",{"_index":939,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.holder",{"_index":653,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["config.ts",{"_index":1700,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":911,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":988,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":443,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configurations",{"_index":1022,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configured",{"_index":1891,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":1836,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["connection",{"_index":1778,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1581,"title":{},"body":{"contributing.html":{}}}],["console.log(blocks",{"_index":1082,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["console.log(changes",{"_index":918,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["console.log(this.holder",{"_index":1227,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["const",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["constructive",{"_index":1553,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["constructor(@inject(userplugins",{"_index":1025,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(actions",{"_index":943,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["constructor(app",{"_index":44,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["constructor(config",{"_index":765,"title":{},"body":{"classes/MockEditorJS.html":{},"injectables/NgxEditorJSService.html":{}}}],["constructor(editorjs",{"_index":602,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["constructor(el",{"_index":875,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":1180,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["constructor(payload",{"_index":515,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(private",{"_index":108,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{}}}],["constructor(protected",{"_index":404,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":530,"title":{},"body":{"classes/Changed.html":{},"components/NgxEditorJSComponent.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(query",{"_index":292,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/PagesService.html":{}}}],["constructor(service",{"_index":830,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":399,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["constructor(userplugins",{"_index":1005,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["contacting",{"_index":1635,"title":{},"body":{"contributing.html":{}}}],["contain",{"_index":384,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["container",{"_index":17,"title":{},"body":{"components/AppContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["container'},{'name",{"_index":183,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":1108,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":1175,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":1174,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":1170,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:100",{"_index":1201,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:107",{"_index":1190,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:114",{"_index":1185,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:121",{"_index":1189,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:135",{"_index":1203,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:147",{"_index":1186,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:30",{"_index":1194,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:50",{"_index":1196,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:57",{"_index":1192,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:59",{"_index":1184,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:83",{"_index":1197,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:90",{"_index":1199,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/page",{"_index":1107,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["containers/app/app.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["containers/editorjs",{"_index":989,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/page",{"_index":1106,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":492,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["contains",{"_index":744,"title":{},"body":{"components/HomePageComponent.html":{}}}],["content",{"_index":128,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["continue",{"_index":1468,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1775,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1541,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1474,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1600,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1605,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1515,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":807,"title":{},"body":{"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controlling",{"_index":1847,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":1254,"title":{},"body":{"components/PageContainerComponent.html":{},"todo.html":{}}}],["copies",{"_index":1746,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1732,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1726,"title":{},"body":{"license.html":{}}}],["core",{"_index":91,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["core.module.ts",{"_index":1158,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["core/src",{"_index":738,"title":{},"body":{"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/ngx",{"_index":1157,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["core/src/lib/stores/app/application.model",{"_index":1213,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["core/src/lib/stores/app/application.model.ts",{"_index":408,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{},"miscellaneous/enumerations.html":{}}}],["core/src/lib/stores/app/application.module.ts",{"_index":390,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["core/src/lib/stores/app/application.query.ts",{"_index":396,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.query.ts:10",{"_index":400,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.service.ts",{"_index":282,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:15",{"_index":296,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:34",{"_index":318,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:41",{"_index":315,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:49",{"_index":304,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:62",{"_index":310,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.store.ts",{"_index":421,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/stores/app/application.store.ts:10",{"_index":422,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/types/app.ts",{"_index":364,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{}}}],["coreapi",{"_index":1793,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1592,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":1820,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["covenant",{"_index":1664,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1667,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1460,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":584,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{}}}],["createconfig",{"_index":931,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":686,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":873,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["createeditor(config",{"_index":889,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["createeditorjsconfig",{"_index":910,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":1704,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createinstance",{"_index":590,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["createinstance(config",{"_index":616,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["createmoduleconfig",{"_index":987,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":1707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createngxeditorjsdemotools",{"_index":1105,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":619,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["createtools",{"_index":1831,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":1542,"title":{},"body":{"contributing.html":{}}}],["creation",{"_index":545,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["criticism",{"_index":1554,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":105,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"changelog.html":{}}}],["currently",{"_index":1268,"title":{},"body":{"modules/PageStoreModule.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["cursor",{"_index":148,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["custom",{"_index":467,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["cy.get('h1",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cycle",{"_index":1843,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["damages",{"_index":1772,"title":{},"body":{"license.html":{}}}],["darkgray",{"_index":863,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":286,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["data.blocks",{"_index":1230,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["data.json').subscribe((appdata",{"_index":332,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["data.length",{"_index":342,"title":{},"body":{"injectables/AppService.html":{}}}],["date.now",{"_index":726,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"dependencies.html":{}}}],["deal",{"_index":1735,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1779,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["decoration",{"_index":134,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["decorators",{"_index":69,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["deem",{"_index":1607,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1641,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":54,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_holder_id",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":980,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["define",{"_index":561,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":431,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["deigned",{"_index":1832,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":1450,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":711,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1290,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["demo.module.ts",{"_index":1100,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo.name",{"_index":345,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demo.routes",{"_index":1110,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/:id",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":1708,"title":{},"body":{"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/page",{"_index":1169,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["demo/src/lib/ngx",{"_index":1099,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1165,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1267,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1274,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1276,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1279,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1284,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1300,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1301,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1286,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1299,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1291,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1297,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1288,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1295,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1317,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1320,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demo](https://tinynodes",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["demodata",{"_index":326,"title":{"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["demodata.find(demo",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname",{"_index":307,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname).data",{"_index":346,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demos",{"_index":57,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{}}}],["dependencies",{"_index":195,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["dependency",{"_index":1797,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deps",{"_index":998,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["describes",{"_index":381,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":595,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["destroy(holder",{"_index":1048,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":66,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{}}}],["destroyinstance",{"_index":596,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["destroyinstance(holder",{"_index":625,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["destroys",{"_index":627,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":899,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":1059,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["detection",{"_index":716,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":1659,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1507,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1121,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1447,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":1709,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1548,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":859,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["directive",{"_index":169,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directives",{"_index":185,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":851,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1527,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":1047,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["discuss",{"_index":1477,"title":{},"body":{"contributing.html":{}}}],["dispatch",{"_index":965,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["display",{"_index":151,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["displays",{"_index":810,"title":{},"body":{"components/NavBarComponent.html":{}}}],["distinctuntilchanged",{"_index":96,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/PageContainerComponent.html":{}}}],["distribute",{"_index":1742,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1790,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["docs",{"_index":1058,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["document.createelement('div",{"_index":773,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["documentation",{"_index":752,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["documented",{"_index":1850,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":1491,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["download",{"_index":1822,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":1451,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["dynamic",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1617,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":382,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["e2e/src/support/app.po.ts",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":646,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easier",{"_index":1848,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easily",{"_index":1136,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["edit",{"_index":1595,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":576,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":615,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editor's",{"_index":554,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editor.blocks.clear",{"_index":721,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editor.blocks.render",{"_index":724,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editor.destroy",{"_index":681,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editor.isready.then",{"_index":659,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editor.saver.save().then(data",{"_index":718,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editorconfig",{"_index":591,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjs",{"_index":239,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs'},{'name",{"_index":181,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs.actions",{"_index":961,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.actions.ts",{"_index":513,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs.actions.ts:13",{"_index":1406,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:14",{"_index":1407,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:18",{"_index":1404,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:19",{"_index":1405,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:23",{"_index":1163,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:24",{"_index":1164,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:28",{"_index":1401,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:29",{"_index":1402,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:33",{"_index":517,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.actions.ts:34",{"_index":518,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.component.html",{"_index":828,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":827,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":852,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":867,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:107",{"_index":890,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:119",{"_index":895,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:132",{"_index":892,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:144",{"_index":905,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:29",{"_index":883,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:35",{"_index":880,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:41",{"_index":882,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:47",{"_index":885,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":886,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":887,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":888,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:72",{"_index":884,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:79",{"_index":881,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:85",{"_index":878,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:92",{"_index":907,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:99",{"_index":909,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.effects.ts",{"_index":942,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:10",{"_index":945,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:14",{"_index":956,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.module.ts",{"_index":973,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.module.ts:38",{"_index":978,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":728,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":1324,"title":{},"body":{"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":442,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/header",{"_index":1338,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/image",{"_index":1347,"title":{},"body":{"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":1356,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":1365,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":1376,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["editorjs/paragraph",{"_index":1386,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/simple",{"_index":1397,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src",{"_index":1207,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["editorjs/src/lib/config/editor",{"_index":1703,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":1706,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":821,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":866,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":972,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":1038,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:101",{"_index":1043,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:111",{"_index":1049,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:16",{"_index":1042,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:31",{"_index":1045,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:46",{"_index":1055,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:54",{"_index":1053,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:63",{"_index":1065,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:72",{"_index":1061,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:82",{"_index":1068,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:93",{"_index":1066,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":999,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:15",{"_index":1006,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:32",{"_index":1010,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:40",{"_index":1017,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:49",{"_index":1012,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:56",{"_index":1019,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:64",{"_index":1014,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":460,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":462,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":537,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":491,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:16",{"_index":731,"title":{},"body":{"interfaces/EventMap.html":{}}}],["editorjs/src/lib/types/maps.ts:26",{"_index":730,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/lib/types/maps.ts:36",{"_index":494,"title":{},"body":{"interfaces/BlocksMap.html":{}}}],["editorjs/src/lib/types/maps.ts:46",{"_index":1403,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:56",{"_index":509,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":430,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:17",{"_index":1419,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["editorjs/src/lib/types/plugins.ts:7",{"_index":1333,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs/src/lib/utils/editorjs",{"_index":582,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/testing/ng",{"_index":784,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":763,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":802,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":803,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:22",{"_index":767,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:23",{"_index":768,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:24",{"_index":769,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:25",{"_index":766,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":1417,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:7",{"_index":1418,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs@1.2.0",{"_index":1442,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.0",{"_index":1431,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":994,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_module_import",{"_index":585,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["editorjsactiontypes",{"_index":522,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["editorjsactiontypes.changed",{"_index":519,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.notready",{"_index":533,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.ready",{"_index":534,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.saveend",{"_index":532,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.savestart",{"_index":529,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsconfig",{"_index":536,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{}}}],["editorjsinstancemodule",{"_index":578,"title":{"modules/EditorJSInstanceModule.html":{}},"body":{"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules.html":{},"overview.html":{}}}],["editorjsinstanceservice",{"_index":581,"title":{"injectables/EditorJSInstanceService.html":{}},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"overview.html":{}}}],["editorjsplugin",{"_index":1886,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":501,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["editorservice",{"_index":877,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{}}}],["edits",{"_index":1599,"title":{},"body":{"contributing.html":{}}}],["effect",{"_index":957,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effect({dispatch",{"_index":955,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effects",{"_index":1124,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effects](https://ngrx.io/guide/effects",{"_index":1126,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule",{"_index":1125,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule.forfeature",{"_index":1127,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["el",{"_index":879,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1577,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":168,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":876,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["elements",{"_index":493,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["email",{"_index":1481,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":1558,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":423,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["enablelongstacktrace",{"_index":800,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["end",{"_index":527,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["enforce",{"_index":1653,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1630,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":1488,"title":{},"body":{"contributing.html":{}}}],["entity",{"_index":1313,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1318,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1319,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":1101,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["enum",{"_index":411,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1695,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":1067,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["error('error",{"_index":928,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["etc",{"_index":375,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"todo.html":{}}}],["ethnicity",{"_index":1528,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":495,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NavBarComponent.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"license.html":{}}}],["event.payload.blocks",{"_index":704,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["event.type",{"_index":699,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["eventemitter",{"_index":798,"title":{},"body":{"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{}}}],["eventemitter(false",{"_index":799,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["eventmap",{"_index":499,"title":{"interfaces/EventMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["events",{"_index":651,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["eventtype",{"_index":497,"title":{"interfaces/EventType.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["everyone",{"_index":1522,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":826,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["examples",{"_index":1499,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":1015,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["exclude.includes(key",{"_index":1033,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":1071,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":903,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["expanded",{"_index":1459,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1589,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1521,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1550,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1579,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":99,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exported",{"_index":448,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["exports",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":1792,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1494,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exposes",{"_index":1844,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["express",{"_index":1759,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1531,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":1833,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extending",{"_index":445,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["extends",{"_index":398,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["face",{"_index":1655,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":572,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":1880,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":1591,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1654,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":426,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["feature",{"_index":1798,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":756,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":1455,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1500,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["filter",{"_index":321,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["filter(([event",{"_index":698,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["filter(([key",{"_index":1032,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter((data",{"_index":339,"title":{},"body":{"injectables/AppService.html":{}}}],["filter(data",{"_index":361,"title":{},"body":{"injectables/AppService-1.html":{},"components/PageContainerComponent.html":{}}}],["filter(editor",{"_index":678,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["filter(menus",{"_index":348,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["finaltools",{"_index":1037,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":748,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["first",{"_index":559,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fitness",{"_index":1764,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1858,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fixes",{"_index":1878,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["flex",{"_index":858,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["flexlayoutmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["fn",{"_index":794,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["focus",{"_index":558,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focusing",{"_index":1555,"title":{},"body":{"contributing.html":{}}}],["folder",{"_index":1717,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1485,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1750,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":573,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["foreach(([key",{"_index":1027,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["format",{"_index":1851,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formatted",{"_index":1204,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["forms",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":985,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot",{"_index":974,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(@optional",{"_index":996,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":977,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["fostering",{"_index":1513,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1520,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["fully",{"_index":1710,"title":{},"body":{"index.html":{}}}],["function",{"_index":436,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["functions",{"_index":393,"title":{"miscellaneous/functions.html":{}},"body":{"modules/ApplicationDataModule.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1749,"title":{},"body":{"license.html":{}}}],["further",{"_index":1628,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":1834,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["gender",{"_index":1529,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1723,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generate",{"_index":1862,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["generated",{"_index":1720,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["get(key",{"_index":1011,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getasjson",{"_index":1202,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getblocks",{"_index":597,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["getblocks(holder",{"_index":629,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["getchanged",{"_index":598,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getchanged(holder",{"_index":631,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getdemodata",{"_index":290,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getdemodata('ngx",{"_index":1224,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getdemodata(demoname",{"_index":302,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["geteditor",{"_index":906,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(holder",{"_index":1054,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getgreeting",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethidden",{"_index":317,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getinstance",{"_index":599,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getinstance(holder",{"_index":633,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getlinks",{"_index":1198,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getmainmenu",{"_index":76,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getmenu",{"_index":291,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/HomePageComponent.html":{}}}],["getmenu(key",{"_index":309,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getopensourcemenu",{"_index":82,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getpages",{"_index":1200,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getpanelopen",{"_index":1195,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getplugins",{"_index":1018,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getprojectsmenu",{"_index":79,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getready",{"_index":600,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getready(holder",{"_index":635,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["gets",{"_index":311,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/PageContainerComponent.html":{}}}],["getservice",{"_index":908,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getsidebarhidden",{"_index":74,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getters",{"_index":1881,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["getting",{"_index":1421,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettools",{"_index":1003,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(exclude",{"_index":1013,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["github",{"_index":1328,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["good",{"_index":1473,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1551,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1728,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1782,"title":{},"body":{"modules.html":{}}}],["group",{"_index":380,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["groups",{"_index":367,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["guid",{"_index":1304,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":695,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"changelog.html":{}}}],["handler",{"_index":397,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/EditorJSInstanceService.html":{}}}],["handles",{"_index":705,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["handling",{"_index":1841,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["harassing",{"_index":1632,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1519,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1610,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":1040,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["haschanged(holder",{"_index":1060,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["header",{"_index":473,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":1342,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":477,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":129,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["helper",{"_index":392,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["helpers",{"_index":1794,"title":{},"body":{"todo.html":{}}}],["here",{"_index":287,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["hereby",{"_index":1727,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":118,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["hideable",{"_index":1152,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["hides",{"_index":1837,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hidetoolbar",{"_index":539,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hold",{"_index":552,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["holder",{"_index":531,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":1769,"title":{},"body":{"license.html":{}}}],["home",{"_index":174,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["homepagecomponent",{"_index":173,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":854,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["html",{"_index":167,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["http",{"_index":295,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["http://contributor",{"_index":1666,"title":{},"body":{"contributing.html":{}}}],["httpclient",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["httpclientmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["i'll",{"_index":1467,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1435,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":150,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["id",{"_index":551,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identity",{"_index":1530,"title":{},"body":{"contributing.html":{}}}],["image",{"_index":478,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":1150,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1400,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image.plugin",{"_index":1351,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":1394,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image.plugin.ts:14",{"_index":1396,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":1149,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":487,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1564,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":787,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["implemented",{"_index":1823,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AppContainerComponent.html":{},"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["implied",{"_index":1760,"title":{},"body":{"license.html":{}}}],["import",{"_index":85,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["imported",{"_index":1889,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["importing",{"_index":1138,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":1872,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["improvements",{"_index":1864,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["improvments",{"_index":1439,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1582,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1649,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":1072,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["included",{"_index":841,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includes",{"_index":1160,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"contributing.html":{}}}],["includetools",{"_index":829,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["including",{"_index":1737,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1544,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1497,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":461,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["individual",{"_index":1140,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["information",{"_index":1237,"title":{},"body":{"components/PageContainerComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["init",{"_index":1187,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["initial",{"_index":285,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":540,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":62,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["initialplugins",{"_index":453,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":642,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjs_module_import",{"_index":652,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["inject(ngx_editorjs_config",{"_index":1070,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":279,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":280,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":575,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/variables.html":{}}}],["injecting",{"_index":571,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":450,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":439,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["injectiontoken('editior_js_instance",{"_index":577,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":648,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":574,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('initialplugins",{"_index":454,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":569,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":458,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":586,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injector.module",{"_index":993,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["injector.module.ts",{"_index":583,"title":{},"body":{"modules/EditorJSInstanceModule.html":{}}}],["injector.ts",{"_index":588,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["injector.ts:100",{"_index":638,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:108",{"_index":613,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:117",{"_index":640,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:128",{"_index":634,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:139",{"_index":636,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:150",{"_index":632,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:161",{"_index":630,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:172",{"_index":626,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:265",{"_index":622,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:55",{"_index":607,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:74",{"_index":618,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["inline",{"_index":152,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["input",{"_index":86,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inputconfig",{"_index":1705,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":36,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["install",{"_index":1489,"title":{},"body":{"contributing.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["installed",{"_index":1827,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":1824,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":401,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instance.api",{"_index":1845,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instancedestroyed",{"_index":677,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["instancedestroyed.complete",{"_index":684,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["instancedestroyed.next(true",{"_index":683,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["instances",{"_index":500,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instructions",{"_index":1241,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["insulting/derogatory",{"_index":1569,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":1714,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":1486,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1512,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":362,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":363,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{}}}],["internal",{"_index":570,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["internally",{"_index":1434,"title":{},"body":{"changelog.html":{}}}],["investigated",{"_index":1640,"title":{},"body":{"contributing.html":{}}}],["isready",{"_index":1041,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isready(holder",{"_index":1064,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["issue",{"_index":1480,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":1453,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["it's",{"_index":898,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["item",{"_index":371,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/EditorJSInstanceModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["items",{"_index":142,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":1683,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1332,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":1343,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1352,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/link",{"_index":1361,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["js/list",{"_index":1370,"title":{},"body":{"modules/PluginListModule.html":{}}}],["js/marker",{"_index":1382,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["js/paragraph",{"_index":1391,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["json",{"_index":1205,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["json.stringify(blocks",{"_index":1233,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["keep",{"_index":1853,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":314,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["keys",{"_index":412,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["kind",{"_index":1758,"title":{},"body":{"license.html":{}}}],["label",{"_index":163,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["language",{"_index":1545,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":506,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["layer",{"_index":1490,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["leadership",{"_index":1661,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":749,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":166,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["level",{"_index":474,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":1773,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1770,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":771,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["lib/types/plugins",{"_index":770,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["libraries",{"_index":742,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["library",{"_index":1426,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../application.model.ts",{"_index":1696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../blocks.ts",{"_index":1801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":1699,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../index.ts",{"_index":1702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../module",{"_index":1701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1698,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":281,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1725,"title":{},"body":{"license.html":{}}}],["license",{"_index":1722,"title":{"license.html":{}},"body":{}}],["life",{"_index":1842,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["lightgray",{"_index":140,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["limitation",{"_index":1738,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1761,"title":{},"body":{"license.html":{}}}],["line",{"_index":164,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["link",{"_index":377,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"injectables/PluginLink.html":{}}}],["link.label",{"_index":1259,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["link.plugin",{"_index":1360,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["links",{"_index":124,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list",{"_index":143,"title":{"interfaces/List.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list.plugin",{"_index":1369,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":470,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listed",{"_index":1892,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["listener",{"_index":694,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["liststyle",{"_index":469,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":516,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["load",{"_index":308,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["loaded",{"_index":410,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["loader",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":1161,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{}}}],["loads",{"_index":284,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/MaterialModule.html":{}}}],["locations",{"_index":1496,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":1873,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lot",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["lots",{"_index":1863,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lt;code",{"_index":1249,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":1245,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":1246,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":1251,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":1248,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":1247,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":1244,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["mail",{"_index":1618,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":13,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["mainmenu",{"_index":40,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["maintain",{"_index":1645,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1516,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":1479,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["makes",{"_index":1001,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["making",{"_index":1471,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["managing",{"_index":1437,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":1895,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["map",{"_index":322,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["map((action",{"_index":948,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["map((demodata",{"_index":343,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map(blocks",{"_index":1232,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map(menus",{"_index":351,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map_defaults",{"_index":647,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkay",{"_index":690,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["maps",{"_index":1050,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":147,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["markdown",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":1114,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":1373,"title":{},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{}}}],["marker.plugin",{"_index":1381,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["marking",{"_index":1898,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":127,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matbuttonmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matcardmodule",{"_index":761,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matching",{"_index":190,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["material",{"_index":72,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/MaterialModule.html":{}}}],["material.module",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodule",{"_index":206,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1104,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matgridlistmodule",{"_index":1103,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["maticonmodule",{"_index":759,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":760,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":68,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matsidenavmodule",{"_index":757,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":758,"title":{},"body":{"modules/MaterialModule.html":{}}}],["me@tane.dev",{"_index":1637,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":715,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{}}}],["meantime",{"_index":1466,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1621,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1560,"title":{},"body":{"contributing.html":{}}}],["men",{"_index":313,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu",{"_index":78,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menu.key",{"_index":353,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu.label",{"_index":754,"title":{},"body":{"components/HomePageComponent.html":{}}}],["menugroup",{"_index":312,"title":{"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menuitem",{"_index":372,"title":{"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{}}}],["menuitem.label",{"_index":820,"title":{},"body":{"components/NavBarComponent.html":{}}}],["menus",{"_index":349,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["menus.find(menu",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menus.length",{"_index":350,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["merchantability",{"_index":1763,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1505,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["merged",{"_index":1008,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["mergemap",{"_index":964,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["mergemap(([action",{"_index":952,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":564,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["middle",{"_index":161,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["minheight",{"_index":541,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["miscellaneous",{"_index":1694,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1724,"title":{},"body":{"license.html":{}}}],["mock",{"_index":786,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":785,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:16",{"_index":791,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":793,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":796,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":797,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":762,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["mockngzone",{"_index":783,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["mockplugin",{"_index":774,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["modify",{"_index":1740,"title":{},"body":{"license.html":{}}}],["module",{"_index":192,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":194,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["modulewithproviders",{"_index":981,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1440,"title":{},"body":{"changelog.html":{}}}],["more",{"_index":386,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["moved",{"_index":415,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["multiple",{"_index":1270,"title":{},"body":{"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nationality",{"_index":1532,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":177,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":806,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":176,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["navigation",{"_index":141,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["nbsp",{"_index":819,"title":{},"body":{"components/NavBarComponent.html":{}}}],["necessary",{"_index":1642,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":901,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["new",{"_index":103,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["newpage",{"_index":1307,"title":{},"body":{"injectables/PagesService.html":{}}}],["ng",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngaftercontentinit",{"_index":32,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["ngdevtools",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngonchanges",{"_index":874,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":893,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":33,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ngrx",{"_index":1123,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx.module.ts",{"_index":1119,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/effects",{"_index":959,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{},"dependencies.html":{},"todo.html":{}}}],["ngrx/src/lib/actions/ngx",{"_index":512,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ngrx/src/lib/effects/ngx",{"_index":941,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["ngrx/src/lib/ngx",{"_index":1118,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/store",{"_index":520,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"dependencies.html":{}}}],["ngx",{"_index":180,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx.firebaseapp.com",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx_editorjs_config",{"_index":568,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":187,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsactions",{"_index":535,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/typealiases.html":{}}}],["ngxeditorjscomponent",{"_index":179,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":565,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":416,"title":{"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["ngxeditorjsdemodata",{"_index":418,"title":{"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["ngxeditorjsdemomodule",{"_index":208,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":1109,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":186,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":929,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjseffects",{"_index":940,"title":{"injectables/NgxEditorJSEffects.html":{}},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["ngxeditorjsmodule",{"_index":207,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsngrxmodule",{"_index":1115,"title":{"modules/NgxEditorjsNgrxModule.html":{}},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginservice",{"_index":971,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginsmodule",{"_index":1128,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":831,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxhideableheaderdemomodule",{"_index":1151,"title":{"modules/NgxHideableHeaderDemoModule.html":{}},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"modules.html":{}}}],["ngxhideableheaderdemoroutes",{"_index":1153,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodescoremodule",{"_index":209,"title":{"modules/NgxTinynodesCoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":604,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["none",{"_index":135,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["noninfringement",{"_index":1767,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1849,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1483,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["notice",{"_index":1753,"title":{},"body":{"license.html":{}}}],["notready",{"_index":528,"title":{"classes/NotReady.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["now",{"_index":1443,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":747,"title":{},"body":{"components/HomePageComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nrwl/nx",{"_index":1456,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":710,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":476,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["numbers",{"_index":1498,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1721,"title":{},"body":{"index.html":{}}}],["object",{"_index":413,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["object.entries",{"_index":1026,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":1031,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(this.editormap).foreach(key",{"_index":713,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["obligated",{"_index":1644,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":93,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":1731,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":1609,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1616,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1461,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1627,"title":{},"body":{"contributing.html":{}}}],["oftype",{"_index":958,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["oftype(editorjsactiontypes.savestart",{"_index":947,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["once",{"_index":707,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":654,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["onchanges",{"_index":872,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ondestroy",{"_index":20,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["one",{"_index":385,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["online",{"_index":1626,"title":{},"body":{"contributing.html":{}}}],["onstable",{"_index":788,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["open",{"_index":84,"title":{},"body":{"components/AppContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["opensourcemenu",{"_index":42,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["opensourcemenu.title",{"_index":1416,"title":{},"body":{"components/SidebarComponent.html":{}}}],["option",{"_index":562,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"todo.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options",{"_index":566,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ordered",{"_index":465,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1538,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1574,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1633,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["out",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":546,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/PageContainerComponent.html":{}}}],["outputdata",{"_index":521,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["outputs",{"_index":814,"title":{},"body":{"components/NavBarComponent.html":{}}}],["outside",{"_index":620,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["over",{"_index":808,"title":{},"body":{"components/NavBarComponent.html":{}}}],["overall",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":1261,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["overide",{"_index":1188,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["overriding",{"_index":1840,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["overview",{"_index":1783,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1482,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1444,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["padding",{"_index":145,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["page",{"_index":59,"title":{"interfaces/Page.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"todo.html":{}}}],["page'},{'name",{"_index":175,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":735,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":734,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":733,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:12",{"_index":737,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:9",{"_index":736,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.id",{"_index":1309,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1167,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagecontainercomponent",{"_index":182,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageid",{"_index":1289,"title":{},"body":{"injectables/PagesService.html":{}}}],["pages",{"_index":1178,"title":{},"body":{"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1277,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1271,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1272,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1273,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pages/home/home",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagesquery",{"_index":1265,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesservice",{"_index":1181,"title":{"injectables/PagesService.html":{}},"body":{"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesstate",{"_index":1278,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pagesstore",{"_index":1266,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":1091,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":1166,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":37,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":1193,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["panelopen",{"_index":1177,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["paragraph",{"_index":471,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":1390,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":472,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":1883,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":995,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["participants",{"_index":1562,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1517,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1765,"title":{},"body":{"license.html":{}}}],["pass",{"_index":979,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":563,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["passing",{"_index":1859,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paste",{"_index":1250,"title":{},"body":{"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["path",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":897,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["payload",{"_index":498,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["peer",{"_index":1796,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["peerdependencies",{"_index":1893,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["permanent",{"_index":1657,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1604,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1508,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1747,"title":{},"body":{"license.html":{}}}],["person",{"_index":1730,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1533,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1748,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1576,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":115,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{}}}],["pipe(take(1",{"_index":1225,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["pipeline",{"_index":1789,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":1719,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":542,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["please",{"_index":1476,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["pledge",{"_index":1511,"title":{},"body":{"contributing.html":{}}}],["pluck",{"_index":1208,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["pluck('items",{"_index":1219,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["plug",{"_index":1137,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":433,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugin.plugin",{"_index":1036,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":1035,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugincode",{"_index":1321,"title":{"injectables/PluginCode.html":{}},"body":{"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"overview.html":{}}}],["plugincodemodule",{"_index":1092,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":444,"title":{"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{}}}],["pluginheader",{"_index":1335,"title":{"injectables/PluginHeader.html":{}},"body":{"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheadermodule",{"_index":1093,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":1897,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimage",{"_index":1344,"title":{"injectables/PluginImage.html":{}},"body":{"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1132,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlink",{"_index":1353,"title":{"injectables/PluginLink.html":{}},"body":{"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1094,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":1362,"title":{"injectables/PluginList.html":{}},"body":{"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginlistmodule",{"_index":1095,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarker",{"_index":1371,"title":{"injectables/PluginMarker.html":{}},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["pluginmarkermodule",{"_index":1096,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":1383,"title":{"injectables/PluginParagraph.html":{}},"body":{"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginparagraphmodule",{"_index":1097,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugins",{"_index":452,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":1134,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins.service",{"_index":1069,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugins/code/code.module",{"_index":1141,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1142,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1143,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1144,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1145,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1146,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1147,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1148,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1133,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1327,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts",{"_index":1322,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts:14",{"_index":1323,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":1341,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":1336,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":1337,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1350,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts",{"_index":1345,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts:14",{"_index":1346,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1359,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts",{"_index":1354,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts:14",{"_index":1355,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1368,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":1363,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":1364,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1380,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts",{"_index":1372,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:14",{"_index":1374,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:20",{"_index":1375,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1389,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":1384,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":1385,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1393,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":459,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":1420,"title":{},"body":{"interfaces/ToolSettingsMap-1.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":1334,"title":{},"body":{"interfaces/PluginConfig-1.html":{}}}],["pluginservice",{"_index":1899,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimage",{"_index":1392,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["pluginsimpleimagemodule",{"_index":1098,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginsmap",{"_index":1023,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pointer",{"_index":149,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["pointing",{"_index":1253,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["policies",{"_index":1650,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1571,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1756,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1495,"title":{},"body":{"contributing.html":{}}}],["position",{"_index":855,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["positive",{"_index":1543,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1139,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1651,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1619,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":1835,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":1890,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["pressed",{"_index":818,"title":{},"body":{"components/NavBarComponent.html":{}}}],["private",{"_index":101,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{}}}],["process",{"_index":900,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["produced",{"_index":1024,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["production",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":1583,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1457,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":1660,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":81,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["projectsmenu",{"_index":41,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["projectsmenu.title",{"_index":1414,"title":{},"body":{"components/SidebarComponent.html":{}}}],["promise",{"_index":780,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["promise.resolve",{"_index":781,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["property",{"_index":481,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["provide",{"_index":391,"title":{},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provided",{"_index":402,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/Block.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":649,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":300,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["providers",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provides",{"_index":15,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["providing",{"_index":1861,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["provied",{"_index":567,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":34,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":1741,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1122,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["publishing",{"_index":1573,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1487,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1766,"title":{},"body":{"license.html":{}}}],["queried",{"_index":289,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["query",{"_index":299,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesService.html":{}}}],["queryentity",{"_index":1275,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["race",{"_index":1535,"title":{},"body":{"contributing.html":{}}}],["radius",{"_index":864,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactiveformsmodule",{"_index":1102,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["readme",{"_index":1716,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["readme.md",{"_index":1492,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":102,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["ready",{"_index":503,"title":{"classes/Ready.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readymap",{"_index":504,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["reasonably",{"_index":1580,"title":{},"body":{"contributing.html":{}}}],["redirectto",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":1034,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":605,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["reference",{"_index":609,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["regard",{"_index":1647,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1523,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":1879,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["registered",{"_index":1020,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["reject",{"_index":1596,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":1258,"title":{},"body":{"components/PageContainerComponent.html":{},"changelog.html":{}}}],["relative",{"_index":856,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["release",{"_index":1433,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":745,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["releases",{"_index":1846,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["religion",{"_index":1536,"title":{},"body":{"contributing.html":{}}}],["remove",{"_index":1004,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"contributing.html":{}}}],["remove(key",{"_index":1016,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["removeblock",{"_index":1281,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1294,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1293,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["removes",{"_index":1292,"title":{},"body":{"injectables/PagesService.html":{}}}],["renamed",{"_index":1887,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":379,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["rendered",{"_index":1821,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["repercussions",{"_index":1658,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":1882,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":1329,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":1331,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":1448,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1634,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1648,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1475,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1501,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":409,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"contributing.html":{}}}],["representative",{"_index":1625,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1615,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":834,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["required",{"_index":432,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["requires",{"_index":1894,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reset",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["resolved",{"_index":1465,"title":{},"body":{"changelog.html":{}}}],["respectful",{"_index":1547,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1593,"title":{},"body":{"contributing.html":{}}}],["responsibilities",{"_index":1585,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1594,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1586,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1736,"title":{},"body":{"license.html":{}}}],["result",{"_index":189,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["results",{"_index":191,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["retrieved",{"_index":593,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["return",{"_index":111,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returned",{"_index":438,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["returns",{"_index":63,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reviewed",{"_index":1639,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1510,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":156,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"contributing.html":{}}}],["rights",{"_index":1739,"title":{},"body":{"license.html":{}}}],["robust",{"_index":1866,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["root'},{'name",{"_index":172,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["roots",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routable",{"_index":1171,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["route",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routerlink",{"_index":370,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["routermodule",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1113,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot(approutes",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":860,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["run",{"_index":608,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["run(fn",{"_index":792,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":789,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":795,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":95,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":98,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":543,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sanitizerconfig",{"_index":560,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["save",{"_index":525,"title":{},"body":{"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["save(holder",{"_index":637,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["saveend",{"_index":526,"title":{"classes/SaveEnd.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["savehandler(holder",{"_index":717,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["saver",{"_index":764,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["savestart",{"_index":523,"title":{"classes/SaveStart.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["saving",{"_index":1255,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1503,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1611,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1462,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":1262,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["searchable",{"_index":1711,"title":{},"body":{"index.html":{}}}],["second",{"_index":1509,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":1056,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":1795,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sell",{"_index":1745,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1855,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1504,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1652,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":283,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["services",{"_index":870,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["services/editorjs.service",{"_index":853,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":991,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["set",{"_index":320,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setblocks",{"_index":1282,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1296,"title":{},"body":{"injectables/PagesService.html":{}}}],["sets",{"_index":297,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":1584,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":437,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["setupevents(holder",{"_index":696,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["setupsubjects(holder",{"_index":687,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["several",{"_index":1135,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1537,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1563,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1754,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1159,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["shortcut",{"_index":435,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["showing",{"_index":1557,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":550,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["shows",{"_index":1828,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["side",{"_index":319,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["sidebar",{"_index":73,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1411,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1410,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":184,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["sidebarhidden",{"_index":39,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sidenav",{"_index":30,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sign",{"_index":1506,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1395,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":894,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1252,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{}}}],["simulatezoneexit",{"_index":790,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["singleton",{"_index":1000,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["site",{"_index":394,"title":{},"body":{"modules/ApplicationDataModule.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["sites",{"_index":750,"title":{},"body":{"components/HomePageComponent.html":{}}}],["size",{"_index":1526,"title":{},"body":{"contributing.html":{}}}],["skipself",{"_index":984,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1470,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1620,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1733,"title":{},"body":{"license.html":{}}}],["solid",{"_index":862,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["spaces",{"_index":1614,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":306,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"contributing.html":{}}}],["standards",{"_index":1539,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":524,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1422,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":106,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["states",{"_index":650,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["static",{"_index":976,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["store",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"dependencies.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":1210,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":1111,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":1211,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":424,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":592,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["stores",{"_index":104,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stores/app/application.module",{"_index":1162,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["stretch",{"_index":485,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":486,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":303,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["style",{"_index":144,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subject",{"_index":94,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"license.html":{}}}],["subjects",{"_index":685,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{}}}],["sublicense",{"_index":1743,"title":{},"body":{"license.html":{}}}],["subscribe(([event",{"_index":700,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["subscribe((data",{"_index":1226,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["subscribe(editor",{"_index":680,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["subscribe(hidden",{"_index":117,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["subscribed",{"_index":1062,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscriptions",{"_index":623,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["substantial",{"_index":1755,"title":{},"body":{"license.html":{}}}],["such",{"_index":1575,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":425,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(store",{"_index":405,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["support",{"_index":1269,"title":{},"body":{"modules/PageStoreModule.html":{},"modules.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supports",{"_index":464,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":1780,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":962,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["t",{"_index":305,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["tag",{"_index":1168,"title":{"interfaces/Tag.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Tag.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["tags",{"_index":1791,"title":{},"body":{"todo.html":{}}}],["take",{"_index":1209,"title":{},"body":{"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["takes",{"_index":975,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":97,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(instancedestroyed",{"_index":679,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["takeuntil(this.ondestroy",{"_index":116,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["tane",{"_index":1718,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":963,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{}}}],["team",{"_index":1636,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["temporarily",{"_index":1603,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1656,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":775,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["testclass",{"_index":772,"title":{"classes/TestClass.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["text",{"_index":133,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["things",{"_index":1257,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.actions$.pipe",{"_index":946,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.add(key",{"_index":1028,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.app",{"_index":1223,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.app.getmenu('main",{"_index":123,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["this.app.getmenu('other",{"_index":126,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.getmenu('tinynode",{"_index":125,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.hidden.pipe(takeuntil(this.ondestroy$)).subscribe(hidden",{"_index":109,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.togglesidebar",{"_index":113,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.autofocus",{"_index":932,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":917,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":778,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"classes/TestClass.html":{}}}],["this.blocks.length",{"_index":938,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1231,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.blocksmap[holder",{"_index":675,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.blocksmap[holder].asobservable",{"_index":676,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.blocksmap[holder].next",{"_index":722,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.blocksmap[holder].next(blocks",{"_index":729,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.blocksmap[holder].next(data.blocks",{"_index":719,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.cd.markforcheck",{"_index":1235,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.changemap[holder",{"_index":672,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.changemap[holder].asobservable",{"_index":674,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.changemap[holder].next(date.now",{"_index":655,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.cleanupsubjects(holder",{"_index":682,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.clearhandler(holder",{"_index":702,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.config.editorjs",{"_index":1073,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":924,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.destroy",{"_index":777,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.destroyinstance(key",{"_index":714,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editor.clear(this.holder",{"_index":1222,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editor.getblocks(this.holder).pipe",{"_index":1217,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editor.save(this.holder",{"_index":1221,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editor.update(this.holder",{"_index":1229,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorjs",{"_index":657,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editormap[holder",{"_index":667,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editormap[holder].asobservable",{"_index":669,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editormap[holder].next(editor",{"_index":688,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editorservice",{"_index":914,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.clear(holder",{"_index":1085,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.createinstance(options",{"_index":1076,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.destroyinstance(holder",{"_index":1086,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getblocks(action.payload.holder",{"_index":951,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.getblocks(holder",{"_index":1079,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getchanged(holder",{"_index":1081,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getinstance(holder).pipe(filter(editor",{"_index":1078,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getready(holder",{"_index":1080,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.save(action.payload.holder",{"_index":949,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.save(holder",{"_index":1084,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.update(holder",{"_index":1083,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.el.nativeelement.id",{"_index":925,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.eventmap[holder",{"_index":666,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.eventmap[holder].complete",{"_index":712,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.eventmap[holder].next",{"_index":665,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.hidetoolbar",{"_index":933,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":926,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.http.get('/assets/app",{"_index":331,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.id",{"_index":923,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.includetools",{"_index":916,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":934,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.menu$.next(data.links",{"_index":1228,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.menu$.pipe",{"_index":1218,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.minheight",{"_index":936,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.ondestroy$.complete",{"_index":122,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{}}}],["this.ondestroy$.next(true",{"_index":121,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{}}}],["this.onstable.emit(null",{"_index":801,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.pages",{"_index":1305,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":1220,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.panelopen$.asobservable",{"_index":1215,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.panelopen$.next(value",{"_index":1216,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.placeholder",{"_index":935,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.plugins.gettools(includetools",{"_index":1074,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":1030,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginsmap[key",{"_index":1029,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.query.select('menus').pipe",{"_index":347,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.demodata).pipe",{"_index":338,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.hidden",{"_index":334,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.selectall",{"_index":1306,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.readymap[holder",{"_index":670,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.readymap[holder].asobservable",{"_index":671,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.readymap[holder].next(true",{"_index":663,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.ref.tick",{"_index":664,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.reset",{"_index":1236,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":937,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.savehandler(holder",{"_index":701,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.saver",{"_index":779,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.service.createeditor(config",{"_index":915,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroy(this.id",{"_index":930,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.geteditor(this.id",{"_index":913,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.update(this.id",{"_index":921,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setupevents(holder",{"_index":662,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.setupsubjects(holder",{"_index":661,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.sidebarhidden",{"_index":114,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.asobservable",{"_index":112,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.next(hidden",{"_index":110,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.close",{"_index":119,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.open",{"_index":120,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.store._value()[applicationstatekeys.hidden",{"_index":337,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.add(newpage",{"_index":1308,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1311,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(appdata",{"_index":333,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(pageid",{"_index":1312,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1310,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.updatehandler(holder",{"_index":703,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.version",{"_index":776,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.zone.run",{"_index":660,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.zone.runoutsideangular",{"_index":656,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this[mapkay][holder",{"_index":691,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this[mapkay][holder].complete",{"_index":709,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this[mapkay][holder].next(value",{"_index":693,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["threatening",{"_index":1608,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":927,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":611,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["time",{"_index":725,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["timestamp",{"_index":505,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["tinynode",{"_index":1712,"title":{},"body":{"index.html":{}}}],["tinynodedemos",{"_index":419,"title":{"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["tinynodes",{"_index":23,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":90,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["tinynodes/src/app/app",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/components/nav",{"_index":804,"title":{},"body":{"components/NavBarComponent.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":1408,"title":{},"body":{"components/SidebarComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts",{"_index":11,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:20",{"_index":58,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:25",{"_index":71,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:35",{"_index":47,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:43",{"_index":75,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:47",{"_index":67,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:54",{"_index":61,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:66",{"_index":65,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:74",{"_index":77,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:81",{"_index":80,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:88",{"_index":83,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/core/stores/app/application.model.ts",{"_index":420,"title":{},"body":{"interfaces/ApplicationState-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts",{"_index":406,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts:10",{"_index":407,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts",{"_index":355,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:15",{"_index":356,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:34",{"_index":360,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:41",{"_index":359,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:49",{"_index":357,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:62",{"_index":358,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts",{"_index":427,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts:10",{"_index":428,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/types/app",{"_index":1212,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["tinynodes/src/app/core/types/app.ts",{"_index":387,"title":{},"body":{"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{}}}],["tinynodes/src/app/material.module",{"_index":1112,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["tinynodes/src/app/material.module.ts",{"_index":755,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tinynodes/src/app/pages/home/home",{"_index":732,"title":{},"body":{"components/HomePageComponent.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":60,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["today",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":414,"title":{"todo.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["todos",{"_index":1787,"title":{},"body":{"todo.html":{}}}],["toggle",{"_index":809,"title":{},"body":{"components/NavBarComponent.html":{}}}],["togglepanel",{"_index":1176,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["togglepanel(value",{"_index":1191,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["toggles",{"_index":316,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/PageContainerComponent.html":{}}}],["togglesidebar",{"_index":35,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NavBarComponent.html":{}}}],["token",{"_index":451,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":449,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolbar",{"_index":548,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolconstructable",{"_index":441,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tools",{"_index":446,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":440,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolsettingsmap",{"_index":447,"title":{"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["topnav",{"_index":383,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["tort",{"_index":1776,"title":{},"body":{"license.html":{}}}],["towards",{"_index":1559,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["trigger",{"_index":610,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["trolling",{"_index":1568,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":547,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":896,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":1799,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":340,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["types/app",{"_index":324,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["types/blocks",{"_index":644,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":912,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":645,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["types/plugins",{"_index":1021,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["typescript",{"_index":741,"title":{},"body":{"components/HomePageComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typing",{"_index":1243,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["unacceptable",{"_index":1561,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["under",{"_index":746,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{}}}],["underlying",{"_index":849,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unordered",{"_index":466,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["until",{"_index":1464,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1565,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":298,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":601,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(holder",{"_index":639,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":288,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["updatehandler(holder",{"_index":723,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["updates",{"_index":641,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["upload",{"_index":1896,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["upsert",{"_index":1283,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1298,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":376,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1238,"title":{},"body":{"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":871,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["used",{"_index":373,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["usefactory",{"_index":997,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":1472,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["user",{"_index":1007,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["userplugin",{"_index":1869,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["userplugins",{"_index":457,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["uses",{"_index":1865,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["usevalue",{"_index":587,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":823,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["utils/editorjs",{"_index":992,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["value",{"_index":55,"title":{},"body":{"components/AppContainerComponent.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":502,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":170,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variables",{"_index":1493,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":727,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1502,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["vertical",{"_index":160,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["via",{"_index":456,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["view",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/PageContainerComponent.html":{}}}],["viewchild",{"_index":87,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["viewchild(matsidenav",{"_index":70,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":846,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["viewpoints",{"_index":1549,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["void",{"_index":64,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["wait",{"_index":902,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":1046,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["warning",{"_index":1120,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{}}}],["warranties",{"_index":1762,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1757,"title":{},"body":{"license.html":{}}}],["way",{"_index":868,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["web",{"_index":743,"title":{},"body":{"components/HomePageComponent.html":{}}}],["wednesday",{"_index":1427,"title":{},"body":{"changelog.html":{}}}],["welcome",{"_index":739,"title":{},"body":{"components/HomePageComponent.html":{}}}],["welcoming",{"_index":1514,"title":{},"body":{"contributing.html":{}}}],["what's",{"_index":1838,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["whether",{"_index":1774,"title":{},"body":{"license.html":{}}}],["white",{"_index":137,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["width",{"_index":131,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1598,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1478,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":484,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":482,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":624,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["withlatestfrom",{"_index":950,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["without",{"_index":825,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":549,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["work",{"_index":1469,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":891,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":603,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppContainerComponent.html":{"url":"components/AppContainerComponent.html","title":"component - AppContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/containers/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component that provides the root container\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sidebarHidden\n                                \n                                \n                                    mainMenu\n                                \n                                \n                                    projectsMenu\n                                \n                                \n                                    openSourceMenu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Default value : 'Tinynodes Angular Demos'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:20\n                            \n                        \n                \n                    \n                        The page title\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:54\n                \n            \n\n\n            \n                \n                    Component initialized\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:66\n                \n            \n\n\n            \n                \n                    Component destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        The Material sidebar\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sidebarHidden\n                    \n                \n\n                \n                    \n                        getsidebarHidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:43\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mainMenu\n                    \n                \n\n                \n                    \n                        getmainMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:74\n                                \n                            \n                    \n                        \n                                Get the application main menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n\n                \n                    \n                        getprojectsMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:81\n                                \n                            \n                    \n                        \n                                Get the projects menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n\n                \n                    \n                        getopenSourceMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:88\n                                \n                            \n                    \n                        \n                                Get the open source menu\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n/**\n * The main application component that provides the root container\n */\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppContainerComponent implements AfterContentInit, OnDestroy {\n  /**\n   * The page title\n   */\n  @Input()\n  public pageTitle = 'Tinynodes Angular Demos';\n\n  /**\n   * The Material sidebar\n   */\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * When the component is destroyed\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Stores the current sidebar state\n   */\n  private readonly sidebarHidden$ = new BehaviorSubject(false);\n\n  constructor(private readonly app: AppService) {\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(hidden => {\n      this.sidebarHidden$.next(hidden);\n    });\n  }\n\n  public get sidebarHidden(): Observable {\n    return this.sidebarHidden$.asObservable();\n  }\n\n  public toggleSidebar() {\n    this.app.toggleSidebar();\n  }\n\n  /**\n   * Component initialized\n   */\n  ngAfterContentInit() {\n    this.sidebarHidden$\n      .pipe(\n        distinctUntilChanged(),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hidden => (hidden ? this.sidenav.close() : this.sidenav.open()));\n  }\n\n  /**\n   * Component destroyed\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Get the application main menu\n   */\n  public get mainMenu() {\n    return this.app.getMenu('main-links');\n  }\n\n  /**\n   * Get the projects menu\n   */\n  public get projectsMenu() {\n    return this.app.getMenu('tinynode-projects');\n  }\n\n  /**\n   * Get the open source menu\n   */\n  public get openSourceMenu() {\n    return this.app.getMenu('other-projects');\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100vh;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The main ngx-tinynodes module that builds the core single page application.\nTo view the application visit the demo\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppContainerComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ApplicationDataModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppContainerComponent } from './containers/app/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\nimport { MaterialModule } from './material.module';\nimport { HomePageComponent } from './pages/home/home-page.component';\nimport { MatButtonModule } from '@angular/material';\nimport { ApplicationDataModule, NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\n\n/**\n * The main `ngx-tinynodes` module that builds the core single page application.\n * To view the application visit [the demo](https://tinynodes-ngx.firebaseapp.com/)\n */\n@NgModule({\n  declarations: [AppContainerComponent, NavBarComponent, SidebarComponent, HomePageComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ApplicationDataModule,\n    AppRoutingModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    environment.production ? [] : [AkitaNgDevtools.forRoot(), AkitaNgRouterStoreModule.forRoot()]\n  ],\n  bootstrap: [AppContainerComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app-routing.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The App routing module provides the base roots of the application\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Route, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HomePageComponent } from './pages/home/home-page.component';\n\n/**\n * The main application routes\n */\nexport const appRoutes: Route[] = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n];\n\n/**\n * The App routing module provides the base roots of the application\n */\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar() {\n    this.store.update({ [ApplicationStateKeys.Hidden]: !this.store._value()[ApplicationStateKeys.Hidden] });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter((data: DemoData[]) => typeof data !== 'undefined' && (data && data.length > 0)),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key == key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-1.html":{"url":"injectables/AppService-1.html","title":"injectable - AppService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar() {\n    this.store.update({ [ApplicationStateKeys.Hidden]: !this.store._value()[ApplicationStateKeys.Hidden] });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter(data => typeof data !== 'undefined'),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key == key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData.html":{"url":"interfaces/ApplicationData.html","title":"interface - ApplicationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData-1.html":{"url":"interfaces/ApplicationData-1.html","title":"interface - ApplicationData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationDataModule.html":{"url":"modules/ApplicationDataModule.html","title":"module - ApplicationDataModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provide the Application state and helper functions that\nare used across the Tinynodes site\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ApplicationQuery\n                        \n                        \n                            ApplicationStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { AppService } from './application.service';\nimport { ApplicationStore } from './application.store';\n\n/**\n * This module provide the Application state and helper functions that\n * are used across the Tinynodes site\n */\n@NgModule({\n  providers: [AppService, ApplicationQuery, ApplicationStore]\n})\nexport class ApplicationDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery.html":{"url":"injectables/ApplicationQuery.html","title":"injectable - ApplicationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery-1.html":{"url":"injectables/ApplicationQuery-1.html","title":"injectable - ApplicationQuery-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState-1.html":{"url":"interfaces/ApplicationState-1.html","title":"interface - ApplicationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore.html":{"url":"injectables/ApplicationStore.html","title":"injectable - ApplicationStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore-1.html":{"url":"injectables/ApplicationStore-1.html","title":"injectable - ApplicationStore-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin-1.html":{"url":"interfaces/BasePlugin-1.html","title":"interface - BasePlugin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlocksMap.html":{"url":"interfaces/BlocksMap.html","title":"interface - BlocksMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlocksMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of Block elements from EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:36\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {Block[]}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of number which is the timestamp of the last EditorJS change\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:56\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {number}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Changed.html":{"url":"classes/Changed.html","title":"class - Changed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Changed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Changed\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData.html":{"url":"interfaces/DemoData.html","title":"interface - DemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData-1.html":{"url":"interfaces/DemoData-1.html","title":"interface - DemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EditorJSInstanceModule.html":{"url":"modules/EditorJSInstanceModule.html","title":"module - EditorJSInstanceModule","body":"\n                   \n\n\n\n\n    Modules\n    EditorJSInstanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EditorJSInstanceModule\n\n\n\ncluster_EditorJSInstanceModule_providers\n\n\n\n\nEditorJSInstanceService\n\nEditorJSInstanceService\n\n\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule -->\n\nEditorJSInstanceService->EditorJSInstanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/utils/editorjs-injector.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides EditorJS as an injectable item and a factory to create EditorJS instances\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EditorJSInstanceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport EditorJS from '@editorjs/editorjs';\nimport { EditorJSInstanceService, EDITORJS_MODULE_IMPORT } from './editorjs-injector';\n\n/**\n * This module provides EditorJS as an injectable item and a factory to create EditorJS instances\n */\n@NgModule({\n  providers: [\n    EditorJSInstanceService,\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    }\n  ]\n})\nexport class EditorJSInstanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditorJSInstanceService.html":{"url":"injectables/EditorJSInstanceService.html","title":"injectable - EditorJSInstanceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EditorJSInstanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS factory service, call createInstance with an EditorConfig to\nreturn an instance after the DOM element is ready, this is stored in a subject to\nbe retrieved when ready.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                    Public\n                                getInstance\n                            \n                            \n                                    Public\n                                getReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(EditorJS: any, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:55\n                            \n                        \n\n                \n                    \n                            Import the EditorJS class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        EditorJS\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular zone to run\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application reference to trigger a tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:108\n                \n            \n\n\n            \n                \n                    Calls a clear method on an editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(config: EditorConfig, autosave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:74\n                \n            \n\n\n            \n                \n                    Creates a new EditorJS instance outside of the Angular zone and\nthen adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The {EditorConfig} configuration to create\n\n                                    \n                                \n                                \n                                    autosave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:265\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:172\n                \n            \n\n\n            \n                \n                    Destroys an instance of an editor and cleans up all Observable values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:161\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:150\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInstance(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:128\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:139\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:100\n                \n            \n\n\n            \n                \n                    Calls the save method on an editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:117\n                \n            \n\n\n            \n                \n                    Updates the editor with new blocks\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The blocks to update the editor with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, InjectionToken, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { BlocksMap, ChangeMap, EditorMap, EventMap, EventType, ReadyMap } from '../types/maps';\n\n/**\n * Default values for each internal map\n */\nconst MAP_DEFAULTS = [['blocksMap', []], ['changeMap', 0], ['readyMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * EditorJS factory service, call `createInstance` with an `EditorConfig` to\n * return an instance after the DOM element is ready, this is stored in a subject to\n * be retrieved when ready.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditorJSInstanceService {\n  /**\n   * Internal destroy method for the service\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all Block `BehaviorSubject` instances\n   */\n  private blocksMap: BlocksMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private readyMap: ReadyMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private changeMap: ChangeMap = {};\n\n  /**\n   * The Event map is used to trigger events\n   */\n  private eventMap: EventMap = {};\n\n  /**\n   * Import the `EditorJS` class\n   * @param EditorJS The `EditorJS` class\n   * @param zone Angular zone to run\n   * @param ref The application reference to trigger a tick\n   */\n  constructor(\n    @Inject(EDITORJS_MODULE_IMPORT) private EditorJS: any,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new `EditorJS` instance outside of the Angular zone and\n   * then adds it to the editor instances\n   * @param config The {EditorConfig} configuration to create\n   */\n  public createInstance(config: EditorConfig, autosave = false): void {\n    const holder = config.holder as string;\n    const editorConfig = {\n      ...config,\n      onChange: () => {\n        this.changeMap[holder].next(Date.now());\n      }\n    };\n    this.zone.runOutsideAngular(() => {\n      const editor = new (this.EditorJS as any)(editorConfig);\n      const holder = config.holder as string;\n      editor.isReady.then(() => {\n        this.zone.run(() => {\n          this.setupSubjects(holder, editor);\n          this.setupEvents(holder);\n          this.readyMap[holder].next(true);\n          this.ref.tick();\n        });\n      });\n    });\n  }\n\n  /**\n   * Calls the save method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public save(holder: string) {\n    this.eventMap[holder].next({ type: 'save' });\n  }\n\n  /**\n   * Calls a clear method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public clear(holder: string) {\n    this.eventMap[holder].next({ type: 'clear' });\n  }\n\n  /**\n   * Updates the editor with new blocks\n   * @param holder The holder ID of the `EditorJS` instance\n   * @param blocks The blocks to update the editor with\n   */\n  public update(holder: string, blocks: Block[]) {\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n    this.eventMap[holder].next({ type: 'update', payload: { blocks } });\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getInstance(holder: string): Observable {\n    if (!this.editorMap[holder]) {\n      this.editorMap[holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getReady(holder: string): Observable {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    return this.readyMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getChanged(holder: string): Observable {\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n    return this.changeMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getBlocks(holder: string): Observable {\n    if (!this.blocksMap[holder]) {\n      this.blocksMap[holder] = new BehaviorSubject([]);\n    }\n    return this.blocksMap[holder].asObservable();\n  }\n\n  /**\n   * Destroys an instance of an editor and cleans up all Observable values\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public destroyInstance(holder: string): void {\n    const instanceDestroyed = new Subject();\n    this.editorMap[holder]\n      .pipe(\n        filter(editor => typeof editor !== 'undefined'),\n        takeUntil(instanceDestroyed)\n      )\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects(holder);\n            instanceDestroyed.next(true);\n            instanceDestroyed.complete();\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Sets up the Subjects provided by this service\n   * @param holder The holder to set up the subjects for\n   * @param editor The Editor instance created outside of Angular\n   */\n  private setupSubjects(holder: string, editor: EditorJS): void {\n    if (this.editorMap[holder]) {\n      this.editorMap[holder].next(editor);\n    } else {\n      this.editorMap[holder] = new BehaviorSubject(editor);\n    }\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, typeof value]) => {\n      if (!this[mapKay][holder]) {\n        this[mapKay][holder] = new BehaviorSubject(value);\n      }\n      this[mapKay][holder].next(value);\n    });\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n  }\n\n  /**\n   * Sets up a listener for the event map and provides the editor and blocks to handle\n   * updates\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  private setupEvents(holder: string) {\n    combineLatest([this.eventMap[holder], this.editorMap[holder]])\n      .pipe(\n        filter(([event, editor]) => event.type && typeof editor !== 'undefined'),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(([event, editor]) => {\n        if (event.type === 'save') {\n          this.saveHandler(holder, editor);\n        }\n        if (event.type === 'clear') {\n          this.clearHandler(holder, editor);\n        }\n        if (event.type === 'update') {\n          this.updateHandler(holder, editor, event.payload.blocks);\n        }\n        this.eventMap[holder].next({ type: '' });\n      });\n    this.ref.tick();\n  }\n\n  /**\n   * Handles cleaning up all the subjects once an `EditorJS` instance has been\n   * destroyed\n   * @param holder The holder ID for the `EditorJS` instance\n   */\n  private cleanupSubjects(holder: string) {\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, any]) => {\n      if (this[mapKay][holder]) {\n        this[mapKay][holder].next(value);\n        this[mapKay][holder].complete();\n        this[mapKay][holder] = null;\n        delete this[mapKay][holder];\n      }\n    });\n    this.eventMap[holder].next({ type: '' });\n    this.eventMap[holder].complete();\n    this.eventMap[holder] = null;\n    delete this.eventMap[holder];\n    this.editorMap[holder] = null;\n    delete this.editorMap[holder];\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(key => {\n      this.destroyInstance(key);\n    });\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance save outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private saveHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.saver.save().then(data => {\n        this.zone.run(() => {\n          this.blocksMap[holder].next(data.blocks);\n        });\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance clear outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private clearHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.clear();\n      this.zone.run(() => {\n        this.blocksMap[holder].next([]);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance render outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private updateHandler(holder: string, editor: EditorJS, blocks: Block[]) {\n    if (!blocks) {\n      return;\n    }\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.render({\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks\n      });\n      this.zone.run(() => {\n        this.blocksMap[holder].next(blocks);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:26\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EditorJS}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventMap.html":{"url":"interfaces/EventMap.html","title":"interface - EventMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing an event subject for an EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:16\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EventType}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventType.html":{"url":"interfaces/EventType.html","title":"interface - EventType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An event type for calling EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        payload\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-home-page\n            \n\n            \n                styleUrls\n                home-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:12\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\n\n@Component({\n  selector: 'tinynodes-home-page',\n  templateUrl: 'home-page.component.html',\n  styleUrls: ['home-page.component.scss']\n})\nexport class HomePageComponent {\n  constructor(private readonly app: AppService) {}\n\n  public get menu() {\n    return this.app.getMenu('main-links');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to the Tinynodes Demo Site\n      A collection of Angular and TypeScript libraries for the web\n    \n    \n      This site contains demos of components released under @tinynodes on npm, you can find a list of them on the menu to the left.\n      You can also visit the sites below for additional documentation and code:\n      \n        \n          \n            {{ menu.label }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    home-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to the Tinynodes Demo Site      A collection of Angular and TypeScript libraries for the web              This site contains demos of components released under @tinynodes on npm, you can find a list of them on the menu to the left.      You can also visit the sites below for additional documentation and code:                                    {{ menu.label }}                              '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This internal module loads the required features for Angular Material\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport {\n  MatSidenavModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatListModule,\n  MatCardModule,\n  MatButtonModule\n} from '@angular/material';\n\n/**\n * This internal module loads the required features for Angular Material\n */\n@NgModule({\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule],\n  exports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup.html":{"url":"interfaces/MenuGroup.html","title":"interface - MenuGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup-1.html":{"url":"interfaces/MenuGroup-1.html","title":"interface - MenuGroup-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-1.html":{"url":"interfaces/MenuItem-1.html","title":"interface - MenuItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EditorJSConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            BasePlugin\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \nshortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Internal NavBar component for the Tinynodes application, provides\ncontrol over the sidebar toggle and displays the main menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Navbar Component'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Set the title of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidebar\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:27\n                            \n                        \n                \n                    \n                        Get an event when the sidebar toggle has been pressed\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core/src';\n\n/**\n * Internal NavBar component for the Tinynodes application, provides\n * control over the sidebar toggle and displays the main menu\n */\n@Component({\n  selector: 'tinynodes-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  /**\n   * Set the title of the component\n   */\n  @Input()\n  title = 'Navbar Component';\n\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * Get an event when the sidebar toggle has been pressed\n   */\n  @Output()\n  toggleSidebar = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  &nbsp;\n  \n    {{ title }}\n  \n  \n    \n      \n        \n          {{ menuItem.label }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                a {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu           {{ title }}                                {{ menuItem.label }}                    '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                placeholder\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:86\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:30\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:80\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:86\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:36\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:42\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:73\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:48\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:54\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:60\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:66\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:24\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:93\n                            \n                        \n\n                \n                    \n                        The editor service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { SanitizerConfig } from '@editorjs/editorjs';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editor: NgxEditorJSDirective;\n\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer?: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: boolean;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(public readonly service: NgxEditorJSService) {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n}\n\n.editor {\n  flex: 1;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:         EditorJSConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo.html":{"url":"interfaces/NgxEditorJSDemo.html","title":"interface - NgxEditorJSDemo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        links\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         MenuGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Links for this demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo-1.html":{"url":"interfaces/NgxEditorJSDemo-1.html","title":"interface - NgxEditorJSDemo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData.html":{"url":"interfaces/NgxEditorJSDemoData.html","title":"interface - NgxEditorJSDemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData-1.html":{"url":"interfaces/NgxEditorJSDemoData-1.html","title":"interface - NgxEditorJSDemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                placeholder\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    service\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:35\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:79\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:85\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:41\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:29\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:47\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:107\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                EditorJSConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:132\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:119\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:144\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:92\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:99\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterContentInit, Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport EditorJS, { SanitizerConfig } from '@editorjs/editorjs';\nimport { Observable } from 'rxjs';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig } from '../types/config';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  private id: string;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public placeholder: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: boolean;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[] = [];\n\n  constructor(private readonly el: ElementRef, private readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the `EditorJS` instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor(this.id);\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Creates an `EditorJS` instance for this directive\n   * @param config Configuration for this instance\n   */\n  public createEditor(config?: EditorJSConfig): void {\n    this.service.createEditor(config, this.includeTools, this.autosave);\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(changes);\n    if (changes.blocks && !changes.blocks.firstChange) {\n      return this.service.update(this.id, changes.blocks.currentValue);\n    }\n    if (this.id) {\n      this.createEditor(this.createConfig());\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance\n   */\n  ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    this.createEditor(this.createConfig());\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.service.destroy(this.id);\n  }\n\n  private createConfig(): EditorJSConfig {\n    const config: EditorJSConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.placeholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSEffects.html":{"url":"injectables/NgxEditorJSEffects.html","title":"injectable - NgxEditorJSEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $save\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $save\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { NgxEditorJSService, Block } from '@tinynodes/ngx-editorjs';\nimport { EditorJSActionTypes, SaveStart, SaveEnd } from '../actions/ngx-editorjs.actions';\nimport { switchMap, map, withLatestFrom, tap, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport EditorJS from '@editorjs/editorjs';\n\n@Injectable()\nexport class NgxEditorJSEffects {\n  constructor(private readonly actions$: Actions, private readonly editorService: NgxEditorJSService) {}\n\n  @Effect({ dispatch: false })\n  $save = this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nEditorJSInstanceModule \n\nEditorJSInstanceModule \n\nEditorJSInstanceModule  -->\n\nNgxEditorJSModule->EditorJSInstanceModule \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule\n\nNgxEditorJSModule -->\n\nEditorJSInstanceModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EditorJSInstanceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EditorJSInstanceModule\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:38\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { createModuleConfig } from './config/module-config';\nimport { NgxEditorJSComponent } from './containers/editorjs-component/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { NgxEditorJSPluginService } from './services/plugins.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { EditorJSInstanceModule } from './utils/editorjs-injector.module';\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, EditorJSInstanceModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSDirective, EditorJSInstanceModule],\n  providers: [NgxEditorJSService, NgxEditorJSPluginService]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(key: string, plugin: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the map to store the plugin\n\n                                    \n                                \n                                \n                                    plugin\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The plugin instance to add to the service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:49\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasePlugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:64\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:40\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:56\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this service\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BasePlugin, PluginConfig, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of `EditorJS`\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(@Inject(UserPlugins) userPlugins: PluginConfig) {\n    Object.entries({ ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param key The key for the map to store the plugin\n   * @param plugin The plugin instance to add to the service\n   */\n  public add(key: string, plugin: BasePlugin) {\n    this.pluginsMap[key] = plugin;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param key\n   */\n  public remove(key: string) {\n    this.pluginsMap[key] = null;\n    delete this.pluginsMap[key];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(key: string): BasePlugin {\n    return this.pluginsMap[key];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this service\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        if (plugin.shortcut) {\n          return {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            },\n            ...finalTools\n          };\n        } else {\n          return { [key]: plugin.plugin(), ...finalTools };\n        }\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control EditorJS instances via Angular.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, editorService: EditorJSInstanceService, plugins: NgxEditorJSPluginService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorJSInstanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:101\n                \n            \n\n\n            \n                \n                    Clears all blocks from an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config: EditorJSConfig, includeTools?: string[], autoSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:31\n                \n            \n\n\n            \n                \n                    This method creates a new EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                EditorJSConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    includeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    autoSave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        When an instance changes we update the block map, set to false if you want to disable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:111\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\nIt also calls the maps and sets their values back to their defaults and then\ncompletes and destroys them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:54\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:46\n                \n            \n\n\n            \n                \n                    Get an EditorJS instance\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:72\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:63\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current ready state, this can be subscribed to before calling\nthe createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:93\n                \n            \n\n\n            \n                \n                    Calls the EditorJS save method which returns an OutputData object.\nFrom this the service updates the blocks map and change map values\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:82\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance.\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of Block elements to render\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { EditorJSInstanceService } from '../utils/editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly editorService: EditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService,\n    private zone: NgZone\n  ) {}\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public async createEditor(config: EditorJSConfig, includeTools?: string[], autoSave = false): Promise {\n    const options: EditorConfig = {\n      ...this.config.editorjs,\n      ...config,\n      tools: this.plugins.getTools(includeTools)\n    };\n\n    await this.editorService.createInstance(options);\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): Observable {\n    return this.editorService.getInstance(holder).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    return this.editorService.getBlocks(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    return this.editorService.getReady(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public hasChanged(holder: string): Observable {\n    return this.editorService.getChanged(holder);\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update(holder: string, blocks: Block[]) {\n    console.log(blocks);\n    this.editorService.update(holder, blocks);\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save(holder: string): void {\n    this.editorService.save(holder);\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear(holder: string): void {\n    this.editorService.clear(holder);\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy(holder: string): void {\n    this.editorService.destroyInstance(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatCardModule, MatGridListModule, MatExpansionModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule, UserPlugins } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginHeaderModule,\n  PluginLinkModule,\n  PluginListModule,\n  PluginMarkerModule,\n  PluginParagraphModule,\n  PluginSimpleImageModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { createNgxEditorJSDemoTools } from './config';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { MaterialModule } from 'apps/ngx-tinynodes/src/app/material.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core/src';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginListModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    MaterialModule,\n    MatCardModule,\n    MatButtonModule,\n    NgxTinynodesCoreModule,\n    MatGridListModule,\n    MatExpansionModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createNgxEditorJSDemoTools\n    }\n  ],\n  declarations: [PageContainerComponent],\n  exports: [PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsNgrxModule.html":{"url":"modules/NgxEditorjsNgrxModule.html","title":"module - NgxEditorjsNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsNgrxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsNgrxModule_imports\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/ngx-editorjs-ngrx.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Warning: This module is current in development and not yet published\nThis module provides a set of NGRX Effects that allow you to control\nan EditorJS instance via store actions.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\n\n/**\n * **Warning**: This module is current in development and not yet published\n *\n * This module provides a set of [NGRX Effects](https://ngrx.io/guide/effects) that allow you to control\n * an `EditorJS` instance via store actions.\n */\n@NgModule({\n  imports: [CommonModule, NgxEditorJSModule, EffectsModule.forFeature([])]\n})\nexport class NgxEditorjsNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for `EditorJS`.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ],\n  exports: [\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxHideableHeaderDemoModule.html":{"url":"modules/NgxHideableHeaderDemoModule.html","title":"module - NgxHideableHeaderDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxHideableHeaderDemoModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const ngxHideableHeaderDemoRoutes: Route[] = [];\n\n@NgModule({\n  imports: [CommonModule, RouterModule]\n})\nexport class NgxHideableHeaderDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreModule.html":{"url":"modules/NgxTinynodesCoreModule.html","title":"module - NgxTinynodesCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides all the core features across the Tinynodes site\nthat need shared.\nThis includes the ApplicationDataModule which provides state and data loading via\nthe AppService\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ApplicationDataModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationDataModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationDataModule } from './stores/app/application.module';\n\n/**\n * This module provides all the core features across the Tinynodes site\n * that need shared.\n *\n * This includes the `ApplicationDataModule` which provides state and data loading via\n * the `AppService`\n */\n@NgModule({\n  imports: [ApplicationDataModule],\n  exports: [ApplicationDataModule]\n})\nexport class NgxTinynodesCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotReady.html":{"url":"classes/NotReady.html","title":"class - NotReady","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotReady\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.NotReady\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    panelOpen\n                                \n                                \n                                    blocks\n                                \n                                \n                                    links\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editor: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:59\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:114\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:147\n                \n            \n\n\n            \n                \n                    After the content has init overide the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:121\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:107\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePanel(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:57\n                \n            \n\n\n            \n                \n                    Toggles the panel state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:30\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        panelOpen\n                    \n                \n\n                \n                    \n                        getpanelOpen()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:50\n                                \n                            \n                    \n                        \n                                Gets if the panel is open or not\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:83\n                                \n                            \n                    \n                        \n                                Get the blocks for the page\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        links\n                    \n                \n\n                \n                    \n                        getlinks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:90\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:100\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:135\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, takeUntil, tap, pluck, filter, take } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { MenuGroup } from 'apps/ngx-tinynodes/src/app/core/types/app';\nimport { NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core/src/lib/stores/app/application.model';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * The blocks on the page\n   */\n  private blocks$: Observable;\n\n  /**\n   * If the panel is open or not\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  /**\n   * Gets if the panel is open or not\n   */\n  public get panelOpen() {\n    return this.panelOpen$.asObservable();\n  }\n\n  /**\n   * Toggles the panel state\n   */\n  public togglePanel(value: boolean) {\n    this.panelOpen$.next(value);\n  }\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editor The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editor: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {\n    this.blocks$ = this.editor.getBlocks(this.holder).pipe(\n      distinctUntilChanged(),\n      takeUntil(this.onDestroy$)\n    );\n  }\n\n  /**\n   * Get the blocks for the page\n   */\n  public get blocks() {\n    return this.blocks$;\n  }\n\n  /**\n   * Get the page links\n   */\n  public get links() {\n    return this.menu$.pipe(\n      filter(data => typeof data !== 'undefined'),\n      pluck('items')\n    );\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editor.save(this.holder);\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editor.clear(this.holder);\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1))\n      .subscribe((data: NgxEditorJSDemo) => {\n        console.log(this.holder, data);\n        this.menu$.next(data.links);\n        this.editor.update(this.holder, data.blocks);\n      });\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init overide the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n        \n          ngx-editorjs Information \n          Details on usage and links - {{ (panelOpen | async) ? 'Click To Close' : 'Click To View +' }}\n        \n        \n          \n            \n              \n                How To Use...\n                Instructions on the demo below\n              \n              \n                \n                  Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you\n                  can just start typing.\n                \n                \n                  The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list\n                  with &lt;ol> / &lt;li> and &lt;code> blocks.\n                \n\n                \n                  You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin\n                  which provides an &lt;img> tag pointing to the image, and with some additional controls.\n                \n                \n                  When saving check the output panel below to see the data results.\n                \n              \n            \n          \n          \n            \n              \n                Links\n                Links for all things related to @tinynodes/ngx-editorjs\n              \n              \n                \n                  \n                    {{ link.label }}\n                  \n                \n              \n            \n          \n        \n      \n    \n\n    \n      Demo\n      Save\n      Clear\n      Reset\n    \n    \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                ngx-editorjs Information           Details on usage and links - {{ (panelOpen | async) ? \\'Click To Close\\' : \\'Click To View +\\' }}                                                                    How To Use...                Instructions on the demo below                                                              Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you                  can just start typing.                                                  The default block is a  paragraph, you can also add header  -  blocks, list                  with  /  and  blocks.                                                  You can also paste in an  url into the editor and it will start the SimpleImage plugin                  which provides an  tag pointing to the image, and with some additional controls.                                                  When saving check the output panel below to see the data results.                                                                                                        Links                Links for all things related to @tinynodes/ngx-editorjs                                                                                  {{ link.label }}                                                                                                  Demo      Save      Clear      Reset                                              Output          Data from the EditorJS instance                          {{ asJSON | async }}                         '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the ToolSettings for this plugin\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Code from '@editorjs/code';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  /**\n   * Returns the `ToolSettings` for this plugin\n   */\n  public plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [PluginCode]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig-1.html":{"url":"interfaces/PluginConfig-1.html","title":"interface - PluginConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * A module that provides the default `EditorJS` header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginImage]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/link) for API details\n */\n@NgModule({\n  providers: [PluginLink]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  and  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` and `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  and  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` and `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/list) for API details\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a inline marker tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                    Public\n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:20\n                \n            \n\n\n            \n                \n                    Returns the plugin shortcut\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a inline marker tool for `EditorJS`\n */\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Marker;\n  }\n  /**\n   * Returns the plugin shortcut\n   */\n  public shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS inline marker tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n/**\n * A module that provides the default `EditorJS` inline marker tool.\n * See [the GitHub repo](https://github.com/editor-js/marker) for API details\n */\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the simple image tool for  block editor EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the simple image tool for `` block editor `EditorJS`\n */\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the simple image tools for EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n/**\n * A module that provides the simple image tools for `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ready.html":{"url":"classes/Ready.html","title":"class - Ready","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ready\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Ready\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:46\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {boolean}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveEnd.html":{"url":"classes/SaveEnd.html","title":"class - SaveEnd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveEnd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveEnd\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveStart.html":{"url":"classes/SaveStart.html","title":"class - SaveStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveStart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveStart\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                openSourceMenu\n                            \n                            \n                                projectsMenu\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core';\n\n@Component({\n  selector: 'tinynodes-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent {\n  @Input()\n  projectsMenu: MenuGroup;\n\n  @Input()\n  openSourceMenu: MenuGroup;\n}\n\n    \n\n    \n        \n  {{ projectsMenu.title }}\n\n  {{ child.label }}\n\n\n\n  {{ openSourceMenu.title }}\n\n  {{ child.label }}\n -->\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ projectsMenu.title }}  {{ child.label }}  {{ openSourceMenu.title }}  {{ child.label }} -->'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestClass.html":{"url":"classes/TestClass.html","title":"class - TestClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos.html":{"url":"interfaces/TinynodeDemos.html","title":"interface - TinynodeDemos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos-1.html":{"url":"interfaces/TinynodeDemos-1.html","title":"interface - TinynodeDemos-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap-1.html":{"url":"interfaces/ToolSettingsMap-1.html","title":"interface - ToolSettingsMap-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.0. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvments\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            install : ^0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-markdown : ^7.1.5\n        \n            npm : ^6.9.0\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationStateKeys   (libs/.../application.model.ts)\n                        \n                        \n                            ApplicationStateKeys   (apps/.../application.model.ts)\n                        \n                        \n                            EditorJSActionTypes   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                        \n                            \n                                 SaveStart\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start Save\n                            \n                        \n                        \n                            \n                                 SaveEnd\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start End\n                            \n                        \n                        \n                            \n                                 NotReady\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Not Ready\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Ready\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Changed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createNgxEditorJSDemoTools   (libs/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The config to merge\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditorJSConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Creates the configuration from the module config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNgxEditorJSDemoTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNgxEditorJSDemoTools()\n                \n            \n\n\n\n\n            \n                \n                    Creates the tools for the ngx-tinynodes demo application\n\n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the development diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThe ngx-editorjs module provides an EditorJS instance within an Angular application and provides a Directive to attach to and block element, a out-of-the-box component to use and a service to interact with EditorJS instances.\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides a module that exports a set of default plugins for @tinynodes/ngx-editorjs.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EditorJSInstanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsNgrxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxHideableHeaderDemoModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_EditorJSInstanceModule\n\n\n\ncluster_EditorJSInstanceModule_providers\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nEditorJSInstanceModule \n\nEditorJSInstanceModule \n\nEditorJSInstanceModule  -->\n\nNgxEditorJSModule->EditorJSInstanceModule \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nEditorJSInstanceService\n\nEditorJSInstanceService\n\n\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule -->\n\nEditorJSInstanceService->EditorJSInstanceModule\n\n\n\nNgxEditorJSModule -->\n\nEditorJSInstanceModule->NgxEditorJSModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginCode\n\nPluginCode\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    43 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            NgxEditorJSActions   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n    \n        \n            \n                \n                    \n                    NgxEditorJSActions\n                \n            \n            \n                \n                        SaveStart | SaveEnd | NotReady | Ready | Changed\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app-routing.module.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            ngxHideableHeaderDemoRoutes   (libs/.../ngx-hideable-header-demo.module.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n]\n                        \n                    \n\n                \n                    \n                        The main application routes\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [['blocksMap', []], ['changeMap', 0], ['readyMap', false]]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    redirectTo: 'ngx-editorjs-demo/pages',\n    pathMatch: 'full'\n  },\n  {\n    path: 'ngx-editorjs-demo/pages',\n    component: PageContainerComponent\n  },\n\n  {\n    path: 'ngx-editorjs-demo/pages/:id',\n    component: PageContainerComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxHideableHeaderDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\nPlease note due to a bug in CompoDoc the `README.md` files are currently not generated correctly - these are rendered correctly on GitHub and NPM.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS via a directive, component and service.\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm along with the plugins module and EditorJS module. For each plugin you want to use you also need to install it's dependency - see the Plugin Docs for more information.\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins @editorjs/editorjs @editorjs/paragraph....\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\nimport {\n  PluginParagraphModule,\n  PluginParagraph,\n  PluginHeaderModule,\n  PluginHeader,\n  PluginListModule,\n  PluginList\n} from '@tinynodes/ngx-editorjs-plugins';\nexport function createTools() {\n  return {\n    paragraph: new PluginParagraph(),\n    header: new PluginHeader(),\n    list: new PluginList()\n  };\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key | Description                                                                                       |\n| ----------------- | ------------------------------------------------------------------------------------------------- |\n| autofocus       | Sets the EditorJS instance to autofocus on load                                                   |\n| data            | Initial data to load into the editor, this is an OutputData object from EditorJS                |\n| hideToolbar     | Hides the toolbar by default                                                                      |\n| holder          | The element ID of the holder, this will set all instances in this module to use this as a default |\n| initialBlock    | The default block type to use in the editor                                                       |\n| minHeight       | Height of Editor's bottom area that allows to set focus on the last Block                         |\n| placeholder     | Placeholder of the first block                                                                    |\n| sanitizer       | Content sanitizer configurations                                                                  |\nAdding custom tools\nSee Adding Custom Tools\nWhat's in the library\nNgxEditorJSDirective\nThis is the main directive which can be used on any element with the [ngxEditorJS]. It has one input which is blocks and this takes an array of EditorJS blocks.\nNgxEditorJSComponent\nThis component can be used in any Angular component using the  tag. Again this component can take a set of blocks, it also provides a holder input for overriding the ID.\nNgxEditorJSService\nThis service provides handling the life-cycle of the EditorJS instance, and exposes the underlying EditorJS instance.API - in future releases more of the API will be exposed via service methods to make controlling the container easier.\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.3.1] - 2019-05-15\nChanged\n\nFixed bug with passing data to EditorJS instance service.\n\n[1.3.0] - 2019-05-15\nAdded\n\n@Input properties on the component and directive for providing EditorJS instance configuration\ncreateEditorJSConfig function available to generate EditorJS configurations\nLots more doc improvements and updated demo\n\nChanged\n\nInternal service now uses an EditorJS injector module and service, provides more robust control and creation of EditorJS instances and controlling them.\n\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides a default set of EditorJS plugins for @tinynodes/ngx-editorjs via Angular modules.\nPeer Dependencies\nAll EditorJS plugins are listed as peerDependencies of the project - this is because Angular requires these modules to be in the root. You must manually install these are the root of your Angular application.\n```bash\n\nnpm install @editorjs/paragraph @editorjs/header ....\n```\n\nPlugin List\n| Plugin Name             | Description                                            | Links                                                                                               |\n| ----------------------- | ------------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| PluginCodeModule        | Provides a  block editor                       | README GitHub              |\n| PluginHeaderModule      | Provides a  -  block editor                  | README GitHub          |\n| PluginImageModule       | Provides an  block editor + file upload support | README GitHub            |\n| PluginLinkModule        | Provides an  block editor                         | README GitHub              |\n| PluginIListModule       | Provides an / block editor                   | README GitHub              |\n| PluginMarkerModule      | Provides inline text marking                           | README GitHub          |\n| PluginParagraphModule   | Provides an  block editor                         | README GitHub    |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | README GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.1.1] - 2019-05-15\nChanged\n\nDocumentation updates\n\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
