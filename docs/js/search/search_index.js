var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.558,1,1.996]],["body/components/AppComponent.html",[0,2.336,1,2.791,2,2.295,3,0.105,4,0.105,5,1.8,6,1.125,7,1.696,8,1.8,9,0.084,10,3.12,11,5.863,12,2.492,13,0.511,14,2.89,15,1.761,16,2.416,17,3.866,18,4.067,19,1.696,20,4.201,21,3.135,22,2.708,23,5.177,24,2.708,25,4.307,26,0.407,27,1.219,28,3.068,29,2.923,30,4.067,31,5.863,32,1.023,33,4.525,34,5.015,35,3.109,36,3.256,37,1.083,38,2.249,39,3.231,40,1.118,41,4.307,42,1.219,43,0.014,44,2.021,45,0.858,46,0.612,47,3.109,48,1.308,49,2.759,50,2.552,51,3.75,52,2.862,53,1.885,54,3.75,55,2.862,56,1.262,57,2.186,58,2.862,59,1.693,60,4.508,61,4.508,62,2.249,63,3.75,64,2.862,65,0.45,66,2.89,67,2.249,68,0.287,69,1.921,70,1.326,71,2.249,72,2.492,73,2.249,74,0.094,75,0.315,76,1.171,77,1.696,78,2.492,79,2.492,80,2.492,81,2.492,82,2.492,83,2.416,84,2.196,85,2.117,86,5.76,87,2.862,88,3.068,89,1.921,90,3.475,91,2.862,92,1.996,93,2.492,94,3.75,95,3.75,96,2.492,97,2.492,98,2.492,99,2.492,100,2.492,101,1.387,102,0.968,103,1.387,104,3.75,105,4.158,106,4.508,107,2.492,108,2.492,109,2.492,110,3.75,111,3.75,112,0.954,113,3.75,114,2.492,115,2.492,116,2.492,117,3.383,118,2.492,119,2.492,120,2.492,121,2.492,122,2.492,123,2.492,124,2.492,125,0.968,126,2.708,127,2.087,128,1.271,129,3.622,130,1.8,131,1.8,132,1.387,133,1.8,134,1.453,135,1.8,136,1.8,137,1.326,138,1.8,139,1.387,140,1.8,141,1.453,142,1.8,143,1.696,144,1.271,145,1.606,146,1.8,147,0.005,148,0.007,149,0.005]],["title/modules/AppModule.html",[150,0.683,151,2.764]],["body/modules/AppModule.html",[1,3.724,3,0.124,4,0.124,9,0.099,10,1.567,13,0.604,14,3.268,15,2.553,21,2.471,43,0.014,53,1.773,65,0.579,68,0.339,74,0.111,75,0.372,83,2.732,84,1.861,125,1.144,134,3.497,141,3.497,147,0.006,148,0.008,149,0.006,150,0.946,151,5.389,152,1.186,153,1.329,154,2.333,155,2.333,156,1.383,157,1.329,158,2.945,159,2.945,160,2.945,161,2.945,162,4.624,163,4.624,164,3.711,165,4.624,166,2.073,167,1.44,168,1.44,169,3.382,170,4.869,171,4.24,172,4.24,173,4.869,174,4.869,175,3.062,176,4.869,177,4.869,178,3.382,179,1.914,180,4.869,181,2.945,182,2.945,183,4.24,184,3.825,185,2.441,186,4.869,187,3.382,188,2.945,189,2.657,190,3.382,191,2.359,192,2.945,193,2.945,194,1.897,195,3.382,196,2.945,197,1.914,198,0.234,199,2.945,200,2.657,201,2.657,202,3.382,203,3.382,204,3.382,205,3.382,206,2.657,207,3.382,208,3.382,209,3.382,210,3.382,211,3.382,212,3.382,213,3.382,214,3.382,215,2.657,216,3.382,217,3.382,218,3.382,219,3.382,220,3.382]],["title/modules/ApplicationDataModule.html",[150,0.683,162,2.764]],["body/modules/ApplicationDataModule.html",[3,0.187,4,0.187,9,0.15,10,2.374,39,4.369,43,0.014,65,0.539,68,0.513,74,0.168,75,0.564,125,1.732,147,0.008,148,0.01,149,0.008,150,0.85,152,1.797,153,2.014,154,2.095,155,2.095,156,2.885,157,2.014,162,5.454,166,2.745,167,2.181,168,2.181,179,2.534,221,4.46,222,4.46,223,4.898,224,4.616,225,5.122,226,4.46,227,5.122,228,4.024]],["title/injectables/ApplicationQuery.html",[223,2.59,229,0.633]],["body/injectables/ApplicationQuery.html",[3,0.198,4,0.198,9,0.158,10,3.089,37,2.045,40,0.931,42,2.302,43,0.014,44,1.897,45,1.077,46,1.157,65,0.549,68,0.542,74,0.178,75,0.595,147,0.009,148,0.011,149,0.009,191,2.62,194,3.74,223,4.193,224,4.472,228,4.248,229,1.025,230,1.829,231,4.708,232,2.522,233,5.678,234,4.708,235,5.407,236,3.629,237,4.708,238,4.708,239,4.708]],["title/injectables/ApplicationService.html",[39,2.311,229,0.633]],["body/injectables/ApplicationService.html",[3,0.177,4,0.177,9,0.141,10,3.356,26,0.685,28,2.86,29,3.15,32,1.475,37,1.825,39,3.482,40,1.181,42,2.055,43,0.014,44,1.693,45,0.961,46,1.032,56,1.414,57,2.449,65,0.527,68,0.484,70,2.236,74,0.159,75,0.531,76,2.806,77,2.86,147,0.008,148,0.01,149,0.008,194,3.849,223,4.554,224,4.292,226,4.202,228,3.791,229,0.954,230,1.632,233,4.875,240,4.202,241,6.306,242,3.903,243,5.689,244,4.202,245,4.826,246,4.826,247,4.826,248,4.826,249,4.166,250,1.319,251,4.826,252,4.826,253,4.826]],["title/interfaces/ApplicationState.html",[236,2.764,254,0.336]],["body/interfaces/ApplicationState.html",[3,0.22,4,0.22,9,0.175,10,2.78,26,0.852,27,2.009,43,0.013,45,1.195,74,0.197,147,0.01,148,0.012,149,0.01,236,4.765,243,6.14,254,0.49,255,1.583,256,5.224,257,2.973]],["title/injectables/ApplicationStore.html",[224,2.441,229,0.633]],["body/injectables/ApplicationStore.html",[3,0.191,4,0.191,9,0.152,10,3.295,15,2.132,26,0.741,32,1.549,37,2.69,40,1.122,43,0.014,44,1.829,56,1.528,57,2.646,65,0.518,68,0.522,74,0.171,75,0.574,147,0.008,148,0.011,149,0.008,191,2.526,194,3.989,224,3.863,229,1.002,230,1.763,232,2.465,236,3.499,237,4.54,243,5.12,258,4.54,259,7.45,260,5.214,261,5.214,262,5.12,263,4.096,264,3.09,265,5.214,266,5.214]],["title/interfaces/BasePlugin.html",[254,0.336,267,1.251]],["body/interfaces/BasePlugin.html",[3,0.142,4,0.142,9,0.113,13,0.694,15,1.588,26,0.552,27,1.519,32,1.578,40,0.669,43,0.014,45,1.07,46,1.61,59,2.111,65,0.391,68,0.389,74,0.229,75,0.427,84,1.267,147,0.006,148,0.009,149,0.006,150,0.891,198,0.296,250,1.467,254,0.569,255,1.025,267,2.016,268,0.234,269,2.607,270,3.377,271,3.182,272,2.008,273,3.182,274,3.647,275,4.455,276,2.947,277,3.182,278,2.179,279,2.241,280,3.87,281,1.025,282,1.971,283,1.724,284,1.946,285,2.443,286,1.412,287,1.8,288,1.971,289,1.971,290,2.443,291,2.179,292,3.182,293,3.182,294,1.654,295,2.725,296,2.601,297,1.971,298,2.302,299,2.179,300,1.8,301,1.882,302,2.302]],["title/interfaces/BasePlugin-1.html",[254,0.282,267,1.049,303,1.358]],["body/interfaces/BasePlugin-1.html",[3,0.142,4,0.142,9,0.113,13,0.693,15,1.585,26,0.55,27,1.517,32,1.576,40,0.667,43,0.014,45,1.068,46,1.609,59,2.108,65,0.39,68,0.388,74,0.229,75,0.426,84,1.264,147,0.006,148,0.009,149,0.006,150,0.889,198,0.319,250,1.465,254,0.568,255,1.023,267,2.014,268,0.233,270,3.372,271,3.177,272,2.008,273,3.177,274,3.645,275,4.451,276,2.944,277,3.177,278,2.174,279,2.238,280,3.865,281,1.023,282,1.967,283,1.72,284,1.944,285,2.437,286,1.41,287,1.796,288,1.967,289,1.967,290,2.437,291,2.174,292,3.177,293,3.177,294,1.65,295,2.721,296,2.597,297,1.967,298,2.297,299,2.174,300,1.796,301,1.878,302,2.297,304,2.601]],["title/interfaces/Block.html",[112,0.913,254,0.336]],["body/interfaces/Block.html",[3,0.107,4,0.107,6,1.146,9,0.085,13,0.521,26,0.414,27,1.645,40,0.502,43,0.014,45,1.624,46,1.243,48,1.89,74,0.234,92,2.693,101,2.115,102,2.356,103,2.115,112,1.785,147,0.005,148,0.007,149,0.005,198,0.335,232,2.198,254,0.621,255,0.769,257,2.058,268,0.263,272,0.717,284,1.279,286,1.69,303,1.146,305,1.412,306,2.915,307,3.22,308,1.553,309,2.915,310,2.115,311,3.317,312,1.241,313,1.412,314,2.216,315,2.216,316,1.412,317,1.351,318,2.216,319,1.294,320,2.023,321,2.184,322,2.023,323,2.562,324,2.326,325,1.479,326,1.192,327,2.023,328,2.763,329,2.326,330,2.326,331,1.479,332,2.656,333,1.553,334,1.553,335,1.553,336,1.553,337,1.553,338,2.023,339,1.479,340,1.479]],["title/interfaces/BlocksMap.html",[254,0.336,341,2.441]],["body/interfaces/BlocksMap.html",[3,0.172,4,0.172,9,0.138,13,0.841,40,0.811,43,0.014,65,0.494,70,2.182,74,0.236,112,1.502,147,0.008,148,0.01,149,0.008,198,0.373,254,0.586,255,1.243,257,1.851,268,0.367,281,1.243,284,2.179,286,1.706,287,3.445,308,2.509,326,1.926,341,3.621,342,3.161,343,4.99,344,5.333,345,4.1,346,4.709,347,2.09,348,2.642,349,2.791,350,3.161,351,3.161,352,2.962,353,2.791,354,3.161,355,2.791,356,3.161,357,2.791]],["title/interfaces/ChangeMap.html",[254,0.336,357,2.441]],["body/interfaces/ChangeMap.html",[3,0.171,4,0.171,9,0.137,13,0.837,40,0.807,43,0.014,65,0.492,70,2.171,74,0.235,112,1.349,147,0.008,148,0.01,149,0.008,198,0.373,254,0.584,255,1.236,257,1.841,268,0.366,281,1.236,284,2.175,286,1.703,287,3.439,308,2.496,326,2.49,341,2.776,342,3.144,343,4.982,344,5.328,345,3.144,347,2.079,348,2.628,349,2.776,350,3.144,351,3.144,352,2.946,353,2.776,354,4.086,355,3.608,356,4.086,357,3.608,358,4.684]],["title/modules/CodeModule.html",[150,0.683,359,2.764]],["body/modules/CodeModule.html",[3,0.202,4,0.202,9,0.161,43,0.013,65,0.492,68,0.554,74,0.182,75,0.608,125,1.869,147,0.009,148,0.011,149,0.009,150,0.917,152,1.939,153,2.173,154,2.26,155,2.26,156,2.985,157,2.173,166,2.877,167,2.353,168,2.353,179,2.656,198,0.266,268,0.332,359,5.326,360,4.812,361,4.812,362,4.99,363,5.526,364,5.526]],["title/interfaces/EditorJSConfig.html",[254,0.336,365,2.974]],["body/interfaces/EditorJSConfig.html",[3,0.127,4,0.127,9,0.101,13,0.62,26,0.493,27,1.403,43,0.014,44,1.74,45,1.457,46,1.699,48,2.11,59,1.364,65,0.361,68,0.348,74,0.19,88,2.939,112,1.54,127,2.403,147,0.006,148,0.008,149,0.006,198,0.321,254,0.405,255,0.915,257,2.732,264,2.939,268,0.209,278,1.946,281,0.915,282,3.205,286,1.709,294,2.689,296,1.681,307,3.085,321,1.74,326,2.367,355,2.939,365,4.178,366,2.504,367,2.782,368,4.559,369,5.499,370,3.743,371,4.559,372,5.499,373,6.05,374,6.05,375,4.318,376,4.318,377,4.559,378,4.318,379,3.119,380,3.58,381,4.318,382,4.318,383,4.318,384,2.403,385,3.895,386,2.939,387,4.318,388,4.318,389,3.895,390,3.895,391,2.939,392,4.318,393,3.895,394,5.499,395,4.318,396,2.056,397,2.182,398,2.725]],["title/interfaces/EditorMap.html",[254,0.336,349,2.441]],["body/interfaces/EditorMap.html",[3,0.173,4,0.173,9,0.138,13,0.846,40,0.815,43,0.014,65,0.495,70,2.194,74,0.236,112,1.358,147,0.008,148,0.01,149,0.008,198,0.379,254,0.587,255,1.249,257,1.861,268,0.369,281,1.249,284,2.183,286,1.709,287,3.451,308,2.523,326,1.936,341,2.806,342,3.178,343,4.999,344,5.212,345,3.178,347,2.102,348,3.439,349,3.633,350,3.178,351,3.178,352,2.978,353,2.806,354,3.178,355,2.806,356,3.178,357,2.806,399,4.735]],["title/components/EditorPageComponent.html",[0,1.558,132,1.996]],["body/components/EditorPageComponent.html",[0,1.98,1,1.412,2,2.326,3,0.107,4,0.107,5,1.833,6,1.146,7,1.727,8,1.833,9,0.085,19,1.727,20,4.222,21,1.479,22,2.745,24,2.745,26,0.414,27,1.235,28,4.015,29,2.216,32,1.037,36,2.745,37,1.102,40,1.125,42,1.241,43,0.014,44,2.039,45,0.87,46,0.623,48,0.885,49,1.553,53,2.379,56,1.279,57,2.216,65,0.453,68,0.292,70,1.351,73,2.29,74,0.096,75,0.321,76,2.14,77,1.727,83,2.449,84,2.323,85,3.085,88,1.727,89,2.93,90,2.93,112,1.16,125,0.986,126,2.745,127,2.115,128,1.294,129,3.655,130,1.833,131,1.833,132,2.816,133,1.833,134,1.479,135,1.833,136,1.833,137,1.351,138,1.833,139,1.412,140,1.833,141,1.479,142,1.833,143,1.727,144,1.294,145,1.635,146,1.833,147,0.005,148,0.007,149,0.005,150,0.724,197,2.058,198,0.366,242,2.745,249,3.513,250,1.193,268,0.407,291,2.449,347,2.323,389,3.429,400,5.898,401,5.322,402,2.538,403,1.785,404,5.234,405,5.234,406,4.366,407,6.534,408,5.234,409,5.812,410,5.812,411,2.915,412,5.812,413,2.95,414,2.915,415,4.366,416,2.915,417,2.915,418,4.366,419,4.366,420,2.93,421,4.366,422,2.915,423,2.915,424,2.915,425,2.915,426,4.366,427,2.915,428,2.29,429,2.915,430,2.915,431,2.915,432,2.915,433,2.915,434,2.915,435,2.915,436,2.915,437,2.915,438,2.93,439,3.801,440,3.801,441,2.93,442,4.366,443,3.801,444,4.366,445,2.93,446,2.29,447,2.29]],["title/interfaces/Header.html",[254,0.336,323,1.558]],["body/interfaces/Header.html",[3,0.108,4,0.108,6,1.163,9,0.086,13,0.529,26,0.42,27,1.494,43,0.014,45,1.602,46,1.253,48,1.995,74,0.235,92,3.243,101,2.139,102,2.367,103,2.139,112,1.77,147,0.005,148,0.007,149,0.005,198,0.316,232,2.215,254,0.617,255,0.781,257,2.076,268,0.178,272,0.728,284,0.867,286,1.671,303,1.736,305,1.434,307,3.022,310,1.434,311,2.814,312,1.26,313,1.434,314,2.241,315,2.241,316,1.434,317,1.371,318,2.241,319,1.314,320,2.046,321,2.198,322,2.046,323,2.795,324,3.501,325,2.241,326,2.16,327,2.046,328,2.781,329,2.353,330,2.353,331,1.502,332,2.68,333,1.577,334,1.577,335,1.577,336,1.577,337,1.577,338,2.046,339,1.502,340,1.502]],["title/interfaces/HeaderBlock.html",[254,0.336,327,1.909]],["body/interfaces/HeaderBlock.html",[3,0.111,4,0.111,6,1.191,9,0.089,13,0.542,26,0.43,27,1.516,43,0.014,45,1.611,46,1.267,48,1.921,74,0.237,92,2.746,101,2.178,102,2.383,103,2.178,112,1.787,147,0.005,148,0.007,149,0.005,198,0.33,232,2.394,254,0.626,255,0.8,257,2.106,268,0.182,272,0.746,284,0.888,286,1.617,303,1.191,305,1.468,307,2.943,310,1.468,311,2.854,312,1.291,313,1.468,314,2.281,315,2.281,316,1.468,317,1.404,318,2.281,319,1.345,320,2.083,321,2.22,322,2.083,323,2.665,324,2.395,325,1.538,326,1.239,327,2.482,328,2.809,329,2.395,330,2.395,331,1.538,332,2.719,333,1.615,334,1.615,335,1.615,336,1.615,337,1.615,338,2.083,339,1.538,340,1.538]],["title/interfaces/Image.html",[254,0.336,328,1.828]],["body/interfaces/Image.html",[3,0.102,4,0.102,6,1.095,9,0.081,13,0.498,26,0.396,27,1.441,43,0.014,45,1.606,46,1.642,48,1.95,74,0.231,92,2.632,101,2.044,102,2.324,103,2.044,112,1.757,147,0.005,148,0.007,149,0.005,198,0.309,232,2.148,254,0.61,255,0.735,257,2.766,268,0.168,272,0.685,284,0.816,286,1.695,303,1.095,305,1.349,307,2.961,310,1.349,311,2.713,312,1.186,313,1.349,314,2.141,315,2.141,316,1.349,317,1.291,318,2.141,319,1.236,320,1.955,321,2.141,322,1.955,323,2.599,324,2.248,325,1.413,326,1.139,327,1.955,328,3.05,329,3.422,330,3.422,331,2.141,332,3.259,333,3.027,334,2.248,335,3.027,336,2.248,337,3.027,338,1.955,339,1.413,340,1.413]],["title/interfaces/ImageBlock.html",[254,0.336,338,1.909]],["body/interfaces/ImageBlock.html",[3,0.111,4,0.111,6,1.191,9,0.089,13,0.542,26,0.43,27,1.516,43,0.014,45,1.611,46,1.267,48,1.921,74,0.237,92,2.746,101,2.178,102,2.383,103,2.178,112,1.787,147,0.005,148,0.007,149,0.005,198,0.33,232,2.394,254,0.626,255,0.8,257,2.106,268,0.182,272,0.746,284,0.888,286,1.617,303,1.191,305,1.468,307,2.943,310,1.468,311,2.854,312,1.291,313,1.468,314,2.281,315,2.281,316,1.468,317,1.404,318,2.281,319,1.345,320,2.083,321,2.22,322,2.083,323,2.595,324,2.395,325,1.538,326,1.239,327,2.083,328,2.943,329,2.395,330,2.395,331,1.538,332,2.719,333,1.615,334,1.615,335,1.615,336,1.615,337,1.615,338,2.482,339,1.538,340,1.538]],["title/modules/ImageModule.html",[150,0.683,448,2.974]],["body/modules/ImageModule.html",[3,0.202,4,0.202,9,0.161,43,0.013,65,0.492,68,0.554,74,0.182,75,0.608,125,1.869,147,0.009,148,0.011,149,0.009,150,0.917,152,1.939,153,2.173,154,2.26,155,2.26,156,2.985,157,2.173,166,2.877,167,2.353,168,2.353,179,2.656,198,0.266,268,0.332,448,5.729,449,4.812,450,4.812,451,5.326,452,5.526,453,4.812]],["title/modules/LinkModule.html",[150,0.683,454,2.764]],["body/modules/LinkModule.html",[3,0.202,4,0.202,9,0.161,43,0.013,65,0.492,68,0.554,74,0.182,75,0.608,125,1.869,147,0.009,148,0.011,149,0.009,150,0.917,152,1.939,153,2.173,154,2.26,155,2.26,156,2.985,157,2.173,166,2.877,167,2.353,168,2.353,179,2.656,198,0.266,268,0.332,454,5.326,455,4.812,456,4.812,457,5.326,458,5.526,459,5.526]],["title/interfaces/List.html",[102,1.393,254,0.336]],["body/interfaces/List.html",[3,0.108,4,0.108,6,1.163,9,0.086,13,0.529,26,0.42,27,1.494,43,0.014,45,1.607,46,1.253,48,1.995,74,0.235,92,2.714,101,3.183,102,2.531,103,3.183,112,1.77,147,0.005,148,0.007,149,0.005,198,0.316,232,2.215,254,0.617,255,0.781,257,2.076,268,0.178,272,0.728,284,0.867,286,1.606,303,1.163,305,1.434,307,3.022,310,1.434,311,3.501,312,1.26,313,1.434,314,2.241,315,2.241,316,1.434,317,1.371,318,2.972,319,1.314,320,2.046,321,2.198,322,2.046,323,2.575,324,2.353,325,1.502,326,1.21,327,2.046,328,2.781,329,2.353,330,2.353,331,1.502,332,2.68,333,1.577,334,1.577,335,1.577,336,1.577,337,1.577,338,2.046,339,1.502,340,1.502]],["title/interfaces/ListBlock.html",[254,0.336,320,1.909]],["body/interfaces/ListBlock.html",[3,0.11,4,0.11,6,1.183,9,0.088,13,0.538,26,0.428,27,1.51,43,0.014,45,1.61,46,1.263,48,2.008,74,0.236,92,2.736,101,2.166,102,2.473,103,2.166,112,1.786,147,0.005,148,0.007,149,0.005,198,0.338,232,2.387,254,0.619,255,0.794,257,2.097,268,0.181,272,1.1,284,0.882,286,1.614,303,1.183,305,1.458,307,2.935,310,1.458,311,2.843,312,1.282,313,1.458,314,2.269,315,2.269,316,1.458,317,1.395,318,2.269,319,1.985,320,2.472,321,2.214,322,2.072,323,2.589,324,2.383,325,1.528,326,1.231,327,2.072,328,2.801,329,2.383,330,2.383,331,1.528,332,2.708,333,1.604,334,1.604,335,1.604,336,1.604,337,1.604,338,2.072,339,1.528,340,1.528]],["title/modules/MarkerModule.html",[150,0.683,460,2.764]],["body/modules/MarkerModule.html",[3,0.202,4,0.202,9,0.161,43,0.013,65,0.492,68,0.554,74,0.182,75,0.608,125,1.869,147,0.009,148,0.011,149,0.009,150,0.917,152,1.939,153,2.173,154,2.26,155,2.26,156,2.985,157,2.173,166,2.877,167,2.353,168,2.353,179,2.656,198,0.266,268,0.332,460,5.326,461,4.812,462,4.812,463,4.99,464,5.526,465,4.812]],["title/modules/MaterialModule.html",[150,0.683,163,2.764]],["body/modules/MaterialModule.html",[3,0.209,4,0.209,9,0.167,10,2.644,43,0.013,65,0.502,68,0.572,69,3.83,74,0.188,75,0.628,147,0.009,148,0.011,149,0.009,152,2.002,157,2.243,163,4.624,175,3.589,179,2.709,466,5.706,467,7.402,468,7.402,469,7.402,470,7.402,471,6.445]],["title/components/NavBarComponent.html",[0,1.558,134,2.09]],["body/components/NavBarComponent.html",[0,2.512,1,1.654,2,2.613,3,0.125,4,0.125,5,2.148,6,1.342,7,2.024,8,2.148,9,0.1,10,2.905,19,2.024,20,4.397,21,1.733,22,3.084,24,3.084,26,0.485,29,1.733,32,1.165,35,3.54,37,1.292,38,2.682,39,3.517,40,0.988,42,1.454,43,0.014,44,2.2,45,0.68,46,0.73,47,3.54,48,1.037,49,1.82,53,1.244,54,5.782,56,1.001,57,1.733,65,0.357,66,3.291,68,0.342,71,2.682,74,0.112,75,0.376,76,2.346,77,2.024,84,2.322,85,1.396,88,2.906,90,3.291,92,2.272,93,2.973,94,4.269,95,4.269,96,2.973,97,2.973,98,2.973,99,2.973,100,2.973,101,1.654,102,1.155,103,1.654,104,4.269,105,4.527,106,4.995,107,2.973,108,2.973,109,2.973,110,4.269,111,4.269,112,1.086,113,4.269,114,2.973,115,2.973,116,2.973,117,3.852,118,2.973,119,2.973,120,2.973,121,2.973,122,2.973,123,2.973,124,2.973,125,1.155,126,3.084,127,2.376,128,1.516,129,3.943,130,2.148,131,2.148,132,1.654,133,2.148,134,3.182,135,4.582,136,2.148,137,1.582,138,2.148,139,1.654,140,2.148,141,1.733,142,2.148,143,2.024,144,1.516,145,1.916,146,2.148,147,0.006,148,0.008,149,0.006,206,4.925,241,5.459,472,5.459,473,2.973,474,4.903,475,5.737,476,4.903,477,4.903,478,4.903,479,3.415,480,3.415,481,4.903,482,3.415,483,3.54,484,4.269,485,3.54]],["title/components/NgxEditorJSComponent.html",[0,1.558,137,1.909]],["body/components/NgxEditorJSComponent.html",[0,2.717,1,1.456,2,2.38,3,0.11,4,0.11,5,1.89,6,1.181,7,3.159,8,1.89,9,0.088,13,0.798,15,1.826,19,1.781,20,4.257,21,1.525,22,2.808,24,2.808,26,0.427,27,1.264,29,2.705,35,3.224,37,1.136,40,1.086,42,1.279,43,0.014,44,2.07,45,1.256,46,1.14,48,1.356,53,1.094,62,2.36,65,0.43,66,3.577,67,2.36,68,0.301,74,0.099,75,0.331,76,2.937,84,2.232,85,3.071,88,2.647,89,2.997,90,2.997,92,1.392,112,1.181,117,2.36,125,1.016,126,2.808,127,2.859,128,2.366,129,3.711,130,1.89,131,1.89,132,1.456,133,1.89,134,1.525,135,1.89,136,1.89,137,2.734,138,1.89,139,1.456,140,1.89,141,1.525,142,1.89,143,1.781,144,2.619,145,1.686,146,1.89,147,0.005,148,0.007,149,0.005,198,0.284,254,0.364,268,0.397,274,2.164,286,1.025,294,1.902,312,1.902,319,1.982,331,2.266,347,2.799,367,2.505,370,3.159,379,2.808,384,2.164,385,3.508,391,2.647,413,3.2,446,2.36,447,3.508,486,5.754,487,2.616,488,3.508,489,4.466,490,4.466,491,3.96,492,3.888,493,5.33,494,4.466,495,4.1,496,3.005,497,4.466,498,3.005,499,4.466,500,3.005,501,4.466,502,3.888,503,3.005,504,2.616,505,2.616,506,2.36,507,2.36,508,2.017,509,2.616,510,3.005,511,3.005,512,3.005,513,3.005,514,3.005,515,3.005]],["title/interfaces/NgxEditorJSConfig.html",[254,0.336,396,2.441]],["body/interfaces/NgxEditorJSConfig.html",[3,0.16,4,0.16,9,0.128,26,0.622,27,1.648,43,0.014,44,1.537,45,0.872,46,1.246,48,1.987,59,1.722,65,0.424,68,0.439,74,0.215,88,2.596,112,1.45,127,2.122,147,0.007,148,0.009,149,0.007,198,0.359,254,0.475,255,1.156,257,2.29,264,2.596,268,0.263,278,2.457,281,1.156,282,2.956,286,1.502,294,2.48,296,2.122,307,2.586,321,1.537,326,1.791,355,2.596,365,5.036,366,3.162,367,2.457,368,3.162,369,3.813,370,2.596,371,3.162,372,3.813,373,5.072,374,5.072,375,3.813,376,3.813,377,4.205,378,3.813,379,2.754,380,3.162,381,3.813,382,3.813,383,3.813,384,2.122,385,3.44,386,2.596,387,3.813,388,3.813,389,3.44,390,3.44,391,2.596,392,3.813,393,3.44,394,5.072,395,3.813,396,3.452,397,2.754,398,3.44]],["title/directives/NgxEditorJSDirective.html",[128,1.828,144,1.828]],["body/directives/NgxEditorJSDirective.html",[2,2.471,3,0.116,4,0.116,9,0.092,13,0.565,14,3.112,16,2.601,19,1.874,20,2.748,26,0.449,27,1.312,29,3.069,30,4.314,32,1.102,33,4.751,35,3.348,37,1.196,40,1.228,42,1.975,43,0.014,44,1.627,45,1.205,46,0.992,48,0.96,49,1.685,50,2.748,56,1.773,57,3.069,65,0.44,66,3.112,68,0.317,74,0.104,75,0.348,76,2.246,77,1.874,84,1.512,85,2.634,112,1.217,127,2.93,128,2.988,143,1.874,144,2.059,145,2.601,147,0.005,148,0.008,149,0.005,198,0.35,242,2.916,250,1.267,268,0.438,281,0.834,300,2.149,332,2.353,347,2.859,367,3.776,379,2.916,384,2.247,403,1.896,413,3.416,441,3.112,491,3.112,492,4.038,495,3.081,506,2.484,507,2.484,516,6.337,517,2.753,518,3.643,519,5.266,520,3.643,521,4.038,522,5.491,523,5.491,524,6.44,525,6.048,526,4.637,527,3.162,528,6.048,529,4.637,530,4.637,531,2.748,532,3.348,533,3.162,534,4.637,535,6.048,536,3.162,537,2.283,538,3.162,539,3.162,540,2.753,541,3.162,542,3.162,543,3.162,544,3.162,545,3.162,546,3.162,547,3.162,548,3.162,549,3.162,550,3.162,551,3.162,552,3.162]],["title/modules/NgxEditorJSModule.html",[150,0.683,164,2.311]],["body/modules/NgxEditorJSModule.html",[3,0.091,4,0.091,9,0.073,13,0.691,15,2.188,16,2.168,17,3.591,32,0.59,37,0.94,40,0.428,42,1.058,43,0.014,44,0.872,45,0.495,46,1.455,47,2.79,48,1.44,49,1.324,50,2.291,56,0.728,59,1.865,65,0.547,68,0.249,74,0.156,75,0.273,85,1.016,102,0.84,125,0.84,137,3.334,144,3.194,147,0.004,148,0.006,149,0.004,150,0.961,152,0.872,153,0.977,154,1.94,155,1.016,156,2.188,157,1.865,164,4.434,166,1.646,167,1.058,168,1.058,175,2.43,179,1.865,197,1.519,198,0.279,215,3.036,250,1.296,264,1.473,268,0.232,273,2.291,275,2.594,282,2.716,283,1.716,296,1.204,297,1.961,307,1.103,319,1.716,321,1.356,323,0.94,367,3.002,368,2.79,370,2.291,371,2.79,386,3.171,396,3.797,397,2.43,413,3.115,441,4.446,504,2.163,505,2.163,506,1.952,508,1.668,520,3.036,531,3.171,553,2.163,554,2.163,555,2.163,556,2.163,557,2.163,558,4.894,559,5.046,560,4.119,561,3.86,562,2.79,563,1.794,564,3.365,565,3.036,566,4.13,567,3.863,568,3.365,569,3.865,570,3.865,571,2.485,572,4.659,573,3.036,574,4.659,575,3.726,576,4.743,577,3.036,578,1.794,579,3.865,580,2.485,581,2.485,582,2.485,583,2.485,584,2.485,585,2.163,586,1.394,587,2.168,588,2.485,589,2.168,590,2.485,591,2.485,592,2.168,593,2.485,594,2.79,595,1.952,596,2.594,597,2.485,598,1.952,599,2.485,600,2.485,601,2.485,602,2.485,603,2.485,604,2.485,605,2.485,606,2.485,607,2.485]],["title/injectables/NgxEditorJSService.html",[229,0.633,413,2.09]],["body/injectables/NgxEditorJSService.html",[3,0.048,4,0.048,9,0.038,13,0.863,16,1.284,17,0.885,26,0.187,27,0.648,28,3.752,29,0.669,32,0.544,37,0.866,40,1.046,42,2.283,43,0.014,44,2.221,45,1.211,46,1.232,48,1.467,49,2.397,50,1.357,56,1.82,57,2.452,59,2.331,65,0.352,68,0.132,70,0.611,74,0.043,75,0.145,76,2.883,85,2.092,105,0.952,112,1.346,147,0.002,148,0.004,149,0.002,198,0.352,229,0.352,230,0.446,249,4.079,250,0.99,264,1.357,268,0.374,276,1.016,277,1.357,281,0.348,286,1.681,287,3.211,288,0.669,294,0.975,295,1.54,296,1.109,300,1.061,341,2.863,343,1.536,344,3.019,345,1.536,347,3.047,348,2.87,349,2.666,350,2.432,351,3.019,352,1.44,353,2.863,354,1.536,355,2.148,356,3.019,357,2.863,367,4.221,370,4.364,377,2.19,379,2.279,380,1.653,384,2.872,386,1.357,391,2.148,393,1.798,396,2.148,397,0.829,413,1.839,483,1.653,491,1.536,495,2.033,507,1.035,508,3.979,520,1.798,532,1.653,537,1.653,540,1.993,561,2.279,567,4.024,573,1.798,574,1.993,585,1.148,608,1.148,609,2.289,610,4.102,611,4.498,612,3.534,613,4.498,614,3.917,615,2.289,616,4.498,617,3.624,618,2.289,619,2.289,620,2.289,621,3.624,622,1.318,623,3.034,624,3.624,625,2.289,626,2.289,627,3.624,628,4.102,629,1.318,630,1.993,631,2.289,632,1.993,633,3.034,634,2.383,635,4.498,636,2.289,637,1.993,638,1.993,639,1.993,640,1.798,641,2.289,642,2.289,643,2.289,644,1.318,645,3.624,646,2.289,647,2.289,648,2.289,649,2.289,650,1.318,651,5.115,652,4.498,653,2.289,654,1.318,655,2.289,656,1.993,657,1.148,658,1.993,659,1.993,660,2.289,661,1.318,662,3.624,663,3.624,664,2.289,665,1.318,666,2.289,667,1.318,668,1.653,669,3.155,670,2.289,671,1.318,672,1.318,673,3.693,674,1.318,675,1.318,676,1.148,677,2.289,678,1.318,679,1.318,680,1.148,681,1.318,682,5.36,683,1.318,684,3.624,685,1.318,686,2.289,687,3.624,688,1.318,689,2.289,690,3.034,691,1.993,692,1.318,693,1.318,694,1.318,695,1.993,696,1.993,697,1.993,698,1.993,699,1.318,700,1.318,701,1.318,702,1.318,703,1.318,704,1.318,705,1.318,706,2.289,707,1.318,708,1.318,709,1.318,710,2.289,711,1.318,712,1.318,713,1.318,714,1.318,715,1.318,716,1.318,717,1.318,718,1.318,719,3.034,720,1.318,721,1.318,722,1.993,723,1.798,724,1.318]],["title/modules/NgxEditorjsDemoModule.html",[150,0.683,165,2.764]],["body/modules/NgxEditorjsDemoModule.html",[3,0.123,4,0.123,9,0.098,43,0.014,65,0.587,68,0.338,69,2.261,74,0.111,75,0.371,84,1.584,125,1.139,132,3.721,139,3.784,147,0.005,148,0.008,149,0.005,150,0.559,152,1.182,153,1.324,154,2.328,155,1.378,156,1.986,157,2.238,164,3.86,165,5.459,166,2.068,167,1.435,168,1.435,175,3.054,179,1.909,188,2.933,189,2.646,197,1.324,198,0.3,199,2.933,200,2.646,268,0.203,301,2.353,359,4.618,386,1.997,401,2.646,428,2.646,454,4.618,460,4.618,471,4.228,531,1.997,577,3.814,578,2.432,596,3.259,598,2.646,725,2.933,726,2.933,727,2.933,728,2.933,729,5.155,730,4.618,731,2.646,732,3.369,733,4.856,734,4.856,735,3.369,736,2.933,737,3.369,738,2.933,739,3.369,740,2.432,741,3.369,742,2.646,743,3.369,744,3.369,745,3.369,746,2.646,747,3.369,748,2.646,749,3.369,750,3.369,751,3.369,752,3.369,753,2.432,754,3.369,755,3.369,756,2.933,757,4.856,758,3.369,759,3.369]],["title/modules/NgxEditorjsPluginsModule.html",[150,0.683,760,3.236]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.217,4,0.217,9,0.173,43,0.013,65,0.513,68,0.593,74,0.195,75,0.651,147,0.01,148,0.011,149,0.01,152,2.077,175,3.722,179,2.769,198,0.339,268,0.356,577,5.532,578,4.273,760,5.532,761,5.919,762,5.919]],["title/interfaces/Page.html",[53,1.5,254,0.336]],["body/interfaces/Page.html",[3,0.185,4,0.185,9,0.147,26,0.717,27,1.807,36,4.631,43,0.014,45,1.467,53,2.326,65,0.465,74,0.23,112,1.415,147,0.008,148,0.01,149,0.008,191,2.446,197,1.985,198,0.307,232,1.91,254,0.572,255,1.332,268,0.304,284,1.48,286,1.69,347,3.269,384,3.928,420,4.942,763,3.645,764,4.631,765,4.631]],["title/interfaces/PageBlock.html",[254,0.336,764,2.59]],["body/interfaces/PageBlock.html",[3,0.195,4,0.195,9,0.156,26,0.759,27,1.872,36,3.359,43,0.013,45,1.064,53,1.945,65,0.482,74,0.236,112,1.593,147,0.009,148,0.011,149,0.009,191,2.588,197,2.1,198,0.318,232,2.503,254,0.587,255,1.409,268,0.321,284,1.565,286,1.518,347,2.371,384,3.963,420,3.585,763,3.856,764,4.521,765,4.161]],["title/components/PageContainerComponent.html",[0,1.558,139,1.996]],["body/components/PageContainerComponent.html",[0,2.311,1,1.857,2,2.835,3,0.14,4,0.14,5,2.411,6,1.507,7,2.272,8,2.411,9,0.112,18,4.179,19,2.272,20,4.516,21,1.945,22,3.346,24,3.346,26,0.544,29,1.945,37,1.45,40,0.916,42,1.632,43,0.013,44,2.316,45,0.764,46,0.82,53,2.775,65,0.481,68,0.384,70,1.776,74,0.126,75,0.422,77,2.272,83,3.703,84,2.485,85,1.568,88,2.272,89,2.573,90,2.573,125,1.296,126,3.346,127,2.578,128,1.702,129,4.151,130,2.411,131,2.411,132,1.857,133,2.411,134,1.945,135,2.411,136,2.411,137,1.776,138,2.411,139,3.198,140,2.411,141,1.945,142,2.411,143,2.272,144,1.702,145,2.15,146,2.411,147,0.006,148,0.009,149,0.006,150,0.883,197,2.092,198,0.354,242,3.346,249,3.571,250,1.047,268,0.368,438,4.654,439,4.633,440,4.633,446,3.011,447,3.011,746,4.8,766,5.321,767,3.338,768,6.111,769,5.32,770,3.833,771,4.513,772,3.833,773,3.338,774,3.833,775,3.833,776,3.833,777,3.833,778,5.32,779,3.833]],["title/modules/PageStoreModule.html",[150,0.683,729,2.764]],["body/modules/PageStoreModule.html",[3,0.187,4,0.187,9,0.149,43,0.014,65,0.538,68,0.512,74,0.168,75,0.562,125,1.727,147,0.008,148,0.01,149,0.008,150,0.847,152,1.792,153,2.008,154,2.089,155,2.089,156,2.881,157,2.008,166,2.74,167,2.175,168,2.175,179,2.53,198,0.246,268,0.307,729,5.452,771,4.894,780,4.447,781,4.447,782,4.894,783,4.366,784,5.107,785,4.447,786,5.107,787,4.012]],["title/injectables/PagesQuery.html",[229,0.633,782,2.59]],["body/injectables/PagesQuery.html",[3,0.196,4,0.196,9,0.156,37,2.026,40,0.923,42,2.281,43,0.014,44,1.88,45,1.067,46,1.146,53,1.951,65,0.548,68,0.537,74,0.176,75,0.589,147,0.009,148,0.011,149,0.009,191,2.596,194,3.719,198,0.319,229,1.019,230,1.812,232,2.507,234,4.665,238,4.665,239,4.665,268,0.399,782,4.169,783,4.22,787,4.209,788,4.665,789,7.199,790,5.357,791,3.868,792,3.596]],["title/injectables/PagesService.html",[229,0.633,771,2.59]],["body/injectables/PagesService.html",[3,0.09,4,0.09,9,0.072,13,0.953,16,2.159,26,0.351,27,1.089,28,2.801,29,3.107,32,0.914,36,1.554,37,0.935,40,1.218,42,2.722,43,0.014,44,2.243,45,1.383,46,1.453,53,2.928,56,1.874,57,3.107,59,0.971,65,0.465,68,0.248,70,1.145,74,0.081,75,0.272,76,2.364,112,1.567,147,0.004,148,0.006,149,0.004,191,1.197,194,3.968,197,0.971,198,0.35,229,0.591,230,0.836,233,4.19,242,2.42,244,2.151,249,4.291,250,0.675,268,0.432,296,1.197,300,1.783,312,1.638,317,1.783,347,2.838,379,2.42,384,3.668,420,1.658,438,4.661,445,3.58,491,2.582,495,2.159,508,3.172,509,2.151,518,3.023,614,3.35,630,3.35,638,2.151,669,3.35,723,3.023,764,4.02,771,2.42,773,2.151,782,3.636,783,3.243,785,2.151,787,1.941,791,1.784,793,2.151,794,3.848,795,3.848,796,3.848,797,3.848,798,3.848,799,3.848,800,2.471,801,3.848,802,2.471,803,5.781,804,3.848,805,2.471,806,3.848,807,3.35,808,3.848,809,2.471,810,3.848,811,2.471,812,3.848,813,2.471,814,3.848,815,3.848,816,2.471,817,2.471,818,2.471,819,5.334,820,3.848,821,2.471,822,2.471,823,2.471,824,3.848,825,2.471,826,2.471,827,4.726,828,3.848,829,2.471,830,2.471,831,2.471]],["title/interfaces/PagesState.html",[254,0.336,792,2.764]],["body/interfaces/PagesState.html",[3,0.202,4,0.202,9,0.161,37,2.09,43,0.014,44,1.939,53,2.013,65,0.531,68,0.554,74,0.222,75,0.608,147,0.009,148,0.011,149,0.009,191,2.678,198,0.266,229,1.038,232,2.761,254,0.451,255,1.458,262,5.308,263,4.341,268,0.332,438,3.709,783,3.1,791,3.99,792,4.535,832,4.341,833,6.355,834,5.883]],["title/injectables/PagesStore.html",[229,0.633,783,2.311]],["body/injectables/PagesStore.html",[3,0.198,4,0.198,9,0.158,37,2.738,40,0.934,43,0.014,44,1.903,53,1.975,65,0.527,68,0.543,74,0.22,75,0.597,147,0.009,148,0.011,149,0.009,191,2.628,198,0.321,229,1.027,230,1.834,232,2.738,254,0.443,262,5.247,263,4.261,268,0.402,438,3.64,783,3.747,791,3.916,792,3.64,832,4.261,833,5.816,834,6.303,835,5.424]],["title/interfaces/Paragraph.html",[254,0.336,321,1.445]],["body/interfaces/Paragraph.html",[3,0.11,4,0.11,6,1.185,9,0.088,13,0.539,26,0.428,27,1.511,43,0.014,45,1.601,46,1.264,48,2.009,74,0.236,92,3.261,101,2.169,102,2.38,103,2.169,112,1.774,147,0.005,148,0.007,149,0.005,198,0.318,232,2.235,254,0.62,255,0.796,257,2.099,268,0.181,272,0.742,284,0.884,286,1.679,303,1.185,305,1.461,307,3.041,310,1.461,311,2.846,312,1.284,313,1.461,314,2.272,315,2.272,316,1.461,317,1.397,318,2.272,319,1.338,320,2.075,321,2.469,322,2.075,323,2.591,324,2.386,325,1.53,326,1.233,327,2.075,328,2.803,329,2.386,330,2.386,331,1.53,332,2.71,333,1.607,334,1.607,335,1.607,336,1.607,337,1.607,338,2.075,339,1.53,340,1.53]],["title/interfaces/ParagraphBlock.html",[254,0.336,322,1.909]],["body/interfaces/ParagraphBlock.html",[3,0.111,4,0.111,6,1.191,9,0.089,13,0.542,26,0.43,27,1.516,43,0.014,45,1.611,46,1.267,48,1.921,74,0.237,92,2.746,101,2.178,102,2.383,103,2.178,112,1.787,147,0.005,148,0.007,149,0.005,198,0.33,232,2.394,254,0.626,255,0.8,257,2.106,268,0.182,272,0.746,284,0.888,286,1.617,303,1.191,305,1.468,307,2.943,310,1.468,311,2.854,312,1.291,313,1.468,314,2.281,315,2.281,316,1.468,317,1.404,318,2.281,319,1.345,320,2.083,321,2.326,322,2.482,323,2.595,324,2.395,325,1.538,326,1.239,327,2.083,328,2.809,329,2.395,330,2.395,331,1.538,332,2.719,333,1.615,334,1.615,335,1.615,336,1.615,337,1.615,338,2.083,339,1.538,340,1.538]],["title/injectables/PluginCode.html",[229,0.633,362,2.59]],["body/injectables/PluginCode.html",[3,0.199,4,0.199,9,0.159,26,0.773,32,1.59,40,0.937,43,0.014,56,1.595,65,0.551,68,0.545,74,0.179,75,0.599,147,0.009,148,0.011,149,0.009,197,2.139,198,0.349,229,1.028,230,1.84,250,1.486,267,2.032,268,0.403,272,1.861,279,2.64,281,1.435,362,4.209,403,2.225,736,4.737,836,4.737,837,5.441,838,5.827]],["title/interfaces/PluginConfig.html",[254,0.336,283,1.828]],["body/interfaces/PluginConfig.html",[3,0.15,4,0.15,9,0.12,13,0.731,15,1.674,32,1.323,40,0.958,43,0.014,46,1.353,59,2.188,65,0.405,68,0.41,74,0.233,75,0.612,84,1.335,147,0.007,148,0.009,149,0.007,150,1.049,198,0.268,250,1.118,254,0.554,255,1.08,267,2.155,268,0.335,269,2.747,270,2.574,271,2.426,272,1.98,273,2.426,274,3.064,276,2.807,277,2.426,278,2.296,279,2.303,280,3.977,281,1.08,282,2.825,283,2.471,284,2.146,285,3.5,286,1.557,287,1.897,288,2.077,289,2.077,290,2.574,291,2.296,292,3.299,293,3.299,294,1.743,295,2.825,296,2.696,297,2.077,298,2.426,299,2.296,300,1.897,301,1.983,302,2.426,308,2.181,839,4.093]],["title/interfaces/PluginConfig-1.html",[254,0.282,283,1.534,303,1.358]],["body/interfaces/PluginConfig-1.html",[3,0.149,4,0.149,9,0.119,13,0.728,15,1.666,32,1.318,40,0.955,43,0.014,46,1.349,59,2.181,65,0.404,68,0.408,74,0.233,75,0.61,84,1.329,147,0.007,148,0.009,149,0.007,150,1.046,198,0.326,250,1.113,254,0.553,255,1.075,267,2.152,268,0.334,270,2.562,271,2.415,272,1.979,273,2.415,274,3.056,276,2.8,277,2.415,278,2.285,279,2.297,280,3.967,281,1.075,282,2.816,283,2.463,284,2.143,285,3.489,286,1.554,287,1.888,288,2.068,289,2.068,290,2.562,291,2.285,292,3.288,293,3.288,294,1.735,295,2.816,296,2.688,297,2.068,298,2.415,299,2.285,300,1.888,301,1.974,302,2.415,304,2.734,308,2.171,840,4.074]],["title/injectables/PluginHeader.html",[229,0.633,587,2.311]],["body/injectables/PluginHeader.html",[3,0.186,4,0.186,9,0.148,13,0.907,26,0.721,32,1.523,40,0.874,43,0.014,56,2.059,65,0.537,68,0.509,74,0.167,75,0.773,76,2.873,147,0.008,148,0.01,149,0.008,198,0.308,229,0.985,230,1.717,250,1.92,267,1.946,268,0.386,272,1.997,276,2.846,279,2.559,281,1.34,323,2.425,403,2.077,586,2.849,587,3.596,841,4.421,842,5.078,843,3.989]],["title/injectables/PluginHeader-1.html",[229,0.531,303,1.358,587,1.938]],["body/injectables/PluginHeader-1.html",[3,0.189,4,0.189,9,0.151,13,0.923,26,0.734,32,1.54,40,0.89,43,0.014,56,2.076,65,0.541,68,0.518,74,0.17,75,0.569,76,2.896,147,0.008,148,0.011,149,0.008,198,0.312,229,0.996,230,1.748,250,1.412,267,1.968,268,0.39,272,1.921,276,2.877,279,2.579,281,1.363,323,2.452,403,2.113,586,2.899,587,3.636,843,4.06,844,4.5,845,6.482,846,5.168]],["title/modules/PluginHeaderModule.html",[150,0.683,558,2.764]],["body/modules/PluginHeaderModule.html",[3,0.193,4,0.193,9,0.154,13,0.943,43,0.013,65,0.478,68,0.529,74,0.173,75,0.581,85,2.686,112,1.455,125,1.785,147,0.009,148,0.011,149,0.009,150,1.186,152,1.851,153,2.074,154,2.158,155,2.158,156,2.924,157,2.074,166,2.796,167,2.247,168,2.247,179,2.582,268,0.317,323,2.484,531,3.892,558,5.266,587,4.402,673,4.741,847,4.594,848,4.594,849,5.277,850,5.277]],["title/injectables/PluginImage.html",[229,0.633,451,2.764]],["body/injectables/PluginImage.html",[3,0.199,4,0.199,9,0.159,26,0.773,32,1.59,40,0.937,43,0.014,56,1.595,65,0.551,68,0.545,74,0.179,75,0.599,147,0.009,148,0.011,149,0.009,197,2.139,198,0.349,229,1.028,230,1.84,250,1.486,267,2.032,268,0.403,272,1.861,279,2.64,281,1.435,328,2.971,403,2.225,451,4.492,738,4.737,851,4.737,852,5.441]],["title/injectables/PluginLink.html",[229,0.633,457,2.764]],["body/injectables/PluginLink.html",[3,0.199,4,0.199,9,0.159,26,0.773,32,1.59,40,0.937,43,0.014,56,1.595,65,0.551,68,0.545,74,0.179,75,0.599,147,0.009,148,0.011,149,0.009,197,2.139,198,0.349,229,1.028,230,1.84,250,1.486,267,2.032,268,0.403,272,1.861,279,2.64,281,1.435,403,2.225,457,4.492,853,4.737,854,5.441,855,6.692,856,5.441]],["title/injectables/PluginList.html",[229,0.633,589,2.311]],["body/injectables/PluginList.html",[3,0.186,4,0.186,9,0.148,13,0.907,26,0.721,32,1.523,40,0.874,43,0.014,56,2.059,65,0.537,68,0.509,74,0.167,75,0.773,76,2.873,102,2.168,147,0.008,148,0.01,149,0.008,198,0.308,229,0.985,230,1.717,250,1.92,267,1.946,268,0.386,272,1.997,276,2.846,279,2.559,281,1.34,403,2.077,586,2.849,589,3.596,740,3.666,857,4.421,858,5.078]],["title/injectables/PluginList-1.html",[229,0.531,303,1.358,589,1.938]],["body/injectables/PluginList-1.html",[3,0.185,4,0.185,9,0.147,13,0.902,26,0.717,32,1.518,40,0.869,43,0.014,56,2.054,65,0.536,68,0.506,74,0.166,75,0.771,76,2.865,102,2.16,147,0.008,148,0.01,149,0.008,198,0.354,229,0.982,230,1.707,250,1.914,267,1.939,268,0.384,272,1.995,276,2.835,279,2.552,281,1.332,403,2.065,586,2.832,589,3.583,740,3.645,859,4.396,860,5.049]],["title/modules/PluginListModule.html",[150,0.683,560,2.764]],["body/modules/PluginListModule.html",[3,0.193,4,0.193,9,0.154,13,0.943,43,0.013,65,0.478,68,0.529,74,0.173,75,0.581,85,2.686,102,2.221,112,1.455,125,1.785,147,0.009,148,0.011,149,0.009,150,1.186,152,1.851,153,2.074,154,2.158,155,2.158,156,2.924,157,2.074,166,2.796,167,2.247,168,2.247,179,2.582,268,0.317,531,3.892,560,5.266,589,4.402,673,4.741,861,4.594,862,4.594,863,5.277,864,5.277]],["title/injectables/PluginMarker.html",[229,0.633,463,2.59]],["body/injectables/PluginMarker.html",[3,0.19,4,0.19,9,0.152,26,0.738,32,1.546,40,1.12,43,0.014,56,1.907,65,0.542,68,0.521,74,0.171,75,0.572,147,0.008,148,0.011,149,0.008,197,2.044,198,0.358,229,1,230,1.758,250,1.778,267,1.975,268,0.427,272,1.831,274,3.606,279,2.586,281,1.372,286,1.193,403,2.126,463,4.092,742,4.084,865,4.526,866,5.198,867,5.198,868,5.665,869,5.198]],["title/injectables/PluginParagraph.html",[229,0.633,592,2.311]],["body/injectables/PluginParagraph.html",[3,0.186,4,0.186,9,0.148,13,0.907,26,0.721,32,1.523,40,0.874,43,0.014,56,2.059,65,0.537,68,0.509,74,0.167,75,0.773,76,2.873,147,0.008,148,0.01,149,0.008,198,0.308,229,0.985,230,1.717,250,1.92,267,1.946,268,0.386,272,1.997,276,2.846,279,2.559,281,1.34,321,2.249,403,2.077,586,2.849,592,3.596,870,4.421,871,5.078,872,3.989]],["title/injectables/PluginParagraph-1.html",[229,0.531,303,1.358,592,1.938]],["body/injectables/PluginParagraph-1.html",[3,0.185,4,0.185,9,0.147,13,0.902,26,0.717,32,1.518,40,0.869,43,0.014,56,2.054,65,0.536,68,0.506,74,0.166,75,0.771,76,2.865,147,0.008,148,0.01,149,0.008,198,0.354,229,0.982,230,1.707,250,1.914,267,1.939,268,0.384,272,1.995,276,2.835,279,2.552,281,1.332,321,2.241,403,2.065,586,2.832,592,3.583,872,3.966,873,4.396,874,5.049]],["title/modules/PluginParagraphModule.html",[150,0.683,559,2.764]],["body/modules/PluginParagraphModule.html",[3,0.193,4,0.193,9,0.154,13,0.943,43,0.013,65,0.478,68,0.529,74,0.173,75,0.581,85,2.686,112,1.455,125,1.785,147,0.009,148,0.011,149,0.009,150,1.186,152,1.851,153,2.074,154,2.158,155,2.158,156,2.924,157,2.074,166,2.796,167,2.247,168,2.247,179,2.582,268,0.317,321,2.304,531,3.892,559,5.266,592,4.402,673,4.741,875,4.594,876,4.594,877,5.277,878,5.277]],["title/injectables/PluginService.html",[229,0.633,561,2.59]],["body/injectables/PluginService.html",[3,0.091,4,0.091,9,0.073,13,0.848,15,2.19,16,2.17,17,1.67,26,0.353,27,1.095,28,2.813,32,0.919,37,1.463,40,1.104,42,2.47,43,0.014,44,2.486,45,1.223,46,1.456,48,1.626,49,2.062,56,1.995,57,2.409,65,0.282,68,0.249,74,0.082,75,0.589,76,2.983,85,1.582,147,0.004,148,0.006,149,0.004,150,0.642,172,3.369,194,3.445,198,0.186,229,0.595,230,0.842,242,2.433,250,1.463,267,1.626,268,0.399,272,1.744,274,1.206,283,3.146,284,1.391,286,1.652,287,3.335,288,1.964,289,2.409,291,3.596,294,1.648,295,3.783,297,2.944,301,2.975,312,1.648,348,2.17,386,2.293,445,3.594,495,3.004,508,4.302,561,2.433,586,1.396,612,3.039,639,3.369,668,2.793,676,2.167,680,2.167,722,2.167,723,1.955,879,2.167,880,3.869,881,5.355,882,3.869,883,4.747,884,3.869,885,5.355,886,2.488,887,3.869,888,5.355,889,5.355,890,3.869,891,3.869,892,3.869,893,3.869,894,3.869,895,2.488,896,3.869,897,2.488,898,3.869,899,2.488,900,5.355,901,3.869,902,2.488,903,3.869,904,2.488,905,2.488,906,3.869,907,2.488,908,2.488,909,2.488,910,2.488,911,2.488,912,5.355,913,2.488,914,2.488,915,2.488,916,2.488,917,2.488,918,5.355,919,3.869,920,3.869,921,2.488]],["title/injectables/PluginSimpleImage.html",[229,0.633,922,2.764]],["body/injectables/PluginSimpleImage.html",[3,0.196,4,0.196,9,0.156,26,0.761,32,1.575,40,0.923,43,0.014,56,1.57,65,0.548,68,0.537,74,0.176,75,0.589,147,0.009,148,0.011,149,0.009,197,2.106,198,0.346,229,1.019,230,1.812,250,1.464,267,2.013,268,0.399,272,1.851,279,2.622,281,1.414,328,2.378,403,2.191,753,4.786,922,4.449,923,5.208,924,4.665,925,5.357,926,6.629,927,5.357]],["title/interfaces/ReadyMap.html",[254,0.336,353,2.441]],["body/interfaces/ReadyMap.html",[3,0.171,4,0.171,9,0.137,13,0.837,40,0.807,43,0.014,65,0.492,70,2.171,74,0.235,112,1.349,147,0.008,148,0.01,149,0.008,198,0.373,254,0.584,255,1.236,257,2.393,268,0.366,281,1.236,284,2.175,286,1.703,287,3.439,308,2.496,326,1.916,341,2.776,342,3.144,343,4.982,344,5.328,345,3.144,347,2.079,348,2.628,349,2.776,350,4.086,351,4.086,352,3.829,353,3.608,354,3.144,355,2.776,356,3.144,357,2.776,928,4.684]],["title/components/SidebarComponent.html",[0,1.558,141,2.09]],["body/components/SidebarComponent.html",[0,2.213,1,1.715,2,2.68,3,0.129,4,0.129,5,2.226,6,1.391,7,2.097,8,2.226,9,0.103,10,3.241,19,2.097,20,4.434,21,1.796,22,3.163,24,3.163,26,0.503,27,1.423,28,3.468,29,3.234,30,5.495,31,5.095,32,1.195,33,5.006,34,5.549,37,1.339,38,2.78,39,3.575,40,1.159,42,1.507,43,0.014,44,2.236,45,1.002,46,0.757,47,3.631,48,1.075,49,2.68,53,1.289,56,1.474,57,2.553,59,1.977,60,5.095,61,5.095,62,2.78,63,4.38,65,0.49,67,2.78,68,0.355,69,2.375,70,1.64,71,2.78,72,3.081,73,2.78,74,0.116,75,0.389,77,2.097,78,3.081,79,3.081,80,3.081,81,3.081,82,3.081,83,2.822,84,2.44,85,1.447,125,1.197,126,3.163,127,2.437,128,1.571,129,4.008,130,2.226,131,2.226,132,1.715,133,2.226,134,1.796,135,2.226,136,2.226,137,1.64,138,2.226,139,1.715,140,2.226,141,3.234,142,3.68,143,2.097,144,1.571,145,1.985,146,2.226,147,0.006,148,0.008,149,0.006,198,0.242,403,2.057,929,6.091,930,3.081,931,5.852,932,5.852,933,5.03,934,5.03,935,3.539,936,3.539,937,3.539]],["title/modules/SimpleImageModule.html",[150,0.683,730,2.764]],["body/modules/SimpleImageModule.html",[3,0.2,4,0.2,9,0.16,43,0.013,65,0.489,68,0.549,74,0.18,75,0.602,125,1.851,147,0.009,148,0.011,149,0.009,150,0.908,152,1.921,153,2.152,154,2.239,155,2.239,156,2.972,157,2.152,166,2.861,167,2.331,168,2.331,179,2.641,198,0.263,268,0.329,453,4.767,730,5.314,753,3.952,922,5.314,923,4.301,938,4.767,939,4.767,940,5.475,941,5.475]],["title/interfaces/Tag.html",[254,0.336,765,2.59]],["body/interfaces/Tag.html",[3,0.197,4,0.197,9,0.157,26,0.763,27,1.879,36,3.38,43,0.014,45,1.071,53,1.957,65,0.484,74,0.237,112,1.472,147,0.009,148,0.011,149,0.009,191,2.604,197,2.113,198,0.319,232,2.033,254,0.588,255,1.418,268,0.323,284,2.207,286,1.728,347,2.386,384,3.749,420,3.607,763,3.88,764,4.177,765,4.533]],["title/interfaces/ToolSettingsMap.html",[254,0.336,289,2.09]],["body/interfaces/ToolSettingsMap.html",[3,0.149,4,0.149,9,0.119,13,0.728,15,1.666,32,1.318,40,0.955,43,0.014,46,1.349,59,2.181,65,0.404,68,0.408,74,0.233,75,0.448,84,1.329,147,0.007,148,0.009,149,0.007,150,0.92,198,0.267,250,1.113,254,0.553,255,1.075,267,1.915,268,0.334,269,2.734,270,2.562,271,2.415,272,1.968,273,2.415,274,3.056,276,3.146,277,2.415,278,2.285,279,2.467,280,4.259,281,1.075,282,2.068,283,1.808,284,2.143,285,2.562,286,1.554,287,2.571,288,2.816,289,2.816,290,3.489,291,3.112,292,3.288,293,3.288,294,1.735,295,2.816,296,2.688,297,2.068,298,2.415,299,2.285,300,1.888,301,1.974,302,2.415,308,2.171,942,4.074]],["title/interfaces/ToolSettingsMap-1.html",[254,0.282,289,1.754,303,1.358]],["body/interfaces/ToolSettingsMap-1.html",[3,0.148,4,0.148,9,0.118,13,0.725,15,1.658,32,1.314,40,0.952,43,0.014,46,1.346,59,2.174,65,0.403,68,0.406,74,0.233,75,0.446,84,1.323,147,0.007,148,0.009,149,0.007,150,0.917,198,0.325,250,1.108,254,0.552,255,1.07,267,1.911,268,0.333,270,2.55,271,2.403,272,1.966,273,2.403,274,3.049,276,3.141,277,2.403,278,2.275,279,2.462,280,4.251,281,1.07,282,2.058,283,1.8,284,2.14,285,2.55,286,1.551,287,2.563,288,2.807,289,2.807,290,3.478,291,3.102,292,3.278,293,3.278,294,1.727,295,2.807,296,2.679,297,2.058,298,2.403,299,2.275,300,1.879,301,1.965,302,2.403,304,2.722,308,2.161,943,4.055]],["title/coverage.html",[944,4.867]],["body/coverage.html",[0,2.223,1,1.087,9,0.065,10,3.193,11,1.953,12,1.953,21,1.138,39,1.258,43,0.014,45,0.447,53,0.817,59,0.882,89,5.367,102,0.759,105,5.71,112,0.497,128,0.996,132,1.087,134,1.138,137,1.039,139,1.087,141,1.138,144,0.996,147,0.004,148,0.006,149,0.004,198,0.375,201,2.801,206,1.762,223,1.411,224,1.329,229,1.16,231,1.953,236,1.505,240,1.953,254,0.639,256,1.953,258,1.953,267,1.083,268,0.497,269,3.704,275,2.979,283,1.583,289,1.81,297,1.81,301,1.728,304,3.704,305,3.192,320,1.039,321,0.787,322,1.039,323,0.848,327,1.039,328,0.996,338,1.039,341,1.329,342,3.394,349,1.329,353,1.329,357,1.329,362,1.411,365,1.619,366,3.204,396,1.329,397,1.411,400,1.953,401,1.762,402,1.953,413,1.138,451,1.505,457,1.505,463,1.411,472,1.953,473,1.953,486,1.953,487,1.953,516,1.953,517,1.953,561,1.411,562,3.204,563,3.204,575,1.762,587,2,589,2,592,2,594,1.619,596,2.393,608,1.953,731,1.762,746,1.762,748,1.762,753,1.619,763,3.204,764,1.411,765,1.411,766,1.953,767,1.953,771,1.411,782,1.411,783,1.258,788,1.953,792,1.505,793,1.953,832,2.801,836,1.953,841,1.953,844,1.953,851,1.953,853,1.953,857,1.953,859,1.953,865,1.953,870,1.953,873,1.953,879,1.953,922,1.505,923,1.762,924,1.953,929,1.953,930,1.953,944,1.953,945,1.619,946,2.243,947,2.243,948,1.953,949,6.891,950,1.953,951,6.751,952,1.953,953,1.953,954,7.118,955,3.566,956,3.566,957,2.243,958,3.566,959,7.012,960,4.438,961,1.953,962,1.953,963,1.953,964,1.953,965,2.243,966,2.243,967,2.243,968,6.891,969,5.519,970,3.566,971,2.243,972,2.243,973,2.243,974,2.243,975,2.243,976,2.243]],["title/dependencies.html",[153,1.944,977,3.009]],["body/dependencies.html",[43,0.014,68,0.507,69,3.398,70,2.346,84,1.651,147,0.008,148,0.01,149,0.008,153,1.99,171,4.409,181,4.409,182,4.409,184,5.027,185,4.62,189,3.977,191,3.1,192,4.409,193,4.409,194,2.84,196,4.409,200,3.977,281,1.336,428,3.977,578,3.655,595,3.977,740,3.655,843,3.977,872,3.977,978,5.063,979,7.978,980,5.063,981,6.399,982,5.063,983,5.063,984,5.063,985,5.063,986,5.063,987,5.063,988,5.063,989,5.063,990,5.063,991,5.063,992,5.063,993,5.063,994,5.063,995,5.063,996,5.063,997,5.063,998,5.063]],["title/miscellaneous/functions.html",[999,2.173,1000,4.306]],["body/miscellaneous/functions.html",[26,0.838,43,0.013,56,2.06,147,0.01,148,0.011,149,0.01,198,0.284,268,0.423,283,3.12,562,4.259,563,5.42,594,5.42,596,5.407,963,5.136,999,3.71,1000,5.136,1001,6.12,1002,5.899]],["title/index.html",[26,0.491,1003,3.455,1004,3.455]],["body/index.html",[0,2.104,2,2.963,15,2.274,16,3.12,21,2.823,43,0.011,50,4.02,51,4.842,83,3.805,84,1.814,128,2.469,147,0.009,148,0.011,149,0.009,197,2.186,198,0.326,391,3.296,485,4.015,488,5.329,495,3.12,532,4.015,564,5.906,565,4.369,945,4.897,1005,7.319,1006,4.842,1007,4.842,1008,5.561,1009,5.561,1010,5.329,1011,5.561,1012,5.561,1013,4.369,1014,4.015,1015,4.842,1016,5.561,1017,5.561,1018,5.561,1019,5.561,1020,5.561,1021,4.842,1022,5.561]],["title/modules.html",[152,1.961]],["body/modules.html",[43,0.01,147,0.008,148,0.01,149,0.008,151,3.294,152,1.722,162,3.294,163,3.294,164,2.753,165,3.294,185,5.987,312,2.671,359,3.294,448,3.543,454,3.294,460,3.294,558,4.21,559,4.21,560,4.21,729,3.294,730,3.294,760,3.855,1023,6.515,1024,8.293,1025,8.335,1026,6.273]],["title/overview.html",[1027,4.867]],["body/overview.html",[1,3.275,2,1.543,39,2.925,43,0.014,125,0.979,128,1.285,132,3.275,134,2.646,137,3.132,139,3.275,141,2.646,144,3.001,147,0.005,148,0.007,149,0.005,150,0.48,151,5.22,152,1.016,153,1.138,154,1.184,155,1.184,156,1.184,157,1.138,158,2.521,159,2.521,160,2.521,161,2.521,162,4.773,163,3.499,164,4.486,165,5.348,166,1.85,167,1.233,168,1.233,221,2.521,222,2.521,223,3.279,224,3.09,230,0.979,255,0.764,303,1.138,325,1.469,359,4.166,360,2.521,361,2.521,362,3.279,413,2.646,448,4.182,449,2.521,450,2.521,451,3.499,454,4.166,455,2.521,456,2.521,457,3.499,460,4.166,461,2.521,462,2.521,463,3.279,553,2.521,554,2.521,555,2.521,556,2.521,557,2.521,558,4.936,559,5.056,560,4.537,561,3.279,587,3.25,589,3.25,592,3.25,725,2.521,726,2.521,727,2.521,728,2.521,729,5.056,730,4.166,771,3.279,780,2.521,781,2.521,782,3.279,783,2.925,847,2.521,848,2.521,861,2.521,862,2.521,875,2.521,876,2.521,922,3.499,938,2.521,939,2.521,1027,2.521,1028,2.895,1029,2.895,1030,2.895]],["title/miscellaneous/typealiases.html",[999,2.173,1031,4.945]],["body/miscellaneous/typealiases.html",[6,2.243,26,0.811,43,0.013,45,1.475,102,1.93,112,1.527,147,0.009,148,0.011,149,0.009,268,0.343,286,1.581,305,2.765,312,2.43,313,2.765,314,3.497,315,3.497,316,2.765,317,2.644,318,3.497,320,2.644,322,2.644,327,2.644,338,2.644,339,2.896,340,3.497,999,3.589,1032,5.706,1033,6.89]],["title/miscellaneous/variables.html",[999,2.173,1034,4.306]],["body/miscellaneous/variables.html",[0,2.246,10,2.988,14,2.439,15,2.428,21,1.845,26,0.516,40,0.883,43,0.014,45,1.355,48,2.343,49,4.112,59,2.673,83,2.876,84,2.415,132,2.483,139,1.761,147,0.006,148,0.008,149,0.006,150,0.85,198,0.375,201,5.066,264,2.154,268,0.409,269,2.439,292,3.822,293,3.822,294,2.183,295,3.273,297,3.273,298,3.038,299,2.876,300,2.375,301,3.124,302,3.038,304,2.439,366,2.624,380,2.624,396,2.154,397,3.224,398,2.855,562,2.624,563,3.701,575,4.027,594,2.624,668,3.701,731,2.855,748,4.027,948,3.165,950,4.463,952,3.165,953,4.463,961,3.165,962,3.165,964,4.463,999,2.286,1001,4.463,1006,4.463,1034,3.165,1035,3.634,1036,3.634,1037,3.634,1038,3.634,1039,6.449,1040,3.634,1041,5.126,1042,6.8,1043,5.126,1044,5.126,1045,3.634,1046,5.126,1047,3.634,1048,5.126,1049,3.634,1050,3.634]],["title/additional-documentation/ngx-editorjs-readme.html",[53,0.952,84,0.852,198,0.126,310,1.266,1013,2.053]],["body/additional-documentation/ngx-editorjs-readme.html",[0,2.121,1,2.197,13,0.414,14,1.555,15,1.496,16,2.544,18,1.82,32,0.551,43,0.014,45,0.462,46,0.496,48,1.564,50,3.052,59,0.911,65,0.535,66,3.043,68,0.516,74,0.196,75,0.617,83,2.053,84,0.756,85,2.437,102,0.784,112,0.513,127,1.773,128,1.624,137,1.074,144,1.029,145,1.3,147,0.004,148,0.006,149,0.004,150,0.989,151,1.555,152,1.284,154,0.948,155,0.948,156,1.496,157,0.911,164,2.889,175,2.301,179,2.343,183,3.186,184,1.82,185,1.673,197,2.025,198,0.365,215,1.82,229,0.697,250,1.239,264,2.169,267,1.111,271,1.373,272,1.38,274,1.773,275,2.456,279,1.332,281,0.965,282,2.614,283,1.624,284,1.329,286,0.532,288,2.846,294,0.987,299,2.053,300,2.762,301,2.197,307,2.013,316,1.123,319,1.624,321,1.284,323,0.876,347,2.286,348,1.3,352,1.457,362,1.457,367,2.889,368,3.273,370,3.052,371,2.642,377,1.673,384,1.773,386,2.169,390,2.874,391,3.052,403,0.948,413,1.176,441,3.043,443,2.018,445,3.457,463,3.748,465,2.018,483,1.673,484,3.186,485,3.273,488,2.874,491,1.555,495,2.544,502,2.018,518,1.82,521,2.018,531,3.323,532,1.673,537,1.673,565,2.874,566,2.018,567,3.273,568,2.018,572,2.018,573,1.82,595,1.82,596,2.456,598,1.82,612,1.82,632,2.018,634,1.82,637,2.018,640,3.562,656,4.882,657,2.018,658,4.484,659,2.018,668,1.673,691,3.186,695,2.018,696,2.018,697,2.018,698,2.018,742,1.82,756,2.018,765,1.457,838,2.018,868,3.186,945,2.642,1007,2.018,1010,2.874,1014,1.673,1015,2.018,1023,3.562,1051,4.534,1052,2.317,1053,2.317,1054,2.317,1055,2.317,1056,2.317,1057,3.659,1058,2.317,1059,3.659,1060,2.317,1061,3.186,1062,2.018,1063,2.317,1064,2.317,1065,2.317,1066,5.15,1067,2.317,1068,2.317,1069,2.317,1070,3.659,1071,2.317,1072,2.317,1073,3.659,1074,2.317,1075,3.659,1076,2.317,1077,3.186,1078,2.317,1079,4.534,1080,2.317,1081,2.317,1082,2.317,1083,2.317,1084,3.659,1085,2.317,1086,2.317,1087,2.018,1088,2.317,1089,2.317,1090,2.317,1091,2.317,1092,3.659,1093,2.317,1094,2.018,1095,2.317,1096,2.317,1097,2.317,1098,2.317,1099,2.317,1100,2.317,1101,2.317,1102,2.317,1103,3.659,1104,2.018,1105,2.317,1106,2.317,1107,2.317,1108,2.317,1109,2.317,1110,2.317,1111,2.317,1112,2.317,1113,2.317,1114,2.317,1115,2.317,1116,2.317,1117,2.317,1118,2.317,1119,2.317,1120,2.317,1121,2.317]],["title/additional-documentation/ngx-editorjs-changelog.html",[53,0.952,84,0.852,198,0.126,310,1.266,1014,1.887]],["body/additional-documentation/ngx-editorjs-changelog.html",[0,2.167,7,2.532,9,0.125,17,3.845,32,1.015,43,0.009,46,0.914,48,2.097,50,3.396,56,1.252,75,0.63,85,2.343,102,1.445,127,2.776,128,2.543,137,1.98,144,1.897,147,0.007,148,0.009,149,0.007,164,2.397,198,0.311,229,0.657,254,0.349,267,1.297,272,1.591,274,2.776,286,0.98,288,2.168,294,1.819,295,3.505,300,1.98,313,2.07,317,2.995,319,1.897,321,1.499,323,1.616,348,3.214,367,3.626,370,2.532,384,2.07,391,2.532,413,2.908,441,3.845,445,2.868,483,3.085,485,4.136,495,2.397,519,3.72,537,3.085,567,4.136,634,3.356,640,3.356,807,3.72,945,4.136,977,4.989,1010,5.426,1013,3.356,1014,4.667,1021,3.72,1023,3.356,1061,3.72,1062,3.72,1077,4.989,1087,6.271,1094,3.72,1104,3.72,1122,4.273,1123,4.273,1124,4.273,1125,4.273,1126,4.273,1127,4.273,1128,4.273,1129,4.273,1130,4.273,1131,6.464,1132,6.464,1133,6.464,1134,4.273,1135,4.273,1136,4.273,1137,4.273,1138,4.273,1139,4.273,1140,4.273,1141,4.273,1142,5.729,1143,4.273,1144,4.273,1145,4.273,1146,4.273,1147,4.273,1148,4.273,1149,4.273,1150,4.273,1151,4.273,1152,4.273,1153,4.273,1154,4.273]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["0",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":1132,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["1",{"_index":303,"title":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginList-1.html":{},"injectables/PluginParagraph-1.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":1152,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["1.0.4",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1136,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["1.1.1",{"_index":1130,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["1.3.4",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1133,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["100",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":447,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["13/14",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["18",{"_index":1028,"title":{},"body":{"overview.html":{}}}],["19",{"_index":1029,"title":{},"body":{"overview.html":{}}}],["1em",{"_index":514,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.0.8",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1131,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["250px",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["26",{"_index":1030,"title":{},"body":{"overview.html":{}}}],["28",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":510,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3.0.2",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["36",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["4/11",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["6",{"_index":325,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["6.3.3",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1011,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["9/9",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["a:active",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["a:hover",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["access",{"_index":501,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["accessors",{"_index":242,"title":{},"body":{"injectables/ApplicationService.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["action",{"_index":1052,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["actual_component",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["add",{"_index":445,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["add(name",{"_index":894,"title":{},"body":{"injectables/PluginService.html":{}}}],["add(page",{"_index":799,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":794,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":801,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":317,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["adding",{"_index":299,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["additional",{"_index":310,"title":{"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["adds",{"_index":631,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["adheres",{"_index":1127,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["aftercontentinit",{"_index":404,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["afterviewinit",{"_index":523,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["again",{"_index":1093,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["akitangdevtools",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangdevtools.forroot",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule.forroot",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":1032,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["allow",{"_index":273,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["allows",{"_index":390,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["angular",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["angular's",{"_index":1082,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["angular/animations",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":578,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["angular/flex",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":428,"title":{},"body":{"components/EditorPageComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["aot",{"_index":1077,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["api",{"_index":657,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["api](https://editorjs.io/api",{"_index":704,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/SidebarComponent.html":{}}}],["app.component",{"_index":1067,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["app.component.css",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["appear",{"_index":444,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["application",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["application.model",{"_index":237,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{}}}],["application.query",{"_index":226,"title":{},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationService.html":{}}}],["application.service",{"_index":227,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["application.store",{"_index":228,"title":{},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{}}}],["applicationdatamodule",{"_index":162,"title":{"modules/ApplicationDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationquery",{"_index":223,"title":{"injectables/ApplicationQuery.html":{}},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"coverage.html":{},"overview.html":{}}}],["applicationservice",{"_index":39,"title":{"injectables/ApplicationService.html":{}},"body":{"components/AppComponent.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationService.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicationstate",{"_index":236,"title":{"interfaces/ApplicationState.html":{}},"body":{"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"coverage.html":{}}}],["applicationstore",{"_index":224,"title":{"injectables/ApplicationStore.html":{}},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":151,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["approutes",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":389,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["array",{"_index":612,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["arrayadd",{"_index":817,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":829,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":818,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":830,"title":{},"body":{"injectables/PagesService.html":{}}}],["attach",{"_index":519,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":1148,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["attributes",{"_index":489,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["auto",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["autofocus",{"_index":368,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":375,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["autosave",{"_index":628,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["available",{"_index":312,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["await",{"_index":714,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":646,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["background",{"_index":334,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["bar",{"_index":474,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":476,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":475,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":473,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":477,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:15",{"_index":479,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":306,"title":{},"body":{"interfaces/Block.html":{}}}],["based",{"_index":1125,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["baseplugin",{"_index":267,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":1058,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["basic",{"_index":339,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":635,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject",{"_index":344,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["behaviorsubject(0",{"_index":689,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(false",{"_index":686,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["below",{"_index":443,"title":{},"body":{"components/EditorPageComponent.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["beta.24",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1111,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["block",{"_index":112,"title":{"interfaces/Block.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["block.id",{"_index":831,"title":{},"body":{"injectables/PagesService.html":{}}}],["blocks",{"_index":347,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["blocksmap",{"_index":341,"title":{"interfaces/BlocksMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["blocktypes",{"_index":340,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":257,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["bootstrap",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["border",{"_index":331,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["bottom",{"_index":388,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["browse",{"_index":1025,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["browser/animations",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["builds",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["bundled",{"_index":1083,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["calling",{"_index":663,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["calls",{"_index":645,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":330,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["cd",{"_index":1117,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["center",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":356,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["changed",{"_index":1142,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["changelog",{"_index":1014,"title":{"additional-documentation/ngx-editorjs-changelog.html":{}},"body":{"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["changelog.md",{"_index":1135,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["changemap",{"_index":357,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["changes",{"_index":537,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["changes.blocks",{"_index":546,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":549,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":547,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["class",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/CodeModule.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["clean",{"_index":633,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":442,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["cluster_applicationdatamodule",{"_index":221,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_applicationdatamodule_providers",{"_index":222,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_codemodule",{"_index":360,"title":{},"body":{"modules/CodeModule.html":{},"overview.html":{}}}],["cluster_codemodule_providers",{"_index":361,"title":{},"body":{"modules/CodeModule.html":{},"overview.html":{}}}],["cluster_imagemodule",{"_index":449,"title":{},"body":{"modules/ImageModule.html":{},"overview.html":{}}}],["cluster_imagemodule_providers",{"_index":450,"title":{},"body":{"modules/ImageModule.html":{},"overview.html":{}}}],["cluster_linkmodule",{"_index":455,"title":{},"body":{"modules/LinkModule.html":{},"overview.html":{}}}],["cluster_linkmodule_providers",{"_index":456,"title":{},"body":{"modules/LinkModule.html":{},"overview.html":{}}}],["cluster_markermodule",{"_index":461,"title":{},"body":{"modules/MarkerModule.html":{},"overview.html":{}}}],["cluster_markermodule_providers",{"_index":462,"title":{},"body":{"modules/MarkerModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":725,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":726,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":728,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":727,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":553,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":554,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":556,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_imports",{"_index":555,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":557,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":780,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":781,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":847,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":848,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":861,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":862,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":875,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":876,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_simpleimagemodule",{"_index":938,"title":{},"body":{"modules/SimpleImageModule.html":{},"overview.html":{}}}],["cluster_simpleimagemodule_providers",{"_index":939,"title":{},"body":{"modules/SimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":869,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":838,"title":{},"body":{"injectables/PluginCode.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["code.plugin",{"_index":364,"title":{},"body":{"modules/CodeModule.html":{}}}],["codemodule",{"_index":359,"title":{"modules/CodeModule.html":{}},"body":{"modules/CodeModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["collection",{"_index":564,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["color",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["combinelatest",{"_index":429,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["combinelatest([this.form",{"_index":434,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["commonmodule",{"_index":577,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{}}}],["completes",{"_index":647,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["compodoc",{"_index":1134,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["component/app.component",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["component/app.component.ts",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["component/app.component.ts:20",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:22",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:24",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:28",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:34",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["component/editorjs.component",{"_index":581,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["component/editorjs.component.ts",{"_index":487,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["component/editorjs.component.ts:23",{"_index":500,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:29",{"_index":498,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:35",{"_index":497,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:42",{"_index":503,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/sidebar.component",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":930,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["component/sidebar.component.ts:13",{"_index":937,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:15",{"_index":934,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:19",{"_index":936,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:25",{"_index":935,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component_template",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{}}}],["components/app",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["components/nav",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["config",{"_index":386,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["config.editorjs.autofocus",{"_index":601,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.data",{"_index":607,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.holder",{"_index":603,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.initialblock",{"_index":605,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configurable",{"_index":1121,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["configuration",{"_index":282,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["configurations",{"_index":903,"title":{},"body":{"injectables/PluginService.html":{}}}],["configured",{"_index":1062,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":1074,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["const",{"_index":296,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{}}}],["constructor(app",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(config",{"_index":622,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":527,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(fb",{"_index":411,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["constructor(initialplugins",{"_index":886,"title":{},"body":{"injectables/PluginService.html":{}}}],["constructor(pagesservice",{"_index":770,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["constructor(private",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(protected",{"_index":238,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":509,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"injectables/PagesService.html":{}}}],["constructor(query",{"_index":244,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/PagesService.html":{}}}],["constructor(service",{"_index":496,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":234,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/PagesQuery.html":{}}}],["container",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/PageContainerComponent.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["container'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":747,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":769,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":768,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":767,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:11",{"_index":772,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:14",{"_index":774,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/page",{"_index":746,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["containers/editor",{"_index":743,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/editorjs",{"_index":580,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/page",{"_index":745,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":343,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["content",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":520,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["controlling",{"_index":1104,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["core",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["coverage",{"_index":944,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1080,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["created",{"_index":491,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["createeditor",{"_index":616,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createeditor(holder",{"_index":626,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["creates",{"_index":630,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["createtools",{"_index":596,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["creating",{"_index":636,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["creation",{"_index":376,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["current",{"_index":611,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cursor",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["custom",{"_index":316,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["custommodule",{"_index":1090,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["cy.get('h1",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cycle",{"_index":1098,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["darkgray",{"_index":512,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":307,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["date.now",{"_index":696,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"dependencies.html":{}}}],["declarations",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["decoration",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["decorators",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/SidebarComponent.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["default_config",{"_index":575,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_config.editorjs.autofocus",{"_index":602,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["default_config.editorjs.holder",{"_index":604,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["default_config.editorjs.initialblock",{"_index":606,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["defaultconfig",{"_index":594,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":574,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["define",{"_index":395,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["defined",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":270,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["deigned",{"_index":1068,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["delete",{"_index":723,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["delete(pageid",{"_index":804,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["demo.module.ts",{"_index":732,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes",{"_index":749,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/pages",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/editor",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/editor/:id",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/editor",{"_index":400,"title":{},"body":{"components/EditorPageComponent.html":{},"coverage.html":{}}}],["demo/src/lib/containers/page",{"_index":766,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["demo/src/lib/ngx",{"_index":731,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/plugins/code/code.module.ts",{"_index":363,"title":{},"body":{"modules/CodeModule.html":{}}}],["demo/src/lib/plugins/code/code.plugin.ts",{"_index":836,"title":{},"body":{"injectables/PluginCode.html":{},"coverage.html":{}}}],["demo/src/lib/plugins/code/code.plugin.ts:8",{"_index":837,"title":{},"body":{"injectables/PluginCode.html":{}}}],["demo/src/lib/plugins/image/image.module.ts",{"_index":452,"title":{},"body":{"modules/ImageModule.html":{}}}],["demo/src/lib/plugins/image/image.plugin.ts",{"_index":851,"title":{},"body":{"injectables/PluginImage.html":{},"coverage.html":{}}}],["demo/src/lib/plugins/image/image.plugin.ts:8",{"_index":852,"title":{},"body":{"injectables/PluginImage.html":{}}}],["demo/src/lib/plugins/link/link.module.ts",{"_index":458,"title":{},"body":{"modules/LinkModule.html":{}}}],["demo/src/lib/plugins/link/link.plugin.ts",{"_index":853,"title":{},"body":{"injectables/PluginLink.html":{},"coverage.html":{}}}],["demo/src/lib/plugins/link/link.plugin.ts:8",{"_index":854,"title":{},"body":{"injectables/PluginLink.html":{}}}],["demo/src/lib/plugins/marker/marker.module.ts",{"_index":464,"title":{},"body":{"modules/MarkerModule.html":{}}}],["demo/src/lib/plugins/marker/marker.plugin.ts",{"_index":865,"title":{},"body":{"injectables/PluginMarker.html":{},"coverage.html":{}}}],["demo/src/lib/plugins/marker/marker.plugin.ts:12",{"_index":867,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["demo/src/lib/plugins/marker/marker.plugin.ts:8",{"_index":866,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["demo/src/lib/plugins/simple",{"_index":923,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/SimpleImageModule.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":763,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":784,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":788,"title":{},"body":{"injectables/PagesQuery.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":790,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":793,"title":{},"body":{"injectables/PagesService.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":798,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":815,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":816,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":800,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":813,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":805,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":811,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":802,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":809,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":832,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":835,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demo](https://tinynodes",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["demos",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["dependencies",{"_index":153,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["destroy",{"_index":617,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroy(holder",{"_index":643,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroys",{"_index":648,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["details",{"_index":659,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["developed",{"_index":1115,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["development",{"_index":1016,"title":{},"body":{"index.html":{}}}],["directive",{"_index":128,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["directive/component",{"_index":1119,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["directives",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":504,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["disable",{"_index":642,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["display",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["docs",{"_index":483,"title":{},"body":{"components/NavBarComponent.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["documentation",{"_index":945,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["documented",{"_index":1123,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["download",{"_index":1053,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["dynamic",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/support/app.po.ts",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":1071,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["easier",{"_index":1105,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["editor",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["editor's",{"_index":387,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["editorconfig",{"_index":677,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs",{"_index":198,"title":{"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}},"body":{"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["editorjs'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs.component.html",{"_index":494,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":493,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":505,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":517,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs.directive.ts:24",{"_index":529,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:26",{"_index":539,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:31",{"_index":541,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:35",{"_index":543,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:39",{"_index":536,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:45",{"_index":533,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:49",{"_index":538,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.module.ts",{"_index":563,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs.module.ts:68",{"_index":571,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":698,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":736,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":281,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["editorjs/header",{"_index":843,"title":{},"body":{"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"dependencies.html":{}}}],["editorjs/image",{"_index":738,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":856,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":740,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":742,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginMarker.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["editorjs/paragraph",{"_index":872,"title":{},"body":{"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"dependencies.html":{}}}],["editorjs/simple",{"_index":927,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":486,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":516,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs/src/lib/ngx",{"_index":562,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/plugins/header/header.module.ts",{"_index":849,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["editorjs/src/lib/plugins/header/header.plugin.ts",{"_index":841,"title":{},"body":{"injectables/PluginHeader.html":{},"coverage.html":{}}}],["editorjs/src/lib/plugins/header/header.plugin.ts:14",{"_index":842,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["editorjs/src/lib/plugins/list/list.module.ts",{"_index":863,"title":{},"body":{"modules/PluginListModule.html":{}}}],["editorjs/src/lib/plugins/list/list.plugin.ts",{"_index":857,"title":{},"body":{"injectables/PluginList.html":{},"coverage.html":{}}}],["editorjs/src/lib/plugins/list/list.plugin.ts:14",{"_index":858,"title":{},"body":{"injectables/PluginList.html":{}}}],["editorjs/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":877,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":870,"title":{},"body":{"injectables/PluginParagraph.html":{},"coverage.html":{}}}],["editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":871,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":608,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:103",{"_index":654,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:115",{"_index":650,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:127",{"_index":665,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:139",{"_index":661,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:152",{"_index":671,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:172",{"_index":667,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:189",{"_index":644,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:24",{"_index":674,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:29",{"_index":672,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:34",{"_index":675,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:39",{"_index":625,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:55",{"_index":629,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":879,"title":{},"body":{"injectables/PluginService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:15",{"_index":887,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:35",{"_index":895,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:43",{"_index":902,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:52",{"_index":897,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:59",{"_index":905,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:67",{"_index":899,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":305,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":309,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":366,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":342,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorjs/src/lib/types/maps.ts:15",{"_index":346,"title":{},"body":{"interfaces/BlocksMap.html":{}}}],["editorjs/src/lib/types/maps.ts:22",{"_index":928,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:29",{"_index":358,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":399,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":269,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:17",{"_index":942,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["editorjs/src/lib/types/plugins.ts:7",{"_index":839,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs](http://editorjs.io",{"_index":597,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjscode",{"_index":735,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["editorjsconfig",{"_index":365,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"coverage.html":{}}}],["editorjsimage",{"_index":737,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["editorjslist",{"_index":739,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["editorjsmarker",{"_index":741,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["editorjsplugin",{"_index":1149,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":349,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorpagecomponent",{"_index":132,"title":{"components/EditorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["editorservice",{"_index":524,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["effects",{"_index":1116,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["el",{"_index":530,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["element",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":528,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["elements",{"_index":345,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["enhancements",{"_index":1112,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["entity",{"_index":828,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":833,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":834,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":733,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["environment",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":652,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["error(`no",{"_index":710,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["example",{"_index":492,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["exclude",{"_index":900,"title":{},"body":{"injectables/PluginService.html":{}}}],["exclude.includes(key",{"_index":916,"title":{},"body":{"injectables/PluginService.html":{}}}],["excludetools",{"_index":627,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["exist",{"_index":655,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":632,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["export",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["exported",{"_index":290,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["exports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["exposed",{"_index":1102,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["exposes",{"_index":1099,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["extendable",{"_index":1069,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["extending",{"_index":285,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["extends",{"_index":232,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{}}}],["factory",{"_index":1086,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["failed",{"_index":1141,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["false",{"_index":264,"title":{},"body":{"injectables/ApplicationStore.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["false]].foreach(([mapkay",{"_index":718,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["fb",{"_index":415,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["feature",{"_index":1073,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["features",{"_index":565,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["filter(([key",{"_index":915,"title":{},"body":{"injectables/PluginService.html":{}}}],["finaltools",{"_index":921,"title":{},"body":{"injectables/PluginService.html":{}}}],["first",{"_index":393,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["fixes",{"_index":1138,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["flexlayoutmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["focus",{"_index":392,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["folder",{"_index":1015,"title":{},"body":{"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["following",{"_index":1088,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["foreach(([key",{"_index":910,"title":{},"body":{"injectables/PluginService.html":{}}}],["form",{"_index":407,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["format",{"_index":1124,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["formbuilder",{"_index":412,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["formgroup",{"_index":426,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["forroot",{"_index":566,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["forroot(config",{"_index":570,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["friendly",{"_index":1078,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["full",{"_index":1006,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":275,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["functions",{"_index":1000,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1070,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["generated",{"_index":1021,"title":{},"body":{"index.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["generation",{"_index":1120,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["get(name",{"_index":896,"title":{},"body":{"injectables/PluginService.html":{}}}],["getblocks",{"_index":618,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getblocks(holder",{"_index":649,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["geteditor",{"_index":540,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(holder",{"_index":653,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getform",{"_index":424,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["getgreeting",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethidden",{"_index":247,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getpages",{"_index":773,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getplugins",{"_index":904,"title":{},"body":{"injectables/PluginService.html":{}}}],["getservice",{"_index":542,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getters",{"_index":1145,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["getting",{"_index":1003,"title":{"index.html":{}},"body":{}}],["gettools",{"_index":884,"title":{},"body":{"injectables/PluginService.html":{}}}],["gettools(exclude",{"_index":898,"title":{},"body":{"injectables/PluginService.html":{}}}],["github",{"_index":484,"title":{},"body":{"components/NavBarComponent.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["go",{"_index":778,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["graph",{"_index":1026,"title":{},"body":{"modules.html":{}}}],["gt",{"_index":779,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["guid",{"_index":819,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["handling",{"_index":1096,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["haschanged",{"_index":619,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["haschanged(holder",{"_index":660,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["header",{"_index":323,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":850,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":327,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/PageContainerComponent.html":{}}}],["hidden",{"_index":243,"title":{},"body":{"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{}}}],["hidetoolbar",{"_index":369,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["hold",{"_index":385,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["holder",{"_index":370,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["host",{"_index":446,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["html",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["httpclient",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["id",{"_index":384,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["identifier",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":328,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["image.module",{"_index":754,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["image.module.ts",{"_index":940,"title":{},"body":{"modules/SimpleImageModule.html":{}}}],["image.plugin",{"_index":453,"title":{},"body":{"modules/ImageModule.html":{},"modules/SimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":924,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["image.plugin.ts:8",{"_index":925,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":753,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/SimpleImageModule.html":{},"coverage.html":{}}}],["imageblock",{"_index":338,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imagemodule",{"_index":448,"title":{"modules/ImageModule.html":{}},"body":{"modules/ImageModule.html":{},"modules.html":{},"overview.html":{}}}],["implemented",{"_index":1054,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["implements",{"_index":403,"title":{},"body":{"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["import",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["imported",{"_index":1154,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["imports",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["improve",{"_index":1110,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["improved",{"_index":1151,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["include",{"_index":640,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["included",{"_index":1137,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["including",{"_index":1012,"title":{},"body":{"index.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":308,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["information",{"_index":1017,"title":{},"body":{"index.html":{}}}],["initial",{"_index":294,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["initialblock",{"_index":371,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":888,"title":{},"body":{"injectables/PluginService.html":{}}}],["initialplugins",{"_index":297,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":676,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["inject(initialplugins",{"_index":907,"title":{},"body":{"injectables/PluginService.html":{}}}],["inject(ngx_editorjs_config",{"_index":681,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(userplugins",{"_index":908,"title":{},"body":{"injectables/PluginService.html":{}}}],["injectable",{"_index":229,"title":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"coverage.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":230,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":881,"title":{},"body":{"injectables/PluginService.html":{}}}],["injection",{"_index":292,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":278,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["injectiontoken('initialplugins",{"_index":298,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":398,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":302,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["input",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["inputs",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["inside",{"_index":1079,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["install",{"_index":1057,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["installed",{"_index":1060,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["installing",{"_index":1055,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["instance",{"_index":367,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["instance.api",{"_index":1100,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["instances",{"_index":348,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"interfaces/ReadyMap.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["interface",{"_index":254,"title":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":255,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{}}}],["internal",{"_index":673,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{}}}],["isready",{"_index":620,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isready(holder",{"_index":664,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["issue",{"_index":1139,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["items",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":595,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"dependencies.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["keep",{"_index":1126,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["key",{"_index":284,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["keys",{"_index":639,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["label",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["last",{"_index":355,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["layout",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["left",{"_index":515,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["level",{"_index":324,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["libraries",{"_index":1009,"title":{},"body":{"index.html":{}}}],["library",{"_index":1051,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["libs/.../blocks.ts",{"_index":1033,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../index.ts",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":268,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["life",{"_index":1097,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["lightgray",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["line",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["link",{"_index":855,"title":{},"body":{"injectables/PluginLink.html":{}}}],["link.plugin",{"_index":459,"title":{},"body":{"modules/LinkModule.html":{}}}],["linkmodule",{"_index":454,"title":{"modules/LinkModule.html":{}},"body":{"modules/LinkModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["links",{"_index":1007,"title":{},"body":{"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["list",{"_index":102,"title":{"interfaces/List.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["list.plugin",{"_index":864,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":320,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["liststyle",{"_index":318,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1075,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["loader",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["m",{"_index":845,"title":{},"body":{"injectables/PluginHeader-1.html":{}}}],["made",{"_index":615,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["make",{"_index":1103,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["makes",{"_index":882,"title":{},"body":{"injectables/PluginService.html":{}}}],["management",{"_index":1114,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["manager",{"_index":439,"title":{},"body":{"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{}}}],["map",{"_index":287,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["maps",{"_index":610,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["markdown",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":759,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":868,"title":{},"body":{"injectables/PluginMarker.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["marker.plugin",{"_index":465,"title":{},"body":{"modules/MarkerModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["markermodule",{"_index":460,"title":{"modules/MarkerModule.html":{}},"body":{"modules/MarkerModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["mat",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodule",{"_index":757,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matcardmodule",{"_index":471,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matching",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["material.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodule",{"_index":163,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["maticonmodule",{"_index":469,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":470,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["matsidenavmodule",{"_index":467,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":468,"title":{},"body":{"modules/MaterialModule.html":{}}}],["menu",{"_index":481,"title":{},"body":{"components/NavBarComponent.html":{}}}],["merged",{"_index":891,"title":{},"body":{"injectables/PluginService.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":567,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["middle",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["minheight",{"_index":372,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["miscellaneous",{"_index":999,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":150,"title":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/CodeModule.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"modules/SimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["modules",{"_index":152,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["modulewithproviders",{"_index":576,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["more",{"_index":658,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["multiple",{"_index":1144,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{}}}],["nav",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":478,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":134,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigation",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["nbsp",{"_index":482,"title":{},"body":{"components/NavBarComponent.html":{}}}],["need",{"_index":1085,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["new",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["newpage",{"_index":822,"title":{},"body":{"injectables/PagesService.html":{}}}],["ng",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngaftercontentinit",{"_index":409,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["ngafterviewinit",{"_index":525,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngdevtools",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["ngonchanges",{"_index":526,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":534,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["ngrx/effects",{"_index":1113,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["ngx",{"_index":84,"title":{"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["ngx.firebaseapp.com",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx_editorjs_config",{"_index":397,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["ngxeditorjscomponent",{"_index":137,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":396,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemomodule",{"_index":165,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":748,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":144,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule",{"_index":164,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["ngxeditorjspluginsmodule",{"_index":760,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{}}}],["ngxeditorjsservice",{"_index":413,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["ngzone",{"_index":624,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["none",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["notable",{"_index":1122,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["now",{"_index":1087,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":485,"title":{},"body":{"components/NavBarComponent.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["null",{"_index":722,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["number",{"_index":326,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["nx",{"_index":1022,"title":{},"body":{"index.html":{}}}],["object",{"_index":668,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["object.entries",{"_index":909,"title":{},"body":{"injectables/PluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":914,"title":{},"body":{"injectables/PluginService.html":{}}}],["observable",{"_index":249,"title":{},"body":{"injectables/ApplicationService.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["once",{"_index":1059,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":701,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":522,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ondestroy",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["one",{"_index":637,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["oninit",{"_index":931,"title":{},"body":{"components/SidebarComponent.html":{}}}],["onready",{"_index":699,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["onsubmit",{"_index":410,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["optional",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["options",{"_index":691,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["options.data",{"_index":694,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":314,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["output",{"_index":378,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["outputdata",{"_index":377,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["overriding",{"_index":1095,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["overview",{"_index":1027,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1065,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["p",{"_index":918,"title":{},"body":{"injectables/PluginService.html":{}}}],["package",{"_index":977,"title":{"dependencies.html":{}},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["padding",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["page",{"_index":53,"title":{"interfaces/Page.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["page'},{'name",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":744,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["page.component.html",{"_index":406,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.scss",{"_index":405,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts",{"_index":402,"title":{},"body":{"components/EditorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":414,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:15",{"_index":422,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:20",{"_index":423,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:22",{"_index":425,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:26",{"_index":416,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:30",{"_index":417,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.id",{"_index":824,"title":{},"body":{"injectables/PagesService.html":{}}}],["page/editor",{"_index":401,"title":{},"body":{"components/EditorPageComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{}}}],["pageblock",{"_index":764,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["pagecontainercomponent",{"_index":139,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pagedata",{"_index":408,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["pageid",{"_index":803,"title":{},"body":{"injectables/PagesService.html":{}}}],["pages",{"_index":438,"title":{},"body":{"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":791,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":785,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":786,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":787,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pagesquery",{"_index":782,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesservice",{"_index":771,"title":{"injectables/PagesService.html":{}},"body":{"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesstate",{"_index":792,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["pagesstore",{"_index":783,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":729,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":420,"title":{},"body":{"components/EditorPageComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["paragraph",{"_index":321,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":878,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":322,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":508,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["parameter",{"_index":1147,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{}}}],["parentmodule",{"_index":599,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["pass",{"_index":572,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["passed",{"_index":890,"title":{},"body":{"injectables/PluginService.html":{}}}],["path",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipeline",{"_index":1118,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["piper",{"_index":1020,"title":{},"body":{"index.html":{}}}],["placeholder",{"_index":373,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["plugin",{"_index":272,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["plugin.plugin",{"_index":920,"title":{},"body":{"injectables/PluginService.html":{}}}],["plugin.shortcut",{"_index":919,"title":{},"body":{"injectables/PluginService.html":{}}}],["plugincode",{"_index":362,"title":{"injectables/PluginCode.html":{}},"body":{"modules/CodeModule.html":{},"injectables/PluginCode.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["pluginconfig",{"_index":283,"title":{"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["pluginheader",{"_index":587,"title":{"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginheadermodule",{"_index":558,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginimage",{"_index":451,"title":{"injectables/PluginImage.html":{}},"body":{"modules/ImageModule.html":{},"injectables/PluginImage.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlink",{"_index":457,"title":{"injectables/PluginLink.html":{}},"body":{"modules/LinkModule.html":{},"injectables/PluginLink.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlist",{"_index":589,"title":{"injectables/PluginList.html":{},"injectables/PluginList-1.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlistmodule",{"_index":560,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginmarker",{"_index":463,"title":{"injectables/PluginMarker.html":{}},"body":{"modules/MarkerModule.html":{},"injectables/PluginMarker.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["pluginmarkermodule",{"_index":1084,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["pluginparagraph",{"_index":592,"title":{"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginparagraphmodule",{"_index":559,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{}}}],["plugins",{"_index":295,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["plugins.module.ts",{"_index":762,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins.service",{"_index":679,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugins/code/code.module",{"_index":751,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["plugins/header/header.module",{"_index":582,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/header/header.plugin",{"_index":588,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/link/link.module",{"_index":755,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["plugins/list/list.module",{"_index":583,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/list/list.plugin",{"_index":590,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/marker/marker.module",{"_index":756,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["plugins/marker/marker.plugin",{"_index":1089,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":591,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/paragraph/paragraph.plugin",{"_index":593,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/simple",{"_index":752,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["plugins/src/lib/ngx",{"_index":761,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":844,"title":{},"body":{"injectables/PluginHeader-1.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":846,"title":{},"body":{"injectables/PluginHeader-1.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":859,"title":{},"body":{"injectables/PluginList-1.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":860,"title":{},"body":{"injectables/PluginList-1.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":873,"title":{},"body":{"injectables/PluginParagraph-1.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":874,"title":{},"body":{"injectables/PluginParagraph-1.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":304,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":943,"title":{},"body":{"interfaces/ToolSettingsMap-1.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":840,"title":{},"body":{"interfaces/PluginConfig-1.html":{}}}],["pluginservice",{"_index":561,"title":{"injectables/PluginService.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"coverage.html":{},"overview.html":{}}}],["pluginsimpleimage",{"_index":922,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/SimpleImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginsmap",{"_index":883,"title":{},"body":{"injectables/PluginService.html":{}}}],["pointer",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["potential",{"_index":1072,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["pre",{"_index":1061,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["private",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{}}}],["produced",{"_index":893,"title":{},"body":{"injectables/PluginService.html":{}}}],["production",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1010,"title":{},"body":{"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["properties",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{}}}],["property",{"_index":332,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["provide",{"_index":531,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["provided",{"_index":319,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["providedin",{"_index":680,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["providers",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["provides",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{}}}],["query",{"_index":233,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/PagesService.html":{}}}],["queryentity",{"_index":789,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["radius",{"_index":513,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactiveformsmodule",{"_index":734,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["readme",{"_index":1013,"title":{"additional-documentation/ngx-editorjs-readme.html":{}},"body":{"index.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["readonly",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{}}}],["ready",{"_index":351,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["readymap",{"_index":353,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["redirectto",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":917,"title":{},"body":{"injectables/PluginService.html":{}}}],["regenerated",{"_index":1140,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["registered",{"_index":906,"title":{},"body":{"injectables/PluginService.html":{}}}],["release",{"_index":1153,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["releases",{"_index":1101,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["remove",{"_index":885,"title":{},"body":{"injectables/PluginService.html":{}}}],["remove(name",{"_index":901,"title":{},"body":{"injectables/PluginService.html":{}}}],["removeblock",{"_index":795,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":808,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":807,"title":{},"body":{"injectables/PagesService.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["removes",{"_index":806,"title":{},"body":{"injectables/PagesService.html":{}}}],["renamed",{"_index":1150,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["render",{"_index":379,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["replaced",{"_index":1146,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["repository",{"_index":1005,"title":{},"body":{"index.html":{}}}],["required",{"_index":271,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["reset",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["result",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["results",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["return",{"_index":250,"title":{},"body":{"injectables/ApplicationService.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["returned",{"_index":277,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["returns",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["right",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["root'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["route",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routermodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":758,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1018,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/SidebarComponent.html":{}}}],["sanitizer",{"_index":374,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["sanitizerconfig",{"_index":394,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["save",{"_index":614,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["save(holder",{"_index":666,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["see",{"_index":656,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["semantic",{"_index":1128,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["service",{"_index":495,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["services",{"_index":521,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["services/editorjs.service",{"_index":506,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":584,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["set",{"_index":391,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["setblocks",{"_index":796,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":810,"title":{},"body":{"injectables/PagesService.html":{}}}],["sets",{"_index":573,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["settings",{"_index":276,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["several",{"_index":609,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["shift+ctrl+m",{"_index":1081,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["shortcut",{"_index":274,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["shown",{"_index":383,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["sidebar",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":933,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":932,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":141,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidenav",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["simple",{"_index":941,"title":{},"body":{"modules/SimpleImageModule.html":{}}}],["simplechanges",{"_index":535,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":926,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["simpleimagemodule",{"_index":730,"title":{"modules/SimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/SimpleImageModule.html":{},"modules.html":{},"overview.html":{}}}],["single",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"injectables/PluginService.html":{}}}],["singleton",{"_index":880,"title":{},"body":{"injectables/PluginService.html":{}}}],["site",{"_index":1008,"title":{},"body":{"index.html":{}}}],["skipself",{"_index":579,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["solid",{"_index":511,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["standard",{"_index":1063,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["started",{"_index":1004,"title":{"index.html":{}},"body":{}}],["state",{"_index":352,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["statements",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":613,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["static",{"_index":569,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["store",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{},"dependencies.html":{}}}],["store/app/application.module",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["store/app/application.service",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{}}}],["store/pages/pages.models",{"_index":775,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":750,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":776,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":262,"title":{},"body":{"injectables/ApplicationStore.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":892,"title":{},"body":{"injectables/PluginService.html":{}}}],["stores",{"_index":1143,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["stretch",{"_index":336,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":337,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":286,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["style",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subject",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["subscribed",{"_index":662,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["super",{"_index":263,"title":{},"body":{"injectables/ApplicationStore.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(store",{"_index":239,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/PagesQuery.html":{}}}],["support",{"_index":1023,"title":{},"body":{"modules.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["supports",{"_index":313,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":1024,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":430,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["switchmap(([form",{"_index":437,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["t",{"_index":311,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["table",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":765,"title":{"interfaces/Tag.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["take",{"_index":1094,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["takes",{"_index":568,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["tane",{"_index":1019,"title":{},"body":{"index.html":{}}}],["tap",{"_index":431,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["team",{"_index":1064,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["templateurl",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["tests",{"_index":1108,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["text",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["this._value().hidden",{"_index":266,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["this.add(key",{"_index":911,"title":{},"body":{"injectables/PluginService.html":{}}}],["this.app.hidden.pipe(takeuntil(this.ondestroy$)).subscribe(value",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.app.togglesidebar",{"_index":480,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.blocks",{"_index":551,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocksmap[holder",{"_index":706,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.blocksmap[holder].asobservable",{"_index":707,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.blocksmap[holder].next(outputdata.blocks",{"_index":716,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder",{"_index":687,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].asobservable",{"_index":709,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].next(0",{"_index":688,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].next(date.now",{"_index":702,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].next(outputdata.time",{"_index":717,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":692,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(holder",{"_index":705,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.destroy(holder",{"_index":683,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editor.blocks",{"_index":435,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.editormap[holder",{"_index":682,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].blocks.clear",{"_index":711,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].blocks.render",{"_index":712,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].destroy",{"_index":724,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].saver.save",{"_index":715,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":545,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.createeditor(this.el.nativeelement.id",{"_index":550,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.destroy(this.el.nativeelement.id",{"_index":552,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.geteditor(this.el.nativeelement.id",{"_index":544,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.update(this.el.nativeelement.id",{"_index":548,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.fb.array",{"_index":421,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.fb.group",{"_index":418,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.form",{"_index":432,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.ondestroy$.complete",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.ondestroy$.next(true",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.pagedata",{"_index":433,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.pagedata$.pipe",{"_index":436,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.pages",{"_index":820,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":777,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.plugins.gettools(excludetools",{"_index":693,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":913,"title":{},"body":{"injectables/PluginService.html":{}}}],["this.pluginsmap[name",{"_index":912,"title":{},"body":{"injectables/PluginService.html":{}}}],["this.query.select('hidden",{"_index":251,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.query.selectall",{"_index":821,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.readymap[holder",{"_index":684,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.readymap[holder].asobservable",{"_index":708,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.readymap[holder].next(false",{"_index":685,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.readymap[holder].next(true",{"_index":700,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.save(holder",{"_index":703,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.sidenav.close",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sidenav.open",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.store._value().hidden",{"_index":253,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.store.add(newpage",{"_index":823,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":826,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update",{"_index":252,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.store.update(pageid",{"_index":827,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":825,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.update",{"_index":265,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["this.zone.run",{"_index":690,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":713,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkay][holder",{"_index":719,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkay][holder].complete",{"_index":721,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkay][holder].next(value",{"_index":720,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["throw",{"_index":651,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["time",{"_index":695,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["timestamp",{"_index":354,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["tinynodes",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/ngx",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginMarker.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/Tag.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/app.routes.ts",{"_index":952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/components/app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/nav",{"_index":472,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":929,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/material.module.ts",{"_index":466,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tinynodes/src/app/store/app/application.model.ts",{"_index":256,"title":{},"body":{"interfaces/ApplicationState.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.module.ts",{"_index":225,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["tinynodes/src/app/store/app/application.query.ts",{"_index":231,"title":{},"body":{"injectables/ApplicationQuery.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.query.ts:7",{"_index":235,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["tinynodes/src/app/store/app/application.service.ts",{"_index":240,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.service.ts:10",{"_index":248,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["tinynodes/src/app/store/app/application.service.ts:14",{"_index":246,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["tinynodes/src/app/store/app/application.service.ts:7",{"_index":245,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["tinynodes/src/app/store/app/application.store.ts",{"_index":258,"title":{},"body":{"injectables/ApplicationStore.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.store.ts:14",{"_index":261,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["tinynodes/src/app/store/app/application.store.ts:7",{"_index":260,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["todo",{"_index":1106,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["togglemenu",{"_index":259,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["togglesidebar",{"_index":241,"title":{},"body":{"injectables/ApplicationService.html":{},"components/NavBarComponent.html":{}}}],["token",{"_index":293,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":291,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorPageComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolbar",{"_index":381,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["toolconstructable",{"_index":280,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tools",{"_index":288,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":279,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["toolsettingsmap",{"_index":289,"title":{"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["true",{"_index":380,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":1066,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationService.html":{},"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":1031,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/blocks",{"_index":507,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":585,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":678,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":586,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginHeader.html":{},"injectables/PluginHeader-1.html":{},"injectables/PluginList.html":{},"injectables/PluginList-1.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginParagraph-1.html":{},"injectables/PluginService.html":{}}}],["undefined",{"_index":1076,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["underlying",{"_index":502,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["unit",{"_index":1107,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["unordered",{"_index":315,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["up",{"_index":634,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["update",{"_index":621,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["update(holder",{"_index":670,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":814,"title":{},"body":{"injectables/PagesService.html":{}}}],["updates",{"_index":669,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["upsert",{"_index":797,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":812,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":329,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1056,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["use",{"_index":441,"title":{},"body":{"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["used",{"_index":1092,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["usefactory",{"_index":598,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["useful",{"_index":440,"title":{},"body":{"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{}}}],["user",{"_index":889,"title":{},"body":{"injectables/PluginService.html":{}}}],["userplugins",{"_index":301,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginService.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["usevalue",{"_index":600,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":488,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["validators",{"_index":427,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["validators.required",{"_index":419,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["value",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":350,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["var",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variable",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1034,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":697,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1129,"title":{},"body":{"additional-documentation/ngx-editorjs-changelog.html":{}}}],["vertical",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["via",{"_index":300,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngx-editorjs-readme.html":{},"additional-documentation/ngx-editorjs-changelog.html":{}}}],["view",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["viewchild",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/SidebarComponent.html":{}}}],["viewchild(matsidenav",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":499,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["visit",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["void",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"injectables/ApplicationStore.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{}}}],["want",{"_index":641,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["way",{"_index":518,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["what's",{"_index":1091,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["white",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["width",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["withbackground",{"_index":335,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":333,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":532,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/ngx-editorjs-readme.html":{}}}],["without",{"_index":490,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["won't",{"_index":382,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["x1f614",{"_index":1109,"title":{},"body":{"additional-documentation/ngx-editorjs-readme.html":{}}}],["yes",{"_index":638,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["zone",{"_index":623,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/app-component/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component that provides the root container\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                onDestroy$\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Default value : 'Tinynodes Angular Demos'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:20\n                            \n                        \n                \n                    \n                        The page title\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { ApplicationService } from '../../store/app/application.service';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * The main application component that provides the root container\n */\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   * The page title\n   */\n  @Input()\n  public pageTitle = 'Tinynodes Angular Demos';\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  private readonly onDestroy$ = new Subject();\n\n  constructor(private readonly app: ApplicationService) {}\n\n  ngOnInit() {\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(value => {\n      value ? this.sidenav.close() : this.sidenav.open();\n    });\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Demo: ngx-editor\n      \n    \n  \n  \n    \n\n    \n      \n    \n  \n\n\n\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n -->\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100%;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Demo: ngx-editor                                                                                               -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The main ngx-tinynodes module that builds the core single page application.\nTo view the application visit the demo\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './components/app-component/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\nimport { MaterialModule } from './material.module';\nimport { ApplicationDataModule } from './store/app/application.module';\n\n/**\n * The main `ngx-tinynodes` module that builds the core single page application.\n * To view the application visit [the demo](https://tinynodes-ngx.firebaseapp.com/)\n */\n@NgModule({\n  declarations: [AppComponent, NavBarComponent, SidebarComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ApplicationDataModule,\n    RouterModule.forRoot([]),\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    environment.production ? [] : [AkitaNgDevtools.forRoot(), AkitaNgRouterStoreModule.forRoot()]\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationDataModule.html":{"url":"modules/ApplicationDataModule.html","title":"module - ApplicationDataModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nApplicationDataModule -->\n\nApplicationService->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplicationQuery\n                        \n                        \n                            ApplicationService\n                        \n                        \n                            ApplicationStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationService } from './application.service';\nimport { ApplicationStore } from './application.store';\n\n@NgModule({\n  providers: [ApplicationService, ApplicationQuery, ApplicationStore]\n})\nexport class ApplicationDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery.html":{"url":"injectables/ApplicationQuery.html","title":"injectable - ApplicationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/store/app/application.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n@Injectable()\nexport class ApplicationQuery extends Query {\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/store/app/application.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/store/app/application.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/store/app/application.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ApplicationService {\n  constructor(private readonly query: ApplicationQuery, private readonly store: ApplicationStore) {}\n\n  get hidden(): Observable {\n    return this.query.select('hidden');\n  }\n\n  public toggleSidebar() {\n    this.store.update({ hidden: !this.store._value().hidden });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApplicationState {\n  hidden: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore.html":{"url":"injectables/ApplicationStore.html","title":"injectable - ApplicationStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/store/app/application.store.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/store/app/application.store.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  constructor() {\n    super({\n      hidden: false\n    });\n  }\n\n  toggleMenu() {\n    this.update({ hidden: !this._value().hidden });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin-1.html":{"url":"interfaces/BasePlugin-1.html","title":"interface - BasePlugin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlocksMap.html":{"url":"interfaces/BlocksMap.html","title":"interface - BlocksMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlocksMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of Block elements from EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of number which is the timestamp of the last EditorJS change\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:29\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CodeModule.html":{"url":"modules/CodeModule.html","title":"module - CodeModule","body":"\n                   \n\n\n\n\n    Modules\n    CodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CodeModule\n\n\n\ncluster_CodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nCodeModule\n\nCodeModule\n\nCodeModule -->\n\nPluginCode->CodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/code/code.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n@NgModule({\n  providers: [PluginCode]\n})\nexport class CodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n}\n\nexport interface NgxEditorJSConfig {\n  editorjs?: EditorJSConfig;\n}\n\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    EditorJS\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorPageComponent.html":{"url":"components/EditorPageComponent.html","title":"component - EditorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editor-page\n            \n\n            \n                styleUrls\n                editor-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                editor-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                form$\n                            \n                            \n                                    Private\n                                pageData$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, editor: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            form$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageTitle: ['', [Validators.required]],\n    pageTags: this.fb.array([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { combineLatest, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-editor-page',\n  templateUrl: 'editor-page.component.html',\n  styleUrls: ['editor-page.component.scss']\n})\nexport class EditorPageComponent implements AfterContentInit {\n  constructor(private readonly fb: FormBuilder, private readonly editor: NgxEditorJSService) {}\n\n  private form$ = this.fb.group({\n    pageTitle: ['', [Validators.required]],\n    pageTags: this.fb.array([])\n  });\n\n  private pageData$: Observable[]>)[]>;\n\n  get form(): FormGroup {\n    return this.form$;\n  }\n\n  ngAfterContentInit() {\n    // this.pageData$ = combineLatest([this.form$, this.editor.blocks]);\n  }\n\n  public onSubmit() {\n    this.pageData$.pipe(\n      switchMap(([form, blocks]) => {\n        return [];\n      })\n    );\n  }\n}\n\n    \n\n    \n        \n  Ngx-EditorJS Pages Manager\n  A useful demo of the\n    @tinynodes/ngx-editorjs\n    module\n  \n    How to use\n    Click on the editor area below, the EditorJS block tool should appear.\n    Add blocks to the page\n  \n   \n\n\n    \n\n    \n                \n                    editor-page.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.page {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Ngx-EditorJS Pages Manager  A useful demo of the    @tinynodes/ngx-editorjs    module      How to use    Click on the editor area below, the EditorJS block tool should appear.    Add blocks to the page     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageModule.html":{"url":"modules/ImageModule.html","title":"module - ImageModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageModule\n\n\n\ncluster_ImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nImageModule\n\nImageModule\n\nImageModule -->\n\nPluginImage->ImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/image/image.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n@NgModule({\n  providers: [PluginImage]\n})\nexport class ImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LinkModule.html":{"url":"modules/LinkModule.html","title":"module - LinkModule","body":"\n                   \n\n\n\n\n    Modules\n    LinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LinkModule\n\n\n\ncluster_LinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nLinkModule\n\nLinkModule\n\nLinkModule -->\n\nPluginLink->LinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/link/link.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n@NgModule({\n  providers: [PluginLink]\n})\nexport class LinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MarkerModule.html":{"url":"modules/MarkerModule.html","title":"module - MarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    MarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MarkerModule\n\n\n\ncluster_MarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nMarkerModule\n\nMarkerModule\n\nMarkerModule -->\n\nPluginMarker->MarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class MarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule } from '@angular/material';\n\n@NgModule({\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule],\n  exports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Navbar Component'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ApplicationService } from '../../store/app/application.service';\n\n@Component({\n  selector: 'ngx-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  @Input()\n  title = 'Navbar Component';\n\n  constructor(private readonly app: ApplicationService) {}\n\n  public toggleSidebar() {\n    this.app.toggleSidebar();\n  }\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  &nbsp;\n  \n    {{ title }}\n  \n  \n    \n      \n        \n          Docs\n        \n      \n      \n        \n          Github\n        \n      \n      \n        \n          NPM\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                a {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu           {{ title }}                                Docs                                      Github                                      NPM                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                holder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:29\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:23\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:42\n                            \n                        \n\n                \n                    \n                        The editor service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editor: NgxEditorJSDirective;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(public readonly service: NgxEditorJSService) {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.editor {\n  width: 100%;\n  height: 100vh;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:         EditorJSConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n}\n\nexport interface NgxEditorJSConfig {\n  editorjs?: EditorJSConfig;\n}\n\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterViewInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                editorService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    service\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:24\n                            \n                        \n                \n                    \n                        Provide EditorJS blocks to render within the instance\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            editorService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:31\n                                \n                            \n                    \n                        \n                                Get the instance of the editor this directive has created\n\n\n                                \n                                    Returns :     EditorJS\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:35\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport EditorJS from '@editorjs/editorjs';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterViewInit {\n  /**\n   * Provide `EditorJS` blocks to render within the instance\n   */\n  @Input()\n  blocks: Block[] = [];\n\n  constructor(private readonly el: ElementRef, public readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the instance of the editor this directive has created\n   */\n  get editor(): EditorJS {\n    return this.editorService.getEditor(this.el.nativeElement.id);\n  }\n\n  get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      this.editorService.update(this.el.nativeElement.id, changes.blocks.currentValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.editorService.createEditor(this.el.nativeElement.id, this.blocks);\n  }\n\n  ngOnDestroy() {\n    this.editorService.destroy(this.el.nativeElement.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorJSModule->PluginHeaderModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorJSModule -->\n\nPluginHeaderModule->NgxEditorJSModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorJSModule -->\n\nPluginListModule->NgxEditorJSModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorJSModule -->\n\nPluginParagraphModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginService\n\nPluginService\n\nNgxEditorJSModule -->\n\nPluginService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                        \n                            PluginService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:68\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONFIG\n                                    \n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { NgxEditorJSComponent } from './containers/editorjs-component/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { PluginService } from './services/plugins.service';\nimport { NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { InitialPlugins, PluginConfig } from './types/plugins';\nimport { PluginHeader } from './plugins/header/header.plugin';\nimport { PluginList } from './plugins/list/list.plugin';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginParagraph } from './plugins/paragraph/paragraph.plugin';\n\nexport function defaultConfig() {\n  return {\n    editorjs: { autofocus: false, initialBlock: 'paragraph', holder: 'editor-js' }\n  };\n}\n\nexport function createTools(): PluginConfig {\n  return { header: new PluginHeader(), list: new PluginList(), paragraph: new PluginParagraph() };\n}\n\nconst DEFAULT_CONFIG: NgxEditorJSConfig = defaultConfig();\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, PluginHeaderModule, PluginListModule, PluginParagraphModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSDirective],\n  exports: [\n    NgxEditorJSComponent,\n    NgxEditorJSDirective,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginParagraphModule\n  ],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: InitialPlugins,\n      useFactory: createTools\n    },\n    PluginService,\n    PluginHeaderModule\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(config: NgxEditorJSConfig = DEFAULT_CONFIG): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useValue: {\n            editorjs: {\n              autofocus: config.editorjs.autofocus || DEFAULT_CONFIG.editorjs.autofocus,\n              holder: config.editorjs.holder || DEFAULT_CONFIG.editorjs.holder,\n              initialBlock: config.editorjs.initialBlock || DEFAULT_CONFIG.editorjs.initialBlock,\n              data: config.editorjs.data\n            }\n          }\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control EditorJS instances via Angular.\nThe service has several maps:\n* A map of EditorJS instances\n* A map of BehaviorSubject containing the current array of blocks\n* A map of ready states\nfrom the last save made on that instance\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blocksMap\n                            \n                            \n                                    Private\n                                changeMap\n                            \n                            \n                                    Private\n                                editorMap\n                            \n                            \n                                    Private\n                                readyMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, plugins: PluginService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(holder: string, blocks?: Block[], excludeTools?: string[], autoSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:55\n                \n            \n\n\n            \n                \n                    This method creates a new EditorJS instance and adds it to the editor map.\nIf there is an existing editor it will clean up first before creating a new one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Optional initial set of blocks to render in the editor\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        String array of keys to not include with this editor\n\n                                    \n                                \n                                \n                                    autoSave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        When an instance changes we update the block map, set to false if you want to disable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:189\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\nIt also calls the maps and sets their values back to their defaults and then\ncompletes and destroys them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:115\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for an EditorJS instance\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:103\n                \n            \n\n\n            \n                \n                    Get an EditorJS instance, if the instance does not exist it will be created\nand returned with the default settings\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorJS\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:139\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:127\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current ready state, this can be subscribed to before calling\nthe createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:172\n                \n            \n\n\n            \n                \n                    Calls the EditorJS save method which returns an OutputData object.\nFrom this the service updates the blocks map and change map values\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:152\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance.\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of Block elements to render\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blocksMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BlocksMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:29\n                            \n                        \n\n                \n                    \n                        Internal map of all Block BehaviorSubject instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            changeMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:39\n                            \n                        \n\n                \n                    \n                        Internal map of all EditorJS change states\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editorMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EditorMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:24\n                            \n                        \n\n                \n                    \n                        Internal map of all EditorJS instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            readyMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReadyMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:34\n                            \n                        \n\n                \n                    \n                        Internal map of all EditorJS ready states\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Block } from '../types/blocks';\nimport { NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { BlocksMap, ChangeMap, EditorMap, ReadyMap } from '../types/maps';\nimport { PluginService } from './plugins.service';\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n * The service has several maps:\n * * A map of `EditorJS` instances\n * * A map of `BehaviorSubject` containing the current array of blocks\n * * A map of ready states\n * from the last save made on that instance\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all Block `BehaviorSubject` instances\n   */\n  private blocksMap: BlocksMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private readyMap: ReadyMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private changeMap: ChangeMap = {};\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly plugins: PluginService,\n    private zone: NgZone\n  ) {}\n\n  /**\n   * This method creates a new EditorJS instance and adds it to the editor map.\n   * If there is an existing editor it will clean up first before creating a new one\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public createEditor(holder: string, blocks?: Block[], excludeTools?: string[], autoSave = true): void {\n    if (this.editorMap[holder]) {\n      this.destroy(holder);\n    }\n\n    if (this.readyMap[holder]) {\n      this.readyMap[holder].next(false);\n    } else {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    if (this.changeMap[holder]) {\n      this.changeMap[holder].next(0);\n    } else {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n\n    this.zone.run(() => {\n      const options: EditorConfig = {\n        ...this.config.editorjs,\n        holder,\n        tools: this.plugins.getTools(excludeTools)\n      };\n      if (blocks) {\n        options.data = {\n          blocks,\n          time: Date.now(),\n          version: EditorJS.version\n        };\n      }\n      this.editorMap[holder] = new EditorJS({\n        ...options,\n        onReady: () => {\n          this.readyMap[holder].next(true);\n        },\n        onChange: () => {\n          this.changeMap[holder].next(Date.now());\n          if (autoSave) this.save(holder);\n        }\n      });\n    });\n  }\n\n  /**\n   * Get an `EditorJS` instance, if the instance does not exist it will be created\n   * and returned with the default settings\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): EditorJS {\n    if (!this.editorMap[holder]) {\n      this.createEditor(holder);\n    }\n    return this.editorMap[holder];\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    if (!this.blocksMap[holder]) {\n      this.blocksMap[holder] = new BehaviorSubject([]);\n    }\n    return this.blocksMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    return this.readyMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public hasChanged(holder: string): Observable {\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n    return this.changeMap[holder].asObservable();\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update(holder: string, blocks: Block[]) {\n    if (!this.editorMap[holder]) {\n      throw new Error(`No EditorJS instance for ${holder}`);\n    }\n    this.zone.run(() => {\n      this.editorMap[holder].blocks.clear();\n      this.editorMap[holder].blocks.render({\n        blocks,\n        time: Date.now(),\n        version: EditorJS.version\n      });\n    });\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save(holder: string): void {\n    if (!this.editorMap[holder]) {\n      throw new Error(`No EditorJS instance for ${holder}`);\n    }\n    this.zone.run(async () => {\n      const outputData = await this.editorMap[holder].saver.save();\n      this.blocksMap[holder].next(outputData.blocks);\n      this.changeMap[holder].next(outputData.time);\n    });\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy(holder: string): void {\n    // Clean up the maps\n    [['blocksMap', []], ['changeMap', 0], ['readyMap', false]].forEach(([mapKay, value]: [string, any]) => {\n      if (this[mapKay][holder]) {\n        this[mapKay][holder].next(value);\n        this[mapKay][holder].complete();\n        this[mapKay][holder] = null;\n        delete this[mapKay][holder];\n      }\n    });\n    this.zone.run(() => {\n      if (this.editorMap[holder]) {\n        this.editorMap[holder].destroy();\n        this.editorMap[holder] = null;\n        delete this.editorMap[holder];\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nEditorPageComponent\n\nEditorPageComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nEditorPageComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nEditorPageComponent \n\nEditorPageComponent \n\nEditorPageComponent  -->\n\nNgxEditorjsDemoModule->EditorPageComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nCodeModule\n\nCodeModule\n\nNgxEditorjsDemoModule -->\n\nCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nLinkModule\n\nLinkModule\n\nNgxEditorjsDemoModule -->\n\nLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nMarkerModule\n\nMarkerModule\n\nNgxEditorjsDemoModule -->\n\nMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nSimpleImageModule\n\nSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditorPageComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CodeModule\n                        \n                        \n                            LinkModule\n                        \n                        \n                            MarkerModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            SimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EditorPageComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport EditorJSCode from '@editorjs/code';\nimport EditorJSImage from '@editorjs/image';\nimport EditorJSList from '@editorjs/list';\nimport EditorJSMarker from '@editorjs/marker';\nimport { NgxEditorJSModule, UserPlugins } from '@tinynodes/ngx-editorjs';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { EditorPageComponent } from './containers/editor-page/editor-page.component';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { CodeModule } from './plugins/code/code.module';\nimport { createTools } from './config';\nimport { SimpleImageModule } from './plugins/simple-image/simple-image.module';\nimport { LinkModule } from './plugins/link/link.module';\nimport { MarkerModule } from './plugins/marker/marker.module';\nimport { MatCardModule, MatButtonModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    CodeModule,\n    SimpleImageModule,\n    LinkModule,\n    MarkerModule,\n    MatCardModule,\n    MatButtonModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  declarations: [EditorPageComponent, PageContainerComponent],\n  exports: [EditorPageComponent, PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\n\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss']\n})\nexport class PageContainerComponent {\n  constructor(private readonly pagesService: PagesService) {}\n\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n}\n\n    \n\n    \n        \n  Ngx-EditorJS Pages Manager\n  A useful demo of the\n    @tinynodes/ngx-editorjs\n    module\n  \n    Go to Demo &gt;\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Ngx-EditorJS Pages Manager  A useful demo of the    @tinynodes/ngx-editorjs    module      Go to Demo >          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pages$\n                            \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/code/code.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/code/code.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Code from '@editorjs/code';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig-1.html":{"url":"interfaces/PluginConfig-1.html","title":"interface - PluginConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Header from '@editorjs/header';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader-1.html":{"url":"injectables/PluginHeader-1.html","title":"injectable - PluginHeader-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                m\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Header from '@editorjs/header';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * m\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Internal module to provide the Header block editor\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * Internal module to provide the Header block editor\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/image/image.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/image/image.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/link/link.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/link/link.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList-1.html":{"url":"injectables/PluginList-1.html","title":"injectable - PluginList-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Internal module to provide the List block editor\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * Internal module to provide the List block editor\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                            \n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \nshortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.plugin.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  plugin(): ToolSettings {\n    return Marker;\n  }\n\n  shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph-1.html":{"url":"injectables/PluginParagraph-1.html","title":"injectable - PluginParagraph-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Internal module to provide the Paragraph block editor\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * Internal module to provide the Paragraph block editor\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginService.html":{"url":"injectables/PluginService.html","title":"injectable - PluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pluginsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialPlugins: PluginConfig, userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initialPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Default plugins produced by the module\n\n                                                        \n                                                \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(name: string, tool: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:35\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tool\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:52\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:67\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:43\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pluginsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PluginConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                        Object map of the plugin configurations\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:59\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this service\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { BasePlugin, InitialPlugins, PluginConfig, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of EditorJS\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(\n    @Inject(InitialPlugins) initialPlugins: PluginConfig,\n    @Optional() @Inject(UserPlugins) userPlugins: PluginConfig\n  ) {\n    Object.entries({ ...initialPlugins, ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param name\n   * @param tool\n   */\n  public add(name: string, tool: BasePlugin) {\n    this.pluginsMap[name] = tool;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param name\n   */\n  public remove(name: string) {\n    this.pluginsMap[name] = null;\n    delete this.pluginsMap[name];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(name: string) {\n    this.pluginsMap[name];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this service\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        let p;\n        if (plugin.shortcut) {\n          p = {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            }\n          };\n        } else {\n          p = { [key]: plugin.plugin() };\n        }\n        return { ...finalTools, ...p };\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/simple-image/simple-image.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:22\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                onDestroy$\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { ApplicationService } from '../../store/app/application.service';\nimport { MatSidenav } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit, OnDestroy {\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  private readonly onDestroy$ = new Subject();\n\n  constructor(private readonly app: ApplicationService) {}\n\n  ngOnInit() {\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(value => {\n      value ? this.sidenav.close() : this.sidenav.open();\n    });\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    Demo: ngx-editorjs\n  \n\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Demo: ngx-editorjs  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleImageModule.html":{"url":"modules/SimpleImageModule.html","title":"module - SimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimpleImageModule\n\n\n\ncluster_SimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nSimpleImageModule\n\nSimpleImageModule\n\nSimpleImageModule -->\n\nPluginSimpleImage->SimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class SimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap-1.html":{"url":"interfaces/ToolSettingsMap-1.html","title":"interface - ToolSettingsMap-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/ngx-tinynodes-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/app.routes.ts\n            \n            variable\n            appRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/app-component/app.component.ts\n            \n            component\n            AppComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.model.ts\n            \n            interface\n            ApplicationState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.query.ts\n            \n            injectable\n            ApplicationQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.store.ts\n            \n            injectable\n            ApplicationStore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/config/index.ts\n            \n            function\n            createTools\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts\n            \n            component\n            EditorPageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n            \n            component\n            PageContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n            \n            variable\n            ngxEditorjsDemoRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/code/code.plugin.ts\n            \n            injectable\n            PluginCode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/image/image.plugin.ts\n            \n            injectable\n            PluginImage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/link/link.plugin.ts\n            \n            injectable\n            PluginLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.plugin.ts\n            \n            injectable\n            PluginMarker\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/simple-image/simple-image.plugin.ts\n            \n            injectable\n            PluginSimpleImage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Page\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            PageBlock\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Tag\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n            \n            injectable\n            PagesQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n            \n            injectable\n            PagesService\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            injectable\n            PagesStore\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            interface\n            PagesState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n            \n            injectable\n            PluginHeader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n            \n            injectable\n            PluginList\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n            \n            injectable\n            PluginParagraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            ToolSettingsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n            \n            component\n            NgxEditorJSComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n            \n            directive\n            NgxEditorJSDirective\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            createTools\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            variable\n            DEFAULT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/plugins/header/header.plugin.ts\n            \n            injectable\n            PluginHeader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/plugins/list/list.plugin.ts\n            \n            injectable\n            PluginList\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts\n            \n            injectable\n            PluginParagraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n            \n            injectable\n            NgxEditorJSService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/plugins.service.ts\n            \n            injectable\n            PluginService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Block\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Header\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            HeaderBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Image\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ImageBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            List\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ListBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Paragraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ParagraphBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            EditorJSConfig\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            NgxEditorJSConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            NGX_EDITORJS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            BlocksMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ChangeMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            EditorMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ReadyMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            ToolSettingsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            ngx-markdown : ^7.1.5\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTools   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createTools   (libs/.../index.ts)\n                        \n                        \n                            defaultConfig   (libs/.../ngx-editorjs.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTools()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultConfig\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultConfig()\n                \n            \n\n\n\n\n        \n    \n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTools()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+ - including a directive, component and service\n\nReadme\nChangelog\nDemo\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CodeModule\n\n\n\ncluster_CodeModule_providers\n\n\n\ncluster_ImageModule\n\n\n\ncluster_ImageModule_providers\n\n\n\ncluster_LinkModule\n\n\n\ncluster_LinkModule_providers\n\n\n\ncluster_MarkerModule\n\n\n\ncluster_MarkerModule_providers\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_SimpleImageModule\n\n\n\ncluster_SimpleImageModule_providers\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nApplicationDataModule -->\n\nApplicationService->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorJSModule->PluginHeaderModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nEditorPageComponent \n\nEditorPageComponent \n\nEditorPageComponent  -->\n\nNgxEditorjsDemoModule->EditorPageComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nCodeModule\n\nCodeModule\n\nCodeModule -->\n\nPluginCode->CodeModule\n\n\n\nNgxEditorjsDemoModule -->\n\nCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nImageModule\n\nImageModule\n\nImageModule -->\n\nPluginImage->ImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nLinkModule\n\nLinkModule\n\nLinkModule -->\n\nPluginLink->LinkModule\n\n\n\nNgxEditorjsDemoModule -->\n\nLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nMarkerModule\n\nMarkerModule\n\nMarkerModule -->\n\nPluginMarker->MarkerModule\n\n\n\nNgxEditorjsDemoModule -->\n\nMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nEditorPageComponent\n\nEditorPageComponent\n\nNgxEditorjsDemoModule -->\n\nEditorPageComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nSimpleImageModule\n\nSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorJSModule -->\n\nPluginHeaderModule->NgxEditorJSModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorJSModule -->\n\nPluginListModule->NgxEditorJSModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorJSModule -->\n\nPluginParagraphModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginService\n\nPluginService\n\nNgxEditorJSModule -->\n\nPluginService->NgxEditorJSModule\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nSimpleImageModule -->\n\nPluginSimpleImage->SimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app.routes.ts)\n                        \n                        \n                            DEFAULT_CONFIG   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'ngx-editorjs-demo',\n    pathMatch: 'full'\n  }\n]\n                        \n                    \n\n                \n                    \n                        The main application routes\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSConfig\n\n                        \n                    \n                    \n                        \n                            Default value : defaultConfig()\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    redirectTo: 'ngx-editorjs-demo/pages',\n    pathMatch: 'full'\n  },\n  {\n    path: 'ngx-editorjs-demo/pages',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/pages/editor',\n    component: EditorPageComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/pages/editor/:id',\n    component: EditorPageComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ngx-editorjs-readme.html":{"url":"additional-documentation/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS via a directive, component and service.\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm:\n```bash\n\nnpm install @tinynodes/ngx-editorjs\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. By default the editor is pre-configured with the standard Header and List tools provided by the EditorJS Team. To overwrite existing tools or add your own see documentation on adding then via Plugin Modules.\n```ts\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key | Description                                                                                       | Default     |\n| ----------------- | ------------------------------------------------------------------------------------------------- | ----------- |\n| autofocus       | Sets the EditorJS instance to autofocus on load                                                   | false     |\n| holder          | The element ID of the holder, this will set all instances in this module to use this as a default | editor-js |\n| initialBlock    | The default block type to use in the editor                                                       | paragraph |\n| data            | Initial data to load into the editor, this is an OutputData object from EditorJS                | undefined |\nAdding custom tools\nTo include tools in an Angular AOT-friendly way, inside your project, create a folder for your plugin and add an Injectable class with a plugin() method, and optional shortcut method for features that support it.\n```ts\nimport { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  plugin(): ToolSettings {\n    return Marker;\n  }\n  shortcut(): string {\n    return 'SHIFT+CTRL+M';\n  }\n}\n```\nThis allows Angular's AOT to include the editor component bundled within the application. Then export this via a module:\n```ts\nimport { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n```\nOnce you have created all your required modules, inside your Application or Feature module you need to provide an instance of UserPlugins using a factory function. Inside your module you can now add the following:\n```ts\nimport { NgModule } from '@angular/core';\nimport { NgxEditorJSModule, UserPlugins, PluginConfig } from '@tinynodes/ngx-editorjs';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginMarker } from '../plugins/marker/marker.plugin';\nexport function createTools(): PluginConfig {\n  return {\n    code: new PluginCode()\n  };\n}\n@NgModule({\n  imports: [NgxEditorJSModule, PluginMarker],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  exports: [PluginMarker]\n})\nexport class CustomModule {}\n```\nWhat's in the library\nNgxEditorJSDirective\nThis is the main directive which can be used on any element with the [ngxEditorJS]. It has one input which is blocks and this takes an array of EditorJS blocks.\nNgxEditorJSComponent\nThis component can be used in any Angular component using the  tag. Again this component can take a set of blocks, it also provides a holder input for overriding the ID.\nNgxEditorJSService\nThis service provides handling the life-cycle of the EditorJS instance, and exposes the underlying EditorJS instance.API - in future releases more of the API will be exposed via service methods to make controlling the container easier.\nLinks\n\nGitHub\nNPM\nAngular Demo\n\nTodo\n\n Add unit tests for all features (&#x1F614;)\n Improve documentation\n Provide better plugin support\n Provide enhancements for @ngrx/effects and other state management tools via pre-developed effects and services.\n Set up CD pipeline\n Provide more @Input on Directive/Component to make instance generation more configurable.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ngx-editorjs-changelog.html":{"url":"additional-documentation/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.1.1] - - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
