var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Block.html",[0,0.197,1,0.489]],["body/interfaces/Block.html",[0,0.382,1,0.992,2,0.808,3,0.145,4,0.145,5,0.133,6,0.137,7,0.225,8,1.841,9,0.391,10,2.596,11,0.844,12,0.303,13,0.684,14,1.664,15,2.119,16,2.029,17,1.077,18,1.491,19,0.984,20,3.574,21,2.303,22,2.853,23,0.013,24,0.309,25,1.554,26,3.002,27,1.617,28,1.841,29,2.621,30,2.621,31,1.554,32,1.554,33,2.621,34,1.06,35,2.748,36,2.748,37,1.337,38,1.017,39,2.506,40,1.899,41,2.646,42,3.326,43,2.506,44,3.051,45,2.506,46,1.686,47,1.841,48,1.29,49,2.506,50,2.966,51,2.506,52,1.278,53,2.748,54,1.93,55,2.065,56,1.93,57,1.927,58,1.93,59,1.93,60,1.93,61,1.93,62,2.506,63,1.686,64,1.841,65,0.005,66,0.008,67,0.005]],["title/interfaces/BlockData.html",[0,0.197,68,2.779]],["body/interfaces/BlockData.html",[0,0.343,1,0.909,2,0.832,3,0.15,4,0.15,5,0.137,6,0.14,7,0.23,9,0.659,11,0.738,12,0.299,15,1.801,16,2.09,17,1.591,18,1.371,19,1.43,23,0.013,24,0.319,31,2.259,34,0.572,38,2.348,52,1.295,55,1.811,57,1.197,65,0.006,66,0.008,67,0.006,68,4.424,69,2.205,70,3.682,71,0.388,72,1.813,73,0.438,74,3.514,75,3.514,76,1.197,77,3.298,78,2.618,79,3.298,80,2.205,81,3.918,82,2.674,83,1.377,84,1.813,85,2.49,86,1.482,87,2.205,88,4.843,89,2.128,90,4.073,91,4.073,92,2.098,93,1.988,94,2.205,95,2.674,96,2.098,97,2.337,98,3.298,99,2.674,100,2.337,101,1.601,102,2.49,103,2.674,104,1.119,105,1.428,106,3.298,107,2.09,108,2.674,109,1.601,110,2.447,111,1.601,112,0.981,113,2.49,114,1.988,115,2.205,116,2.807,117,2.337,118,1.377,119,2.337,120,2.841,121,2.841,122,1.897,123,1.377,124,0.305,125,2.174,126,1.329,127,1.831,128,2.49,129,1.329,130,2.49,131,2.674,132,2.337,133,2.674,134,1.666,135,2.49]],["title/interfaces/ChangeMap.html",[0,0.197,136,2.462]],["body/interfaces/ChangeMap.html",[0,0.359,1,0.727,2,1.056,3,0.19,4,0.19,5,0.174,6,0.164,7,0.27,9,0.511,12,0.313,16,2.652,17,1.716,18,1.435,19,1.286,23,0.013,24,0.305,48,1.686,65,0.007,66,0.009,67,0.007,71,0.509,76,1.519,92,2.825,136,3.66,137,3.159,138,5.483,139,4.517,140,3.3,141,2.547,142,1.921,143,4.671,144,1.88,145,2.203,146,2.215,147,2.523,148,2.798,149,2.656,150,2.114,151,3.3,152,2.798,153,2.798,154,2.547,155,2.652,156,2.964,157,2.459]],["title/interfaces/CreateEditorJSOptions.html",[0,0.197,158,3.242]],["body/interfaces/CreateEditorJSOptions.html",[0,0.258,2,1.22,3,0.219,4,0.219,5,0.201,6,0.145,7,0.239,9,0.59,11,0.73,12,0.272,13,1.033,14,1.726,18,1.394,23,0.013,24,0.219,48,2.629,52,1.58,65,0.008,66,0.01,67,0.008,71,0.403,76,1.755,93,4.114,96,2.334,110,2.849,111,3.312,116,3.618,154,2.505,158,5.284,159,5.396,160,5.396,161,3.299,162,5.398,163,5.532,164,3.031,165,3.752,166,4.865]],["title/interfaces/EditorJSChange.html",[0,0.197,156,2.608]],["body/interfaces/EditorJSChange.html",[0,0.358,1,0.856,2,1.046,3,0.188,4,0.188,5,0.172,6,0.125,7,0.205,9,0.507,11,0.609,12,0.312,13,0.886,14,1.566,17,1.678,18,1.378,23,0.013,24,0.304,48,2.447,65,0.007,66,0.009,67,0.007,71,0.506,76,1.506,92,2.763,136,2.773,137,3.13,138,5.363,139,4.457,140,2.5,141,2.272,142,1.455,144,1.863,145,2.183,146,2.542,147,2.5,148,2.773,149,2.64,150,2.095,151,3.28,152,2.773,153,2.773,154,2.869,155,3.449,156,3.855,157,3.087]],["title/interfaces/EditorJSClass.html",[0,0.197,167,2.462]],["body/interfaces/EditorJSClass.html",[0,0.356,1,0.456,2,0.867,3,0.156,4,0.156,5,0.143,6,0.103,7,0.17,9,0.42,11,0.617,12,0.329,13,0.734,14,1.378,15,1.056,18,1.476,22,2.236,23,0.013,24,0.309,34,0.596,40,1.811,52,1.219,55,1.336,57,1.247,65,0.008,66,0.008,67,0.006,71,0.46,72,1.889,73,0.456,76,1.247,92,1.336,96,1.863,109,1.667,118,2.62,120,1.809,121,1.809,125,2.222,127,1.872,141,1.435,142,2.202,144,2.153,146,2.003,149,1.667,150,1.736,154,1.435,157,1.544,161,2.634,164,2.42,165,3.032,167,3.203,168,2.434,169,2.634,170,0.898,171,1.863,172,2.755,173,3.353,174,2.888,175,1.334,176,3.394,177,3.617,178,3.036,179,2.523,180,2.434,181,2.434,182,1.976,183,3.512,184,2.82,185,3.783,186,2.594,187,2.434,188,2.236,189,2.434,190,2.071,191,1.736,192,2.297,193,2.297,194,1.889,195,2.297,196,2.297,197,2.297,198,2.297,199,2.434,200,3.203,201,2.178,202,2.434,203,2.297,204,2.178,205,2.594,206,2.434,207,2.594,208,2.003,209,3.203,210,3.394,211,2.297,212,2.297,213,2.434]],["title/interfaces/EditorJSInstanceConfig.html",[0,0.197,181,2.608]],["body/interfaces/EditorJSInstanceConfig.html",[0,0.345,1,0.445,2,0.847,3,0.152,4,0.152,5,0.139,6,0.101,7,0.166,9,0.41,11,0.661,12,0.323,13,0.717,14,1.356,15,1.031,18,1.416,22,2.199,23,0.013,24,0.307,34,0.582,40,1.547,52,1.464,55,1.833,57,1.218,65,0.008,66,0.008,67,0.006,71,0.454,72,1.845,73,0.445,76,1.218,92,1.305,96,2.297,109,1.628,118,2.823,120,1.767,121,1.767,125,2.194,127,1.848,141,1.401,142,2.183,144,2.117,146,1.977,149,1.628,150,2.38,154,1.967,157,1.508,161,2.591,164,2.38,165,3.718,167,2.244,168,2.377,169,1.845,170,0.816,171,1.305,172,1.93,173,2.866,174,2.023,175,0.934,176,2.377,177,2.533,178,2.127,179,3.276,180,3.338,181,3.338,182,2.71,183,3.561,184,2.977,185,3.994,186,3.557,187,4.184,188,2.199,189,4.184,190,2.023,191,1.695,192,2.244,193,2.244,194,1.845,195,2.244,196,2.244,197,2.244,198,2.244,199,2.377,200,3.151,201,2.127,202,2.377,203,2.244,204,2.127,205,2.533,206,2.377,207,2.533,208,1.977,209,3.151,210,3.338,211,2.244,212,2.244,213,2.377]],["title/interfaces/EditorJSMaterialForm.html",[0,0.197,214,3.587]],["body/interfaces/EditorJSMaterialForm.html",[0,0.288,2,0.525,3,0.094,4,0.094,5,0.086,6,0.062,7,0.103,9,0.254,10,1.685,11,0.233,12,0.245,14,0.947,18,0.873,23,0.013,24,0.186,40,1.526,52,0.728,57,1.957,65,0.003,66,0.006,67,0.003,71,0.515,73,0.276,100,2.896,102,2.485,111,3.345,112,0.979,118,1.374,123,1.707,125,0.837,127,0.705,142,1.155,145,1.095,151,4.155,154,1.374,155,1.317,162,1.569,164,2.065,170,0.455,172,2.351,175,0.917,182,3.099,185,1.253,188,1.908,190,1.253,191,1.05,194,1.143,214,4.936,215,1.83,216,3.247,217,1.685,218,1.83,219,2.669,220,4.094,221,5.656,222,2.32,223,2.32,224,2.32,225,3.086,226,1.685,227,2.485,228,2.883,229,3.207,230,3.207,231,3.675,232,2.201,233,2.332,234,3.982,235,3.675,236,2.025,237,5.19,238,1.317,239,1.83,240,3.099,241,2.896,242,1.685,243,1.569,244,2.674,245,2.025,246,2.025,247,2.464,248,1.83,249,2.464,250,2.32,251,4.541,252,2.669,253,0.705,254,2.025,255,2.087,256,0.9,257,2.32,258,2.025,259,1.83,260,2.025,261,1.569,262,1.473,263,1.569,264,2.025,265,1.685,266,2.025,267,0.618,268,3.769,269,1.685,270,1.569,271,2.152,272,2.32,273,3.8,274,2.32,275,3.314,276,2.32,277,3.675,278,2.32,279,3.465,280,2.537,281,3.675,282,3.319,283,2.32,284,2.32,285,6.537,286,4.578,287,3.055,288,2.32,289,3.675,290,2.32,291,2.32,292,4.973,293,2.32,294,4.563,295,2.32,296,2.32,297,2.32,298,3.675,299,2.32,300,3.675,301,2.32,302,2.32,303,2.32,304,2.32,305,6.017,306,2.32,307,3.675,308,2.32,309,2.32,310,2.32,311,5.501,312,2.32,313,3.675,314,2.32,315,2.025,316,2.669,317,2.32,318,2.025,319,2.591,320,2.32,321,2.669,322,3.675,323,2.32,324,2.32,325,1.83,326,2.32,327,2.32,328,2.32,329,3.675,330,2.32,331,2.32,332,2.32,333,3.675,334,3.675,335,1.143,336,2.32,337,2.32,338,2.32,339,2.201,340,2.669,341,3.675,342,2.32,343,2.32,344,1.374,345,1.685,346,2.669,347,3.086,348,2.32,349,1.253,350,1.685,351,1.685,352,1.253,353,3.982,354,2.32,355,1.685,356,4.563,357,4.563,358,4.563,359,3.982,360,2.32,361,3.675,362,1.685,363,2.32,364,1.83,365,2.025,366,2.025,367,1.473,368,2.025,369,2.025,370,1.569,371,2.32,372,1.685,373,2.32,374,2.32,375,2.025,376,2.32,377,2.32,378,2.32,379,2.32,380,2.32,381,2.32]],["title/interfaces/EditorMap.html",[0,0.197,148,2.462]],["body/interfaces/EditorMap.html",[0,0.359,1,0.729,2,1.062,3,0.191,4,0.191,5,0.175,6,0.165,7,0.271,9,0.514,12,0.305,16,2.667,17,1.717,18,1.437,19,1.293,23,0.013,24,0.305,48,1.695,65,0.007,66,0.009,67,0.007,71,0.51,76,1.528,92,2.828,136,2.813,137,3.176,138,5.488,139,4.52,140,2.537,141,2.293,142,1.477,144,1.89,145,2.215,146,2.22,147,3.312,148,3.673,149,2.666,150,2.125,151,3.312,152,2.813,153,2.813,154,2.553,155,2.667,156,2.981,157,2.468,382,4.697]],["title/classes/FixedHeader.html",[170,0.509,383,3.242]],["body/classes/FixedHeader.html",[1,0.54,3,0.185,4,0.185,5,0.169,6,0.181,7,0.297,9,0.497,11,0.673,12,0.302,13,0.869,15,2.173,17,0.961,19,1.65,23,0.013,24,0.244,34,0.931,38,1.291,40,1.763,44,3.4,52,1.187,65,0.007,66,0.009,67,0.007,71,0.502,73,0.54,83,1.698,86,1.827,89,1.476,104,1.823,105,1.761,110,1.698,112,1.597,124,0.376,125,1.638,126,2.164,127,1.823,129,2.164,170,0.742,171,2.089,173,2.607,175,1.132,179,2.828,208,1.476,232,3.591,253,1.823,256,2.326,267,1.209,279,2.235,280,1.827,282,2.141,344,1.698,383,5.297,384,3.07,385,3.961,386,2.607,387,5.996,388,4.73,389,4.539,390,2.413,391,5.233,392,4.539,393,5.86,394,5.233,395,1.65,396,1.898,397,3.961,398,3.297,399,3.581,400,3.297,401,3.961,402,5.233,403,3.961,404,3.961,405,3.961,406,3.961,407,3.961,408,3.961,409,1.761,410,2.054,411,2.054,412,3.961,413,1.973,414,2.326,415,2.881]],["title/interfaces/Header.html",[0,0.197,44,1.718]],["body/interfaces/Header.html",[0,0.38,1,0.986,2,0.819,3,0.147,4,0.147,5,0.135,6,0.098,7,0.16,8,1.867,9,0.397,11,0.835,12,0.29,13,0.694,14,1.539,15,2.017,17,0.767,18,1.478,21,1.64,22,2.497,23,0.013,24,0.31,25,1.576,26,3.013,27,1.64,28,1.867,29,2.648,30,2.648,31,1.576,32,1.576,33,2.648,34,1.107,35,2.776,36,2.776,37,1.356,38,1.031,39,2.531,40,1.911,41,2.661,42,3.856,43,2.531,44,3.265,45,3.509,46,2.424,47,2.648,48,2.155,49,2.531,50,2.982,51,2.531,52,1.286,53,2.776,54,1.958,55,2.081,56,1.958,57,1.942,58,1.958,59,1.958,60,1.958,61,1.958,62,2.531,63,1.71,64,1.867,65,0.005,66,0.008,67,0.005]],["title/interfaces/HeaderBlock.html",[0,0.197,49,2.024]],["body/interfaces/HeaderBlock.html",[0,0.384,1,0.993,2,0.836,3,0.15,4,0.15,5,0.137,6,0.1,7,0.164,8,1.905,9,0.405,11,0.839,12,0.3,13,0.708,14,1.556,15,1.974,17,0.782,18,1.44,21,1.673,22,2.524,23,0.013,24,0.311,25,1.607,26,3.029,27,1.673,28,1.905,29,2.685,30,2.685,31,1.607,32,1.607,33,2.685,34,1.073,35,2.815,36,2.815,37,1.383,38,1.052,39,2.567,40,2.032,41,2.681,42,3.377,43,2.567,44,3.146,45,2.567,46,1.744,47,1.905,48,1.334,49,2.973,50,3.004,51,2.567,52,1.298,53,2.815,54,1.997,55,2.103,56,1.997,57,1.963,58,1.997,59,1.997,60,1.997,61,1.997,62,2.567,63,1.744,64,1.905,65,0.006,66,0.008,67,0.006]],["title/interfaces/Image.html",[0,0.197,50,1.787]],["body/interfaces/Image.html",[0,0.377,1,0.98,2,0.779,3,0.14,4,0.14,5,0.128,6,0.093,7,0.152,8,1.775,9,0.377,11,0.837,12,0.285,13,0.659,14,1.496,15,1.987,17,0.729,18,1.495,21,1.559,22,2.427,23,0.013,24,0.306,25,1.498,26,2.973,27,1.559,28,1.775,29,2.553,30,2.553,31,1.498,32,1.498,33,2.553,34,1.088,35,2.677,36,2.677,37,1.289,38,0.98,39,2.441,40,1.867,41,2.609,42,3.271,43,2.441,44,3.088,45,2.441,46,1.625,47,1.775,48,1.243,49,2.441,50,3.211,51,3.45,52,1.592,53,3.783,54,2.677,55,2.441,56,3.429,57,2.447,58,2.677,59,3.429,60,2.677,61,3.429,62,2.441,63,1.625,64,1.775,65,0.005,66,0.007,67,0.005]],["title/interfaces/ImageBlock.html",[0,0.197,62,2.024]],["body/interfaces/ImageBlock.html",[0,0.384,1,0.993,2,0.836,3,0.15,4,0.15,5,0.137,6,0.1,7,0.164,8,1.905,9,0.405,11,0.839,12,0.3,13,0.708,14,1.556,15,1.974,17,0.782,18,1.44,21,1.673,22,2.524,23,0.013,24,0.311,25,1.607,26,3.029,27,1.673,28,1.905,29,2.685,30,2.685,31,1.607,32,1.607,33,2.685,34,1.073,35,2.815,36,2.815,37,1.383,38,1.052,39,2.567,40,2.032,41,2.681,42,3.377,43,2.567,44,3.081,45,2.567,46,1.744,47,1.905,48,1.334,49,2.567,50,3.117,51,2.567,52,1.298,53,2.815,54,1.997,55,2.103,56,1.997,57,1.963,58,1.997,59,1.997,60,1.997,61,1.997,62,2.973,63,1.744,64,1.905,65,0.006,66,0.008,67,0.006]],["title/interfaces/InjectorApiCallOptions.html",[0,0.197,209,2.462]],["body/interfaces/InjectorApiCallOptions.html",[0,0.345,1,0.449,2,0.853,3,0.153,4,0.153,5,0.14,6,0.102,7,0.167,9,0.413,11,0.663,12,0.326,13,0.722,14,1.363,15,1.039,18,1.532,22,2.211,23,0.013,24,0.308,34,0.586,40,1.555,52,1.429,55,1.315,57,1.227,65,0.008,66,0.008,67,0.006,71,0.456,72,1.858,73,0.449,76,1.227,92,1.315,96,1.842,109,2.299,118,2.604,120,1.78,121,1.78,125,2.203,127,1.856,141,1.411,142,2.269,144,2.128,146,1.985,149,1.64,150,1.708,154,1.411,157,1.519,161,3.006,164,2.393,165,3.006,167,2.26,168,2.395,169,1.858,170,0.819,171,1.315,172,1.944,173,2.875,174,2.038,175,0.941,176,2.395,177,2.552,178,2.143,179,1.78,180,2.395,181,2.395,182,1.944,183,3.713,184,3.094,185,4.003,186,2.552,187,2.395,188,2.211,189,2.395,190,2.038,191,1.708,192,2.26,193,2.26,194,1.858,195,2.26,196,2.26,197,2.26,198,2.26,199,2.395,200,3.167,201,2.143,202,2.395,203,2.26,204,2.143,205,2.552,206,2.395,207,3.576,208,2.265,209,3.656,210,4.581,211,2.26,212,2.26,213,2.395]],["title/interfaces/InjectorApiCallResponse.html",[0,0.197,212,2.462]],["body/interfaces/InjectorApiCallResponse.html",[0,0.35,1,0.467,2,0.887,3,0.16,4,0.16,5,0.146,6,0.106,7,0.174,9,0.429,11,0.545,12,0.325,13,0.751,14,1.4,15,1.08,18,1.434,22,2.812,23,0.013,24,0.311,34,0.609,40,1.832,52,1.234,55,1.367,57,1.276,65,0.011,66,0.008,67,0.006,71,0.466,72,1.932,73,0.467,76,1.276,92,1.367,96,1.893,109,1.705,118,2.642,120,1.851,121,1.851,125,2.249,127,1.895,141,1.467,142,2.115,144,2.187,146,2.027,149,1.705,150,1.775,154,1.467,157,1.579,161,2.675,164,2.458,165,3.069,167,2.35,168,2.49,169,1.932,170,0.833,171,1.367,172,2.021,173,2.924,174,2.119,175,0.979,176,2.49,177,2.653,178,2.228,179,1.851,180,2.49,181,2.49,182,2.021,183,3.534,184,2.843,185,3.815,186,2.653,187,2.49,188,2.271,189,2.49,190,2.119,191,1.775,192,2.35,193,2.35,194,1.932,195,2.35,196,2.35,197,2.35,198,2.35,199,2.49,200,3.254,201,2.228,202,2.49,203,2.35,204,2.228,205,2.653,206,2.49,207,2.653,208,2.188,209,3.733,210,3.448,211,3.254,212,3.254,213,2.49]],["title/interfaces/InjectorMethodOption.html",[0,0.197,203,2.462]],["body/interfaces/InjectorMethodOption.html",[0,0.344,1,0.444,2,0.843,3,0.152,4,0.152,5,0.139,6,0.1,7,0.165,9,0.408,11,0.695,12,0.325,13,0.714,14,1.352,15,1.811,18,1.467,22,2.193,23,0.013,24,0.307,34,0.579,40,1.542,52,1.555,55,1.3,57,1.973,65,0.008,66,0.008,67,0.006,71,0.453,72,1.837,73,0.444,76,1.213,92,1.3,96,1.827,109,1.621,118,2.867,120,1.759,121,1.759,125,2.189,127,1.844,141,1.961,142,2.069,144,2.649,146,2.14,149,1.621,150,1.688,154,1.395,157,1.501,161,2.987,164,2.373,165,2.987,167,2.234,168,2.367,169,1.837,170,0.815,171,1.3,172,1.921,173,2.861,174,2.014,175,0.93,176,2.367,177,2.522,178,2.118,179,1.759,180,2.367,181,2.367,182,1.921,183,3.704,184,2.894,185,3.884,186,2.522,187,2.367,188,2.193,189,2.367,190,2.014,191,1.688,192,2.234,193,2.234,194,1.837,195,2.234,196,2.234,197,2.234,198,2.234,199,2.367,200,3.633,201,2.118,202,2.367,203,3.141,204,2.978,205,3.546,206,4.176,207,2.522,208,1.973,209,3.141,210,3.328,211,2.234,212,2.234,213,2.367]],["title/interfaces/List.html",[0,0.197,26,1.654]],["body/interfaces/List.html",[0,0.38,1,0.986,2,0.819,3,0.147,4,0.147,5,0.135,6,0.098,7,0.16,8,1.867,9,0.397,11,0.837,12,0.29,13,0.694,14,1.539,15,2.017,17,0.767,18,1.433,21,1.64,22,2.979,23,0.013,24,0.31,25,1.576,26,3.174,27,1.64,28,1.867,29,2.648,30,2.648,31,1.576,32,1.576,33,3.347,34,1.107,35,3.848,36,3.848,37,1.356,38,1.031,39,2.531,40,1.911,41,2.661,42,3.347,43,2.531,44,3.063,45,2.531,46,1.71,47,1.867,48,1.308,49,2.531,50,2.982,51,2.531,52,1.286,53,2.776,54,1.958,55,2.081,56,1.958,57,1.942,58,1.958,59,1.958,60,1.958,61,1.958,62,2.531,63,1.71,64,1.867,65,0.005,66,0.008,67,0.005]],["title/interfaces/ListBlock.html",[0,0.197,39,2.024]],["body/interfaces/ListBlock.html",[0,0.381,1,0.992,2,0.831,3,0.15,4,0.15,5,0.137,6,0.099,7,0.163,8,1.894,9,0.402,11,0.838,12,0.306,13,0.704,14,1.551,15,1.97,17,0.778,18,1.438,21,1.664,22,2.516,23,0.013,24,0.311,25,1.598,26,3.117,27,1.664,28,1.894,29,2.674,30,2.674,31,1.598,32,1.598,33,2.674,34,1.112,35,2.804,36,2.804,37,1.942,38,1.477,39,2.964,40,2.028,41,2.675,42,3.368,43,2.557,44,3.076,45,2.557,46,1.734,47,1.894,48,1.327,49,2.557,50,2.998,51,2.557,52,1.294,53,2.804,54,1.986,55,2.097,56,1.986,57,1.957,58,1.986,59,1.986,60,1.986,61,1.986,62,2.557,63,1.734,64,1.894,65,0.006,66,0.008,67,0.006]],["title/classes/MockEditorJS.html",[170,0.509,416,3.242]],["body/classes/MockEditorJS.html",[3,0.196,4,0.196,5,0.179,6,0.212,7,0.349,11,0.778,13,0.923,14,1.607,18,1.194,19,2.134,23,0.013,24,0.254,52,0.954,65,0.007,66,0.009,67,0.007,71,0.36,104,1.465,110,2.585,141,1.803,146,2.377,157,1.94,170,0.772,173,3.177,179,2.273,188,2.015,280,2.51,344,2.332,384,3.259,388,3.802,390,1.94,416,4.919,417,4.206,418,5.02,419,5.02,420,5.453,421,3.765,422,6.236,423,4.82,424,4.82,425,5.02,426,4.82,427,4.82,428,4.206,429,3.802,430,3.541,431,4.206,432,3.802,433,4.206,434,4.919,435,4.206,436,5.442,437,4.206,438,3.802,439,3.259,440,4.206,441,3.259,442,4.206]],["title/injectables/MockNgZone.html",[443,1.86,444,3.587]],["body/injectables/MockNgZone.html",[3,0.197,4,0.197,5,0.18,6,0.209,7,0.343,9,0.53,11,0.695,13,0.928,14,1.613,19,2.087,23,0.013,24,0.197,34,0.753,40,1.84,52,1.239,65,0.007,66,0.009,67,0.007,71,0.362,73,0.576,104,1.903,107,2.752,127,1.903,164,2.193,170,0.6,171,2.415,179,3.663,188,2.617,260,5.462,279,2.387,280,2.519,344,2.592,345,3.52,386,2.721,390,2.519,443,2.832,444,5.462,445,2.903,446,7.766,447,6.778,448,4.847,449,6.258,450,6.618,451,6.931,452,4.937,453,6.258,454,7.325,455,6.258,456,6.258,457,4.847,458,7.325,459,6.258,460,4.847,461,4.847,462,6.049,463,6.258,464,4.847,465,4.847]],["title/classes/MockPlugin.html",[170,0.509,429,3.242]],["body/classes/MockPlugin.html",[3,0.213,4,0.213,5,0.194,6,0.193,7,0.318,13,1.001,18,1.001,19,1.808,23,0.013,24,0.267,65,0.008,66,0.01,67,0.008,71,0.391,110,2.457,141,1.957,146,2.137,157,2.106,170,0.813,171,1.823,173,2.856,188,2.187,280,2.645,344,2.686,384,3.538,386,2.856,416,4.127,417,4.566,418,3.799,419,3.799,420,4.127,421,3.385,425,4.772,428,4.566,429,5.183,430,4.407,431,4.566,432,4.127,433,4.566,434,5.183,435,4.566,436,5.734,437,4.566,438,4.127,439,3.538,440,4.566,441,3.538,442,4.566,466,5.231,467,5.231]],["title/modules/NgxEditorJSComponentModule.html",[124,0.341,468,2.462]],["body/modules/NgxEditorJSComponentModule.html",[3,0.151,4,0.151,5,0.138,6,0.14,7,0.231,9,0.571,10,4.388,11,0.371,12,0.267,19,1.019,23,0.013,24,0.212,37,1.951,52,1.459,65,0.006,66,0.008,67,0.006,71,0.586,73,0.44,76,1.204,96,2.285,101,2.851,104,1.126,109,2.851,110,2.586,111,2.851,124,0.501,170,0.646,171,1.29,172,2.688,179,2.461,184,2.1,198,3.619,201,2.963,238,2.103,244,4.139,245,3.232,246,3.232,247,4.065,248,2.921,249,4.389,253,2.102,267,1.911,280,2.432,282,1.747,344,1.385,386,1.61,390,1.491,395,1.663,414,2.343,421,3.379,468,4.813,469,0.986,470,1.491,471,1.491,472,2.85,473,1.747,474,2.526,475,3.232,476,3.232,477,3.232,478,3.232,479,3.232,480,4.766,481,2.461,482,1.61,483,1.61,484,3.232,485,3.125,486,5.218,487,4.553,488,4.766,489,2.921,490,3.703,491,3.529,492,2.688,493,3.125,494,5.174,495,2.35,496,4.766,497,4.116,498,3.311,499,2.218,500,4.554,501,3.703,502,3.529,503,3.789,504,3.232,505,4.554,506,3.703,507,2.504,508,3.232,509,1.908,510,4.554,511,4.554,512,3.232,513,2.921,514,2.921]],["title/interfaces/NgxEditorJSConfig.html",[0,0.197,515,2.985]],["body/interfaces/NgxEditorJSConfig.html",[0,0.255,1,0.862,2,0.863,3,0.155,4,0.155,5,0.142,6,0.103,7,0.169,9,0.418,11,0.761,12,0.308,13,0.731,14,1.374,15,1.994,18,1.475,23,0.013,24,0.284,34,1.125,41,2.068,48,2.217,52,1.615,57,2.356,65,0.006,66,0.008,67,0.006,71,0.398,72,1.88,73,0.454,76,1.242,96,2.524,104,1.621,110,2.297,111,2.318,112,1.42,117,3.383,120,1.801,121,2.515,122,3.425,125,2.217,127,1.867,140,2.879,142,1.931,144,2.676,161,1.88,164,2.412,165,2.625,169,1.88,183,3.136,184,1.537,191,1.728,204,2.168,271,2.515,286,3.872,347,3.605,349,2.879,421,1.967,430,3.027,485,2.287,487,2.423,502,2.582,507,2.582,515,4.828,516,3.012,517,5.245,518,5.245,519,5.245,520,5.245,521,5.245,522,5.715,523,4.653,524,3.872,525,3.383,526,3.383,527,4.206,528,4.206,529,4.653,530,4.653,531,3.605,532,4.653,533,3.872,534,3.872,535,4.206,536,5.245,537,2.582,538,2.773,539,3.012,540,3.012,541,2.773,542,3.012,543,3.012,544,3.012]],["title/components/NgxEditorJSDemoHomeComponent.html",[228,1.718,545,2.334]],["body/components/NgxEditorJSDemoHomeComponent.html",[3,0.173,4,0.173,5,0.158,6,0.115,7,0.188,12,0.321,23,0.012,24,0.173,27,1.925,63,2.708,65,0.006,66,0.009,67,0.006,71,0.318,73,0.506,101,2.496,104,1.976,116,3.758,118,2.603,123,2.95,124,0.577,142,1.805,170,0.527,175,1.432,190,3.758,208,1.867,216,3.585,228,3.298,240,2.191,244,2.191,249,2.297,251,3.951,255,2.415,261,3.883,262,5.059,263,3.883,265,4.17,335,3.427,339,2.548,349,3.101,352,4.203,471,1.712,492,2.958,545,3.951,546,3.089,547,2.548,548,3.089,549,4.254,550,3.713,551,3.713,552,2.877,553,4.404,554,7.653,555,5.672,556,5.011,557,3.388,558,5.011,559,6.073,560,4.17,561,4.17,562,4.529,563,5.742,564,4.17,565,3.924,566,5.054,567,5.742,568,5.742,569,3.883,570,2.191,571,5.054,572,3.089,573,3.089,574,3.089,575,3.089,576,2.548,577,2.717,578,3.089,579,2.548,580,2.297,581,3.089,582,2.548,583,2.095,584,3.089,585,2.415,586,1.849,587,2.877,588,2.877,589,3.089]],["title/modules/NgxEditorJSDemoMaterialModule.html",[124,0.341,590,2.608]],["body/modules/NgxEditorJSDemoMaterialModule.html",[3,0.216,4,0.216,5,0.197,6,0.143,7,0.235,12,0.27,23,0.013,24,0.216,26,2.136,65,0.008,66,0.01,67,0.008,71,0.622,73,0.631,170,0.657,239,4.187,240,2.734,395,1.825,469,1.413,474,2.219,509,2.734,590,4.207,591,4.187,592,5.307,593,7.23,594,5.307,595,6.31,596,5.307,597,6.31,598,5.307,599,6.31,600,5.307,601,7.23,602,5.307,603,6.31,604,7.23,605,5.307,606,6.31,607,5.307,608,6.31,609,4.631,610,7.23,611,5.307]],["title/directives/NgxEditorJSDirective.html",[244,2.117,570,2.117]],["body/directives/NgxEditorJSDirective.html",[1,0.796,3,0.062,4,0.062,5,0.057,6,0.201,7,0.33,9,0.44,11,0.727,12,0.305,13,0.292,15,0.716,18,1.35,19,2.04,23,0.013,24,0.062,25,1.131,32,2.135,34,0.624,37,1.272,38,0.74,41,1.009,42,2.07,48,1.993,52,0.673,55,1.827,57,1.796,65,0.002,66,0.004,67,0.002,71,0.392,73,0.181,76,0.496,84,1.979,93,2.17,96,1.571,97,1.651,101,1.478,104,1.371,109,1.131,110,1.837,111,2.954,112,1.07,116,1.405,118,2.413,122,2.07,123,0.973,125,0.939,127,1.815,139,0.824,140,1.405,141,1.503,142,2.28,144,0.614,145,0.719,146,1.942,149,0.663,150,1.818,151,1.837,154,0.973,157,1.815,162,3.735,163,4.185,165,2.418,170,0.189,171,1.711,173,0.663,174,2.17,175,0.649,183,2.977,184,1.047,188,0.638,194,1.979,195,0.914,225,2.3,227,2.718,228,2.639,232,3.685,233,2.55,241,2.158,242,1.108,243,1.031,244,1.34,247,2.983,248,1.203,261,1.759,262,1.651,270,1.759,271,2.605,273,3.916,275,1.889,279,2.94,280,1.977,282,2.127,286,2.47,287,2.17,292,2.052,311,2.27,319,2.282,321,1.889,325,2.052,335,1.281,340,3.275,344,0.973,346,2.918,347,1.759,349,3.67,352,2.17,353,2.968,355,2.918,362,1.108,364,2.052,367,1.651,368,2.27,370,1.031,372,2.918,375,2.968,386,1.131,390,1.369,418,1.889,419,2.918,425,2.918,430,1.477,438,2.052,441,1.031,462,5.368,493,1.558,495,0.968,517,4.136,518,3.17,519,3.558,520,3.558,521,3.558,522,4.136,525,1.651,526,3.116,527,2.052,531,1.759,533,1.889,536,3.558,547,1.558,552,1.031,564,1.889,565,0.824,566,1.889,569,1.759,570,3.593,587,1.031,588,1.759,612,7.456,613,1.525,614,2.052,615,3.17,616,2.27,617,2.968,618,4.546,619,2.601,620,3.507,621,4.019,622,2.052,623,2.601,624,2.683,625,3.507,626,3.401,627,3.401,628,2.601,629,1.889,630,3.029,631,5.03,632,1.525,633,4.019,634,2.47,635,1.525,636,3.401,637,4.019,638,1.525,639,2.052,640,1.525,641,2.601,642,2.27,643,2.052,644,2.601,645,2.27,646,2.601,647,2.601,648,2.052,649,2.601,650,1.525,651,2.27,652,2.27,653,4.357,654,1.525,655,1.525,656,2.918,657,2.27,658,1.525,659,2.601,660,1.525,661,1.525,662,2.601,663,2.601,664,2.601,665,1.525,666,2.601,667,1.525,668,1.525,669,5.97,670,2.27,671,1.525,672,2.27,673,1.525,674,1.525,675,1.525,676,1.525,677,2.601,678,1.525,679,1.525,680,1.889,681,3.558,682,2.601,683,2.601,684,4.019,685,1.525,686,2.27,687,2.601,688,3.17,689,1.889,690,2.27,691,2.601,692,2.27,693,2.27,694,2.601,695,2.601,696,3.05,697,1.525,698,2.27,699,1.331,700,1.525,701,2.47,702,1.525,703,1.525,704,1.525,705,1.525,706,1.525,707,1.525,708,1.525,709,2.27,710,1.525,711,1.525,712,1.331,713,1.331,714,1.525,715,1.331,716,1.525,717,1.525,718,1.525,719,1.525,720,2.918,721,1.525,722,4.91,723,1.525,724,1.331,725,1.525,726,2.968,727,1.525,728,1.525,729,1.525,730,1.525,731,1.525,732,1.525,733,1.525,734,1.525,735,1.525,736,3.558,737,1.525,738,1.525,739,1.525,740,1.331,741,1.525,742,1.525,743,1.525,744,2.601,745,1.525,746,1.331,747,1.525,748,1.525,749,3.401,750,1.525,751,1.525,752,1.203,753,1.525,754,1.525,755,1.525,756,1.525,757,1.331,758,1.331,759,1.525,760,1.525,761,1.525,762,1.525,763,1.525,764,1.525,765,1.525,766,1.525,767,1.525,768,1.525]],["title/modules/NgxEditorJSMatFieldModule.html",[124,0.341,769,2.608]],["body/modules/NgxEditorJSMatFieldModule.html",[3,0.173,4,0.173,5,0.158,6,0.154,7,0.254,9,0.628,11,0.426,12,0.173,19,1.169,23,0.013,24,0.173,37,2.145,52,1.514,65,0.006,66,0.009,67,0.006,71,0.559,73,0.505,96,2.423,101,3.023,104,1.291,109,3.023,110,2.601,124,0.602,170,0.526,171,1.48,172,2.954,175,1.431,182,2.954,184,2.309,215,4.524,216,3.741,217,4.165,239,3.35,240,2.188,251,3.256,252,4.716,253,1.291,255,4.697,267,1.528,280,1.709,282,2.003,344,1.588,352,3.097,386,1.846,390,1.709,395,1.787,414,1.647,421,3.582,468,4.35,469,1.131,470,1.709,471,1.709,472,3.063,473,2.003,474,2.715,481,2.705,482,1.846,483,1.846,487,3.64,488,3.35,489,3.35,491,3.879,492,2.954,493,3.435,494,5.486,495,2.695,496,5.123,497,4.524,503,3.084,509,2.188,513,3.35,514,3.35,603,5.005,608,5.005,609,3.706,769,5.004,770,3.706,771,3.706,772,3.706,773,3.706,774,3.706,775,5.005,776,5.735,777,3.64,778,4.247,779,4.247,780,3.706]],["title/modules/NgxEditorJSModule.html",[124,0.341,781,2.779]],["body/modules/NgxEditorJSModule.html",[3,0.17,4,0.17,5,0.155,6,0.153,7,0.251,9,0.62,11,0.418,12,0.262,19,1.148,23,0.013,24,0.17,34,0.88,37,2.119,52,1.555,65,0.006,66,0.009,67,0.006,71,0.556,73,0.496,96,2.405,101,3.368,104,1.268,109,3.001,110,2.784,124,0.599,142,1.781,170,0.516,171,1.453,172,2.919,175,1.413,184,2.778,216,2.919,217,3.029,251,3.217,253,1.956,267,1.509,280,1.679,282,1.968,335,2.79,344,1.56,352,3.06,386,1.813,390,1.679,395,1.771,414,1.618,421,3.835,468,3.854,469,1.111,470,1.679,471,1.679,472,1.968,473,1.968,474,2.69,481,2.673,482,1.813,483,1.813,487,3.596,488,5.076,489,3.291,491,4.668,492,3.556,493,3.394,494,5.445,495,2.647,496,5.076,497,4.47,503,3.029,509,2.919,513,3.291,514,3.291,538,4.115,557,2.564,570,2.919,630,2.79,769,5.126,781,5.312,782,3.64,783,4.171,784,3.64,785,5.666,786,4.171,787,4.115,788,5.666,789,4.171,790,4.171,791,4.171,792,4.171,793,4.171]],["title/interfaces/NgxEditorJSModuleConfig.html",[0,0.197,421,2.117]],["body/interfaces/NgxEditorJSModuleConfig.html",[0,0.283,1,0.791,2,1.007,3,0.181,4,0.181,5,0.165,6,0.12,7,0.197,9,0.487,11,0.447,12,0.327,13,0.852,14,1.526,15,1.629,18,1.273,23,0.013,24,0.3,34,1.033,41,1.727,48,1.607,52,1.172,57,1.925,65,0.007,66,0.009,67,0.007,71,0.442,72,2.193,73,0.53,76,1.448,96,2.643,104,1.354,110,2.214,111,1.936,112,1.186,117,2.826,120,2.1,121,2.792,122,3.05,125,2.4,127,2.022,140,2.405,142,1.861,144,2.383,161,2.915,164,2.015,165,3.491,169,2.193,183,2.1,184,2.383,191,2.015,204,3.361,271,2.1,286,3.234,347,3.011,349,2.405,421,3.05,430,2.528,485,2.667,487,2.826,502,3.011,507,3.011,515,4.83,516,3.513,517,3.513,518,3.513,519,3.513,520,3.513,521,3.513,522,4.67,523,3.886,524,3.234,525,2.826,526,2.826,527,3.513,528,3.513,529,3.886,530,3.886,531,3.011,532,3.886,533,3.234,534,3.234,535,3.513,536,4.67,537,4.003,538,4.299,539,3.513,540,3.513,541,3.234,542,3.513,543,3.513,544,3.513]],["title/injectables/NgxEditorJSPluginService.html",[443,1.86,794,2.462]],["body/injectables/NgxEditorJSPluginService.html",[3,0.122,4,0.122,5,0.111,6,0.186,7,0.305,9,0.649,11,0.637,12,0.305,13,0.572,17,1.64,18,1.469,19,1.833,23,0.013,24,0.122,26,2.856,34,0.83,37,2.219,38,2.277,52,1.366,65,0.004,66,0.007,67,0.004,71,0.334,73,0.355,78,3.368,81,1.697,84,2.199,89,1.453,92,2.473,93,3.597,94,3.203,96,2.321,98,4.227,104,1.93,107,3.368,112,0.796,118,1.67,125,1.079,132,4.871,134,1.353,163,3.243,166,3.243,169,2.921,170,0.553,171,2.528,267,1.189,273,4.219,279,2.633,280,2.973,282,2.995,287,1.614,319,1.697,344,1.118,386,1.941,390,2.555,395,1.229,396,1.25,443,2.021,445,1.79,491,3.616,492,2.301,537,4.011,630,2.199,639,3.523,656,3.243,688,3.523,777,3.764,794,3.553,795,6.024,796,2.989,797,3.898,798,4.666,799,4.466,800,5.932,801,4.466,802,4.466,803,4.466,804,2.989,805,2.989,806,4.466,807,2.989,808,2.989,809,3.898,810,4.466,811,2.989,812,5.932,813,5.177,814,4.466,815,4.466,816,2.989,817,4.466,818,3.898,819,2.989,820,2.989,821,2.358,822,2.989,823,2.989,824,2.608,825,2.989,826,2.989,827,2.989,828,4.466,829,4.466,830,2.989,831,4.466,832,4.466,833,2.989,834,2.608,835,2.989,836,4.466,837,2.989,838,4.466,839,2.989,840,2.989,841,2.989,842,2.989,843,4.466,844,2.989]],["title/modules/NgxEditorJSPluginServiceModule.html",[124,0.341,845,2.779]],["body/modules/NgxEditorJSPluginServiceModule.html",[3,0.22,4,0.22,5,0.201,6,0.146,7,0.239,12,0.22,23,0.013,24,0.22,38,1.538,65,0.008,66,0.01,67,0.008,71,0.569,73,0.643,112,1.786,119,4.257,124,0.448,126,2.631,129,2.631,134,3.035,170,0.669,253,2.217,256,2.601,267,1.942,395,1.846,396,2.261,414,2.601,469,1.44,470,2.177,471,2.177,472,2.551,473,2.551,474,2.261,481,3.164,482,2.351,483,2.351,510,4.719,511,4.719,794,4.784,795,4.719,845,5.401,846,4.719,847,4.719,848,5.407,849,3.808,850,3.239,851,5.407]],["title/injectables/NgxEditorJSService.html",[247,2.22,443,1.86]],["body/injectables/NgxEditorJSService.html",[3,0.045,4,0.045,5,0.041,6,0.155,7,0.255,9,0.613,11,0.561,12,0.32,13,0.213,15,0.734,18,0.784,19,1.541,21,0.895,22,0.466,23,0.013,24,0.045,32,0.86,34,0.414,37,1.533,38,0.563,52,1.169,65,0.009,66,0.003,67,0.002,71,0.373,73,0.132,76,0.362,78,1.929,92,1.29,93,1.746,94,1.185,96,1.126,97,1.255,101,0.86,104,1.751,107,3.99,109,1.16,110,1.533,111,2.355,112,0.527,113,1.338,116,2.213,118,2.608,119,2.051,125,1.479,127,1.836,136,1.185,139,1.999,141,2.094,142,2.134,144,1.49,145,0.525,146,1.623,147,2.695,148,1.598,149,2.057,150,1.463,151,2.397,152,1.185,153,1.185,154,2.259,157,0.796,158,2.55,161,3.828,163,0.809,164,0.504,165,1.314,167,1.936,169,1.592,170,0.33,171,2.147,173,0.86,174,1.068,175,0.493,178,0.632,179,0.933,182,1.019,183,2.849,184,3.122,185,3.823,187,1.255,188,1.548,189,1.255,191,2.008,192,0.667,193,0.667,194,0.974,196,0.667,197,0.667,201,0.632,203,4.323,208,2.333,209,1.936,210,2.349,211,1.185,212,1.598,213,2.349,219,1.437,233,0.707,241,2.349,243,0.753,247,1.068,253,0.339,271,0.933,273,3.941,279,2.018,280,2.253,282,3.132,287,3.328,316,1.437,319,2.962,325,2.55,339,1.185,344,0.74,350,1.437,351,2.347,352,3.023,355,1.938,359,1.726,362,1.437,367,2.349,369,1.726,370,3.001,386,1.929,390,2.253,400,2.347,418,3.223,419,3.788,420,0.879,421,1.665,425,2.976,430,1.515,439,3.2,441,0.753,443,0.895,445,0.667,447,4.13,450,3.577,452,1.561,491,0.753,492,2.111,493,1.598,502,0.753,503,0.809,504,0.972,525,2.051,535,2.55,537,4.242,538,1.437,547,1.185,557,0.504,618,2.55,624,0.879,625,3.873,630,2.569,639,0.879,643,3.733,648,1.561,656,0.809,680,3.788,681,3.233,688,1.561,698,1.726,699,1.726,701,4.877,712,0.972,713,2.329,726,3.873,746,0.972,752,3.936,757,0.972,758,0.972,777,1.255,787,2.347,794,1.936,798,0.972,813,0.972,818,0.972,824,0.972,834,5.475,852,1.114,853,2.329,854,1.978,855,4.098,856,1.561,857,1.978,858,1.561,859,1.978,860,1.978,861,3.501,862,3.702,863,3.702,864,1.978,865,1.978,866,1.978,867,1.114,868,4.098,869,1.114,870,1.978,871,1.978,872,1.114,873,1.978,874,1.726,875,3.232,876,2.821,877,1.978,878,1.726,879,1.726,880,3.232,881,1.978,882,1.114,883,6.04,884,6.04,885,3.618,886,1.978,887,1.114,888,1.978,889,1.114,890,1.978,891,1.978,892,1.114,893,1.978,894,1.978,895,1.114,896,1.978,897,1.114,898,1.978,899,1.114,900,1.978,901,1.114,902,1.978,903,1.114,904,1.561,905,1.978,906,1.114,907,1.978,908,1.561,909,1.726,910,1.978,911,1.978,912,0.972,913,0.972,914,0.879,915,0.809,916,0.972,917,1.114,918,1.114,919,1.114,920,1.114,921,1.978,922,1.114,923,1.114,924,1.114,925,1.114,926,1.114,927,0.972,928,1.114,929,1.114,930,1.114,931,1.978,932,1.561,933,1.978,934,1.114,935,3.232,936,4.098,937,1.114,938,2.668,939,1.114,940,3.232,941,1.114,942,1.978,943,1.114,944,1.114,945,1.978,946,1.114,947,1.978,948,1.114,949,1.114,950,1.114,951,1.978,952,1.114,953,1.114,954,0.972,955,1.114,956,2.821,957,1.114,958,2.668,959,1.114,960,1.114,961,1.114,962,1.114,963,4.098,964,1.114,965,1.114,966,1.978,967,2.668,968,3.232,969,1.561,970,1.114,971,1.114,972,1.114,973,1.978,974,1.978,975,1.978,976,1.978,977,1.978,978,1.114,979,1.114,980,1.978,981,1.114,982,1.114,983,3.232,984,0.879,985,1.114,986,3.232,987,1.114,988,3.232,989,1.114,990,1.114,991,2.668,992,2.668,993,1.978,994,1.114,995,1.978,996,1.114,997,1.114,998,0.879,999,1.114,1000,1.114,1001,1.114,1002,1.114,1003,1.114,1004,1.114,1005,1.114,1006,1.726,1007,1.114,1008,1.114,1009,1.114,1010,1.114,1011,1.114,1012,1.114,1013,1.978,1014,3.702,1015,1.114,1016,1.114,1017,1.114,1018,1.114,1019,1.114,1020,1.114,1021,1.726,1022,1.114,1023,1.114]],["title/modules/NgxEditorjsDemoModule.html",[124,0.341,1024,2.985]],["body/modules/NgxEditorjsDemoModule.html",[3,0.182,4,0.182,5,0.167,6,0.121,7,0.198,12,0.309,23,0.013,24,0.182,65,0.007,66,0.009,67,0.007,71,0.614,73,0.533,78,1.949,123,2.496,124,0.372,170,0.555,238,2.546,267,1.194,395,1.637,468,3.562,469,1.194,470,1.805,471,1.805,472,3.148,473,2.115,474,2.79,481,2.805,482,1.949,483,1.949,498,3.774,499,2.686,509,3.064,545,4.316,550,3.913,557,3.02,577,1.875,580,2.422,585,4.689,590,4.824,591,3.537,781,3.032,885,2.686,1024,6.046,1025,3.913,1026,3.913,1027,3.913,1028,3.913,1029,5.185,1030,4.824,1031,4.484,1032,5.19,1033,5.19,1034,3.913,1035,3.537,1036,4.484,1037,3.913,1038,5.947,1039,3.913,1040,4.484,1041,3.913,1042,5.19,1043,4.484,1044,3.913,1045,4.692,1046,3.256,1047,4.484]],["title/modules/NgxEditorjsPluginsModule.html",[124,0.341,1030,2.608]],["body/modules/NgxEditorjsPluginsModule.html",[1,0.577,3,0.136,4,0.136,5,0.124,6,0.09,7,0.148,9,0.366,12,0.255,21,2.196,23,0.013,24,0.136,65,0.005,66,0.007,67,0.005,71,0.602,73,0.398,81,2.756,93,2.621,124,0.474,166,3.525,170,0.414,175,1.211,182,2.5,190,2.621,253,1.476,267,0.891,395,1.336,415,4.93,469,1.771,470,1.347,471,1.347,472,1.579,473,1.579,474,2.388,481,2.289,482,1.455,483,1.455,498,3.08,499,2.005,509,2.5,564,3.525,845,5.254,858,3.829,1030,5.415,1048,2.921,1049,2.921,1050,2.921,1051,5.254,1052,5.254,1053,5.254,1054,5.254,1055,5.254,1056,5.254,1057,5.254,1058,5.254,1059,5.254,1060,5.254,1061,5.254,1062,3.347,1063,3.347,1064,4.236,1065,4.853,1066,4.853,1067,4.853,1068,4.236,1069,3.347,1070,3.347,1071,3.347,1072,3.347,1073,3.347,1074,2.921,1075,3.347,1076,3.347,1077,3.347,1078,3.347,1079,3.347,1080,3.347,1081,3.347,1082,2.921,1083,3.347,1084,3.347,1085,3.347,1086,3.347]],["title/modules/NgxTinynodesComponentsModule.html",[124,0.341,1087,2.779]],["body/modules/NgxTinynodesComponentsModule.html",[3,0.218,4,0.218,5,0.199,6,0.144,23,0.013,24,0.218,65,0.008,66,0.01,67,0.008,71,0.542,73,0.636,124,0.444,170,0.662,267,1.425,395,1.834,469,1.425,470,2.154,471,2.154,472,2.524,473,2.524,474,3.034,481,3.143,482,2.326,483,2.326,509,3.433,577,2.786,580,3.599,583,3.282,1087,5.607,1088,4.67,1089,4.67,1090,4.67,1091,5.664,1092,5.664,1093,5.351,1094,5.351,1095,6.664,1096,4.221,1097,5.351,1098,4.221,1099,5.351]],["title/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.197,1100,3.587]],["body/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.29,2,1.369,3,0.246,4,0.246,5,0.225,6,0.163,23,0.013,24,0.246,40,2.113,65,0.009,66,0.011,67,0.009,71,0.572,73,0.72,220,5.668,225,4.859,229,6.27,233,4.56,234,6.27,238,3.439,577,2.532,1100,6.27,1101,6.056,1102,7.66,1103,4.399]],["title/components/NgxTinynodesMatJsonOutputComponent.html",[228,1.718,579,2.462]],["body/components/NgxTinynodesMatJsonOutputComponent.html",[3,0.163,4,0.163,5,0.149,6,0.198,11,0.554,12,0.276,13,0.768,15,1.519,19,1.96,23,0.013,24,0.163,34,0.624,52,0.795,65,0.006,66,0.008,67,0.006,71,0.3,73,0.477,104,2.065,112,1.47,123,2.914,142,1.736,170,0.497,171,1.923,188,2.637,216,3.956,226,2.916,227,4.594,228,2.637,232,3.778,240,2.068,244,2.068,249,2.168,255,2.28,262,5.004,263,3.733,268,4.009,269,4.009,270,3.733,273,3.407,279,1.977,319,2.28,335,2.718,339,2.405,344,1.502,349,2.981,386,2.4,390,1.616,432,3.167,471,1.616,526,4.311,545,2.28,546,2.916,547,2.405,548,2.916,552,2.715,553,2.168,565,2.168,569,3.733,570,2.068,571,4.934,572,2.916,573,2.916,574,2.916,575,2.916,576,2.405,577,3.329,578,2.916,579,4.069,580,4.542,581,2.916,582,2.405,583,1.977,584,2.916,585,2.28,586,1.745,587,2.715,588,2.715,589,2.916,617,5.505,620,5.928,622,4.355,634,4.009,720,2.916,1098,5.805,1104,5.344,1105,4.015,1106,5.52,1107,6.793,1108,7.538,1109,4.015,1110,5.52,1111,4.015,1112,4.015,1113,4.015,1114,5.52,1115,5.52]],["title/modules/NgxTinynodesMatJsonOutputModule.html",[124,0.341,1091,2.779]],["body/modules/NgxTinynodesMatJsonOutputModule.html",[3,0.219,4,0.219,5,0.2,6,0.145,23,0.013,24,0.219,65,0.008,66,0.01,67,0.008,71,0.584,73,0.639,123,2.01,124,0.446,170,0.665,216,2.768,267,1.431,395,1.839,469,1.431,470,2.163,471,2.163,472,3.43,473,2.535,474,3.04,481,3.151,482,2.336,483,2.336,498,4.24,499,3.219,509,2.768,577,2.247,579,5.02,580,4.108,595,5.831,597,5.831,1045,5.27,1046,3.902,1091,5.469,1098,4.239,1103,3.902,1104,3.902,1116,4.689,1117,4.689,1118,4.689,1119,5.373,1120,5.373]],["title/modules/NgxTinynodesMatTagInputModule.html",[124,0.341,1092,2.779]],["body/modules/NgxTinynodesMatTagInputModule.html",[3,0.214,4,0.214,5,0.196,6,0.142,23,0.013,24,0.214,65,0.008,66,0.01,67,0.008,71,0.581,73,0.626,124,0.437,170,0.652,216,2.711,238,2.989,267,1.402,395,1.815,469,1.402,470,2.119,471,2.119,472,3.398,473,2.483,474,3.012,481,3.111,482,2.288,483,2.288,498,3.34,499,3.153,500,4.594,509,2.711,577,2.201,582,5.074,583,3.547,599,5.756,606,5.756,1092,5.444,1096,4.152,1103,3.823,1104,3.823,1121,4.594,1122,4.594,1123,4.594,1124,4.594,1125,5.682,1126,5.682,1127,5.263,1128,5.263,1129,5.263]],["title/modules/NgxTinynodesMaterialFormFieldDemo.html",[124,0.341,1130,2.985]],["body/modules/NgxTinynodesMaterialFormFieldDemo.html",[3,0.186,4,0.186,5,0.17,6,0.123,7,0.202,12,0.291,23,0.013,24,0.186,65,0.007,66,0.009,67,0.007,71,0.612,73,0.543,78,1.984,123,2.25,124,0.378,125,1.647,170,0.565,228,1.908,238,2.591,267,1.215,335,2.247,395,1.656,469,1.215,470,1.837,471,1.837,472,3.175,473,2.153,474,1.908,481,2.838,482,1.984,483,1.984,498,3.819,499,2.733,509,3.1,557,3.239,565,3.865,576,4.791,577,2.516,580,2.465,590,4.848,769,4.848,774,3.982,780,3.982,885,2.733,1029,4.848,1030,4.848,1032,5.251,1033,5.251,1034,3.982,1035,3.6,1041,3.982,1042,5.251,1044,3.982,1045,4.747,1046,3.314,1087,4.069,1130,6.011,1131,3.982,1132,3.982,1133,4.563,1134,3.982,1135,4.747,1136,4.563,1137,6.732,1138,3.982,1139,4.563]],["title/components/NgxTinynodesMaterialFormFieldDemoComponent.html",[228,1.718,576,2.462]],["body/components/NgxTinynodesMaterialFormFieldDemoComponent.html",[1,0.538,3,0.062,4,0.106,5,0.057,6,0.177,7,0.291,9,0.495,11,0.342,12,0.314,13,0.293,14,0.673,15,1.778,19,1.778,21,1.181,23,0.013,24,0.062,26,1.051,27,0.693,34,0.816,38,0.743,41,1.563,44,1.091,46,0.722,48,1.231,50,1.135,51,1.286,52,1.095,65,0.002,66,0.004,67,0.005,71,0.413,73,0.182,76,0.498,89,0.849,104,1.964,111,2.406,112,1.073,118,2.714,122,1.345,123,2.506,127,1.597,139,0.827,141,2.667,142,1.267,144,1.622,145,0.722,146,2.004,151,2.176,154,0.976,157,1.82,162,5.015,164,1.823,170,0.19,171,1.831,175,1.005,176,0.972,183,2.723,184,1.981,185,2.658,188,2.197,191,0.693,194,1.984,206,3.512,216,2.706,218,1.208,219,1.896,225,2.307,226,1.112,227,2.725,228,2.802,232,2.043,233,1.657,238,0.87,240,3.174,241,2.165,242,1.112,243,1.036,244,0.789,247,2.176,249,0.827,251,3.805,255,0.87,262,3.795,263,1.765,264,2.278,265,1.896,266,2.977,268,1.896,269,1.896,270,1.765,271,1.231,273,4.005,279,3.182,280,1.051,282,2.723,287,2.989,319,2.288,321,1.112,335,1.286,339,2.043,340,2.926,344,1.507,346,2.926,347,1.765,349,1.41,350,1.896,351,1.896,352,0.827,355,2.926,367,1.657,370,2.307,372,2.926,386,1.135,390,1.622,409,1.012,430,1.482,434,1.208,439,3.904,441,1.036,471,0.617,482,2.6,485,2.414,492,2.076,493,1.564,526,2.165,528,3.179,531,1.765,533,1.112,534,1.896,545,0.87,546,1.112,547,0.917,548,1.112,552,1.036,553,3.771,557,1.823,561,1.896,565,4.469,569,1.765,570,0.789,571,2.926,572,1.112,573,1.112,574,1.112,575,1.112,576,2.414,577,2.058,578,1.112,579,0.917,580,0.827,581,1.112,582,0.917,583,1.68,584,1.112,585,0.87,586,3.1,587,1.036,588,1.036,589,1.112,614,2.059,622,2.059,624,1.208,629,1.896,630,2.725,634,2.926,642,2.278,645,3.946,648,2.059,651,1.337,653,4.365,689,1.896,693,3.517,696,1.765,720,2.926,724,2.977,736,3.179,752,1.208,856,2.059,861,4.554,885,0.917,904,2.059,912,1.337,913,1.337,914,1.208,915,1.112,969,1.208,984,1.208,998,2.691,1134,5.749,1135,5.197,1140,6.587,1141,2.61,1142,2.61,1143,3.411,1144,4.03,1145,2.61,1146,5.254,1147,3.946,1148,1.337,1149,3.334,1150,3.517,1151,4.03,1152,4.03,1153,1.532,1154,1.657,1155,2.61,1156,1.532,1157,1.532,1158,2.61,1159,1.532,1160,4.03,1161,1.532,1162,2.61,1163,1.532,1164,4.03,1165,4.03,1166,1.532,1167,2.278,1168,2.278,1169,1.532,1170,1.532,1171,2.61,1172,1.532,1173,2.61,1174,4.03,1175,2.725,1176,3.411,1177,1.532,1178,2.61,1179,1.532,1180,1.532,1181,1.337,1182,1.532,1183,1.337,1184,1.337,1185,1.337,1186,1.337,1187,1.532,1188,1.337,1189,1.532,1190,2.61,1191,2.61,1192,1.532,1193,1.337,1194,1.532,1195,1.532,1196,1.337,1197,1.532,1198,1.337,1199,1.532,1200,1.532,1201,1.337,1202,1.337,1203,1.532,1204,1.337,1205,1.337,1206,2.61,1207,2.61,1208,2.61,1209,2.278,1210,2.278,1211,2.61,1212,2.61,1213,2.278,1214,2.61,1215,3.179,1216,2.278,1217,3.517,1218,2.278,1219,1.337,1220,1.765,1221,1.337,1222,1.337,1223,1.337,1224,1.337,1225,1.337,1226,2.278,1227,2.278,1228,2.059,1229,2.278,1230,2.059,1231,2.278,1232,2.278,1233,2.278,1234,2.61,1235,2.278,1236,2.278,1237,2.278,1238,2.61,1239,2.278,1240,2.61,1241,2.61,1242,2.977,1243,2.977,1244,2.278,1245,1.337,1246,2.977,1247,1.337,1248,1.337,1249,1.532,1250,1.532,1251,1.532,1252,1.532]],["title/interfaces/Page.html",[0,0.197,586,1.787]],["body/interfaces/Page.html",[0,0.352,1,0.809,2,1.251,3,0.225,4,0.225,5,0.206,6,0.149,7,0.245,11,0.771,12,0.277,13,1.059,14,1.754,17,1.171,18,1.471,23,0.013,24,0.3,40,1.628,65,0.008,66,0.01,67,0.008,71,0.508,146,2.5,271,3.931,557,2.505,583,3.785,586,2.958,1175,5.198,1253,4.367,1254,5.582,1255,5.198,1256,3.316]],["title/interfaces/PageBlock.html",[0,0.197,1255,2.779]],["body/interfaces/PageBlock.html",[0,0.359,1,0.892,2,1.305,3,0.235,4,0.235,5,0.214,6,0.155,7,0.255,11,0.579,12,0.284,13,1.105,14,1.799,17,1.221,18,1.336,23,0.013,24,0.305,40,2.053,65,0.009,66,0.011,67,0.009,71,0.521,146,1.877,271,3.955,557,2.612,583,3.437,586,2.509,1175,3.903,1253,4.553,1254,4.191,1255,5.075,1256,3.457]],["title/components/PageContainerComponent.html",[228,1.718,585,2.334]],["body/components/PageContainerComponent.html",[1,0.713,3,0.083,4,0.083,5,0.076,6,0.186,7,0.306,9,0.364,11,0.421,12,0.319,13,0.392,14,0.858,15,1.869,18,0.392,19,1.869,21,1.506,23,0.013,24,0.083,26,1.946,27,0.928,34,0.652,37,1.245,38,0.947,41,1.291,44,1.391,46,0.967,50,1.447,51,1.639,52,0.406,63,1.57,65,0.003,66,0.005,67,0.006,71,0.467,73,0.244,76,0.667,89,1.082,92,0.714,104,1.47,112,0.886,118,2.671,122,1.714,123,2.633,127,1.012,139,1.107,140,1.797,141,2.337,142,1.52,144,0.825,145,0.967,146,2.426,150,1.506,154,1.808,170,0.254,171,1.852,172,1.714,175,0.83,183,3.046,184,1.34,185,1.797,188,2.021,191,0.928,194,1.639,216,2.49,219,2.417,225,2.841,226,1.489,227,3.269,228,2.507,233,2.112,236,1.789,240,1.056,241,2.666,242,1.489,243,1.387,244,1.056,247,2.611,249,3.074,255,1.164,262,4.211,263,2.251,265,2.417,268,2.417,269,2.417,270,2.251,271,1.57,273,3.907,279,1.01,280,2.291,282,2.28,287,3.074,292,2.625,318,2.904,319,3.018,321,1.489,335,1.639,339,3.184,340,2.417,344,1.808,346,3.511,349,1.797,350,2.417,351,2.417,362,1.489,367,2.112,370,1.387,372,3.511,386,1.447,390,0.825,409,1.291,439,4.225,471,0.825,482,2.716,485,2.895,492,1.714,493,1.993,526,3.373,531,2.251,534,2.417,545,1.164,546,1.489,547,1.228,548,1.489,551,1.789,552,1.387,553,4.029,555,3.666,556,2.904,557,2.187,561,3.051,565,1.107,569,2.251,570,1.056,571,3.511,572,1.489,573,1.489,574,1.489,575,1.489,576,1.228,577,2.021,578,1.489,579,1.228,580,2.269,581,1.489,582,1.228,583,2.069,584,1.489,585,2.745,586,3.181,587,1.387,588,3.269,589,1.489,618,5.235,629,2.417,630,3.077,631,2.904,634,3.511,653,2.625,670,2.904,672,2.904,701,3.051,720,1.489,736,3.813,885,1.228,914,1.618,915,1.489,916,2.904,956,1.789,969,1.618,984,1.618,998,2.625,1037,6.041,1147,4.219,1148,1.789,1149,3.806,1150,4.219,1154,3.806,1167,2.904,1168,2.904,1181,1.789,1183,1.789,1184,2.904,1185,1.789,1186,1.789,1188,1.789,1193,1.789,1196,1.789,1198,1.789,1201,1.789,1204,1.789,1205,1.789,1215,3.813,1216,2.904,1217,4.219,1218,2.904,1219,1.789,1220,2.251,1221,1.789,1222,1.789,1223,1.789,1224,1.789,1225,1.789,1226,2.904,1227,2.904,1228,2.625,1229,2.904,1230,2.625,1231,2.904,1232,2.904,1233,2.904,1242,2.904,1243,2.904,1244,2.904,1245,1.789,1246,1.789,1247,1.789,1248,1.789,1257,6.922,1258,5.315,1259,3.328,1260,2.05,1261,2.05,1262,2.05,1263,2.05,1264,2.05,1265,2.05,1266,3.328,1267,2.05,1268,2.05,1269,2.05,1270,1.789,1271,2.05,1272,2.05,1273,2.05,1274,3.328,1275,2.05,1276,2.05,1277,2.05,1278,2.05,1279,2.05,1280,2.05,1281,2.05,1282,2.05,1283,2.05,1284,2.05,1285,2.05,1286,2.05,1287,3.328,1288,3.328,1289,3.328,1290,3.328,1291,3.328]],["title/modules/PageStoreModule.html",[124,0.341,1029,2.608]],["body/modules/PageStoreModule.html",[3,0.209,4,0.209,5,0.191,6,0.139,7,0.228,9,0.563,12,0.29,23,0.013,24,0.209,65,0.008,66,0.01,67,0.008,71,0.56,73,0.612,80,3.896,114,3.512,123,2.432,124,0.641,170,0.637,191,2.943,267,1.899,395,1.79,469,1.371,470,2.072,471,2.072,472,2.428,473,2.428,474,2.152,481,3.068,482,2.238,483,2.238,524,4.723,553,3.512,586,2.827,1029,5.229,1149,5.007,1154,4.127,1292,4.492,1293,4.492,1294,5.335,1295,4.725,1296,5.148,1297,5.676,1298,5.676,1299,4.723,1300,6.504,1301,6.504,1302,4.492,1303,5.148,1304,4.061]],["title/injectables/PagesQuery.html",[443,1.86,1294,2.779]],["body/injectables/PagesQuery.html",[3,0.235,4,0.235,5,0.214,6,0.188,7,0.309,11,0.579,12,0.284,19,1.588,23,0.013,24,0.235,40,2.053,52,1.142,65,0.009,66,0.011,67,0.009,71,0.582,73,0.686,104,1.755,170,0.714,344,2.159,390,2.323,443,3.159,445,3.457,586,2.509,1256,3.457,1294,4.72,1295,4.67,1299,5.069,1304,4.553,1305,5.771,1306,7.504,1307,5.771,1308,5.771,1309,4.191,1310,4.191,1311,5.771,1312,5.771]],["title/injectables/PagesService.html",[443,1.86,1149,2.608]],["body/injectables/PagesService.html",[1,0.9,3,0.127,4,0.127,5,0.116,6,0.204,7,0.335,9,0.662,11,0.736,12,0.311,13,0.596,14,1.187,19,2.054,23,0.013,24,0.127,25,2.002,32,2.002,52,1.452,65,0.005,66,0.007,67,0.005,71,0.523,73,0.37,84,2.268,104,2.127,125,1.124,127,0.947,141,1.723,145,1.47,146,2.276,170,0.386,171,2.438,174,2.488,175,1.149,188,2.827,271,3.759,273,3.489,280,1.254,282,2.585,287,1.683,319,3.84,344,1.165,386,2.002,390,2.816,430,2.615,443,2.084,445,1.866,495,1.977,557,1.41,564,3.345,586,3.624,629,3.345,630,2.268,680,3.345,689,3.345,701,4.911,1021,4.02,1149,2.923,1154,4.558,1175,2.107,1220,4.094,1239,4.02,1254,2.263,1255,4.731,1256,1.866,1270,2.719,1294,4.369,1295,3.869,1299,5.496,1302,2.719,1304,2.458,1309,2.263,1313,3.116,1314,6.054,1315,4.606,1316,4.606,1317,4.606,1318,4.606,1319,3.116,1320,3.116,1321,4.606,1322,3.116,1323,4.606,1324,3.116,1325,6.46,1326,4.606,1327,3.116,1328,4.606,1329,3.633,1330,4.606,1331,3.116,1332,4.606,1333,3.116,1334,4.606,1335,3.116,1336,4.606,1337,3.116,1338,3.116,1339,3.116,1340,6.054,1341,3.116,1342,4.606,1343,3.116,1344,3.116,1345,3.116,1346,4.606,1347,3.116,1348,3.116,1349,5.48,1350,4.606,1351,3.116,1352,3.116,1353,3.116]],["title/interfaces/PagesState.html",[0,0.197,1310,2.985]],["body/interfaces/PagesState.html",[0,0.283,2,1.338,3,0.241,4,0.241,5,0.22,6,0.159,7,0.262,12,0.241,23,0.013,24,0.288,40,2.23,65,0.009,66,0.011,67,0.009,71,0.567,73,0.704,104,1.799,170,0.733,344,2.213,345,4.297,443,3.206,586,2.572,1154,3.755,1256,3.544,1295,3.544,1309,4.297,1310,5.146,1354,5.164,1355,6.62,1356,6.184,1357,6.184]],["title/injectables/PagesStore.html",[443,1.86,1295,2.462]],["body/injectables/PagesStore.html",[0,0.279,3,0.237,4,0.237,5,0.216,6,0.189,7,0.31,12,0.285,19,1.603,23,0.013,24,0.285,40,2.215,65,0.009,66,0.011,67,0.009,71,0.563,73,0.693,104,1.77,170,0.721,344,2.818,345,4.229,443,3.176,445,3.488,586,2.532,1154,3.696,1256,3.488,1295,4.204,1309,4.229,1310,4.229,1354,5.082,1355,6.125,1356,6.574,1357,6.125,1358,5.823]],["title/interfaces/Paragraph.html",[0,0.197,41,1.594]],["body/interfaces/Paragraph.html",[0,0.381,1,0.987,2,0.832,3,0.15,4,0.15,5,0.137,6,0.099,7,0.163,8,1.897,9,0.403,11,0.835,12,0.291,13,0.705,14,1.552,15,2.026,17,0.779,18,1.483,21,1.666,22,2.518,23,0.013,24,0.311,25,1.601,26,3.025,27,1.666,28,1.897,29,2.677,30,2.677,31,1.601,32,1.601,33,2.677,34,1.112,35,2.807,36,2.807,37,1.377,38,1.047,39,2.559,40,1.924,41,2.915,42,3.872,43,2.559,44,3.077,45,2.559,46,1.737,47,1.897,48,1.329,49,2.559,50,3,51,2.559,52,1.295,53,2.807,54,1.988,55,2.098,56,1.988,57,1.959,58,1.988,59,1.988,60,1.988,61,1.988,62,2.559,63,1.737,64,1.897,65,0.006,66,0.008,67,0.006]],["title/interfaces/ParagraphBlock.html",[0,0.197,43,2.024]],["body/interfaces/ParagraphBlock.html",[0,0.384,1,0.993,2,0.836,3,0.15,4,0.15,5,0.137,6,0.1,7,0.164,8,1.905,9,0.405,11,0.839,12,0.3,13,0.708,14,1.556,15,1.974,17,0.782,18,1.44,21,1.673,22,2.524,23,0.013,24,0.311,25,1.607,26,3.029,27,1.673,28,1.905,29,2.685,30,2.685,31,1.607,32,1.607,33,2.685,34,1.073,35,2.815,36,2.815,37,1.383,38,1.052,39,2.567,40,2.032,41,2.781,42,3.377,43,2.973,44,3.081,45,2.567,46,1.744,47,1.905,48,1.334,49,2.567,50,3.004,51,2.567,52,1.298,53,2.815,54,1.997,55,2.103,56,1.997,57,1.963,58,1.997,59,1.997,60,1.997,61,1.997,62,2.567,63,1.744,64,1.905,65,0.006,66,0.008,67,0.006]],["title/modules/PluginCodeModule.html",[124,0.341,1051,2.779]],["body/modules/PluginCodeModule.html",[1,0.797,3,0.219,4,0.219,5,0.201,6,0.145,7,0.239,9,0.59,11,0.541,12,0.31,17,1.142,23,0.013,24,0.219,34,1.04,65,0.008,66,0.01,67,0.008,71,0.569,73,0.642,83,2.018,86,2.172,89,2.179,105,2.093,112,1.784,124,0.556,126,2.417,129,2.417,134,2.442,170,0.668,175,1.671,208,2.179,253,2.036,256,2.598,267,1.437,395,1.844,396,2.256,409,2.598,410,3.031,411,2.442,413,2.912,414,2.598,469,1.437,560,5.532,849,3.064,850,3.232,1051,4.53,1359,5.396,1360,2.442,1361,5.396,1362,5.396]],["title/interfaces/PluginConfig.html",[0,0.197,98,2.608]],["body/interfaces/PluginConfig.html",[0,0.311,1,0.903,2,0.716,3,0.129,4,0.129,5,0.118,6,0.085,7,0.14,9,0.77,11,0.816,12,0.286,13,0.607,14,1.202,15,1.791,17,1.607,18,1.245,19,0.872,23,0.013,24,0.309,31,2.406,34,0.724,38,2.375,52,1.59,55,1.625,57,1.8,65,0.005,66,0.007,67,0.005,68,4.881,69,1.898,71,0.348,72,1.561,73,0.377,74,3.154,75,3.154,76,1.031,77,2.96,78,2.406,79,2.96,80,1.898,81,3.863,82,2.302,83,1.185,84,1.561,85,2.143,86,1.276,87,1.898,88,5.371,89,2.213,90,3.743,91,4.4,92,1.928,93,1.712,94,1.898,95,2.302,96,2.267,97,2.96,98,3.512,99,3.388,100,2.96,101,2.028,102,3.154,103,3.388,104,1.418,105,2.368,106,4.318,107,1.799,108,2.302,109,2.028,110,2.631,111,2.028,112,1.242,113,3.154,114,2.519,115,3.656,116,3.297,117,2.96,118,1.745,119,3.512,120,2.611,121,2.611,122,1.633,123,1.185,124,0.263,125,1.997,126,1.144,127,1.683,128,2.143,129,1.144,130,2.143,131,2.302,132,2.011,133,2.302,134,1.434,135,2.143]],["title/interfaces/PluginConfigMap.html",[0,0.197,132,2.608]],["body/interfaces/PluginConfigMap.html",[0,0.329,1,0.892,2,0.826,3,0.149,4,0.149,5,0.136,6,0.139,7,0.229,9,0.656,11,0.736,12,0.299,15,1.651,16,2.076,17,1.615,18,1.367,19,1.423,23,0.013,24,0.318,31,2.248,34,0.568,38,2.36,52,1.291,55,1.802,57,1.189,65,0.006,66,0.008,67,0.006,68,4.057,69,2.19,71,0.386,72,1.8,73,0.435,74,3.497,75,3.497,76,1.189,77,3.281,78,2.608,79,3.281,80,2.19,81,3.907,82,2.655,83,1.367,84,1.8,85,2.472,86,1.471,87,2.19,88,4.831,89,2.121,90,4.057,91,4.057,92,2.272,93,1.974,94,2.19,95,2.655,96,2.09,97,2.32,98,3.807,99,2.655,100,2.32,101,1.589,102,2.472,103,2.655,104,1.111,105,1.418,106,3.281,107,2.076,108,2.655,109,1.589,110,2.574,111,1.589,112,0.974,113,2.472,114,1.974,115,2.19,116,2.792,117,2.32,118,1.367,119,2.32,120,2.83,121,2.83,122,1.883,123,1.367,124,0.303,125,2.165,126,1.319,127,1.824,128,2.472,129,1.319,130,2.472,131,3.755,132,3.281,133,3.755,134,1.654,135,2.472,1363,3.656]],["title/modules/PluginEmbedModule.html",[124,0.341,1052,2.779]],["body/modules/PluginEmbedModule.html",[1,0.869,3,0.221,4,0.221,5,0.202,6,0.146,7,0.24,9,0.594,11,0.545,12,0.311,17,1.149,23,0.013,24,0.221,34,1.044,65,0.008,66,0.01,67,0.008,71,0.546,73,0.646,83,2.031,86,2.186,89,2.187,105,2.106,112,1.946,115,3.253,124,0.558,126,2.427,129,2.427,170,0.672,175,1.677,208,2.187,253,2.044,256,2.608,267,1.446,395,1.851,396,2.27,409,2.608,410,3.043,411,2.457,413,2.923,414,2.608,469,1.446,1052,4.548,1360,2.457,1364,5.43,1365,7.635,1366,5.43,1367,3.446]],["title/modules/PluginHeaderModule.html",[124,0.341,415,2.608]],["body/modules/PluginHeaderModule.html",[1,0.744,3,0.197,4,0.197,5,0.18,6,0.13,7,0.214,9,0.53,11,0.486,12,0.298,15,2.016,17,1.026,23,0.013,24,0.255,34,0.972,38,1.379,40,1.425,44,3.383,65,0.007,66,0.009,67,0.007,71,0.518,73,0.576,83,1.813,86,1.951,89,2.036,105,1.88,112,1.667,124,0.519,125,1.749,126,2.259,127,1.474,129,2.259,170,0.775,171,1.689,173,2.107,175,1.561,179,2.286,208,2.036,232,2.903,253,1.903,256,2.427,267,1.291,280,1.951,282,2.286,383,4.937,385,4.23,388,3.824,391,4.23,393,5.462,394,4.23,395,1.723,396,2.027,397,4.23,398,3.52,399,3.824,400,3.52,401,4.23,402,5.462,403,4.23,404,4.23,405,4.23,406,4.23,407,4.23,408,4.23,409,2.427,410,2.832,411,2.193,412,4.23,413,2.721,414,2.427,415,3.972,469,1.291,1360,2.193]],["title/modules/PluginImageModule.html",[124,0.341,1053,2.779]],["body/modules/PluginImageModule.html",[1,0.797,3,0.219,4,0.219,5,0.201,6,0.145,7,0.239,9,0.59,11,0.541,12,0.31,17,1.142,23,0.013,24,0.219,34,1.04,50,3.312,65,0.008,66,0.01,67,0.008,71,0.569,73,0.642,83,2.018,86,2.172,89,2.179,105,2.093,112,1.784,124,0.556,126,2.417,129,2.417,134,2.442,170,0.668,175,1.671,208,2.179,253,2.036,256,2.598,267,1.437,395,1.844,396,2.256,409,2.598,410,3.031,411,2.442,413,2.912,414,2.598,469,1.437,849,3.064,850,3.232,1053,4.53,1360,2.442,1368,5.396,1369,5.396,1370,3.919]],["title/modules/PluginInlineCodeModule.html",[124,0.341,1054,2.779]],["body/modules/PluginInlineCodeModule.html",[1,0.794,3,0.219,4,0.219,5,0.2,6,0.145,7,0.238,9,0.588,11,0.539,12,0.309,17,1.137,23,0.013,24,0.219,34,1.038,65,0.008,66,0.01,67,0.008,71,0.543,73,0.639,81,3.793,83,2.01,87,3.219,89,2.173,105,2.084,106,3.41,112,1.779,124,0.554,126,2.411,129,2.411,170,0.665,175,1.667,208,2.173,253,2.031,256,2.591,267,1.431,395,1.839,396,2.247,409,2.591,410,3.023,411,2.432,413,2.904,414,2.591,469,1.431,560,5.28,1054,4.518,1074,4.689,1360,2.432,1367,3.41,1371,5.373,1372,5.373,1373,6.681,1374,5.373,1375,5.373]],["title/modules/PluginLinkModule.html",[124,0.341,1055,2.779]],["body/modules/PluginLinkModule.html",[1,0.797,3,0.219,4,0.219,5,0.201,6,0.145,7,0.239,9,0.59,11,0.541,12,0.31,17,1.142,23,0.013,24,0.219,34,1.04,65,0.008,66,0.01,67,0.008,71,0.569,73,0.642,83,2.018,86,2.172,89,2.179,105,2.093,107,4.325,112,1.784,124,0.556,126,2.417,129,2.417,134,2.442,170,0.668,175,1.671,208,2.179,253,2.036,256,2.598,267,1.437,395,1.844,396,2.256,409,2.598,410,3.031,411,2.442,413,2.912,414,2.598,469,1.437,849,3.064,850,3.232,1055,4.53,1360,2.442,1370,3.919,1376,5.396,1377,5.396]],["title/modules/PluginListModule.html",[124,0.341,1056,2.779]],["body/modules/PluginListModule.html",[1,0.797,3,0.219,4,0.219,5,0.201,6,0.145,7,0.239,9,0.59,11,0.541,12,0.31,17,1.142,23,0.013,24,0.219,26,3.066,34,1.04,65,0.008,66,0.01,67,0.008,71,0.569,73,0.642,83,2.018,86,2.172,89,2.179,105,2.093,112,1.784,124,0.556,126,2.417,129,2.417,134,2.442,170,0.668,175,1.671,208,2.179,253,2.036,256,2.598,267,1.437,395,1.844,396,2.256,409,2.598,410,3.031,411,2.442,413,2.912,414,2.598,469,1.437,849,3.064,850,3.232,1056,4.53,1360,2.442,1370,3.919,1378,5.396,1379,5.396]],["title/modules/PluginMarkerModule.html",[124,0.341,1057,2.779]],["body/modules/PluginMarkerModule.html",[1,0.794,3,0.219,4,0.219,5,0.2,6,0.145,7,0.238,9,0.588,11,0.539,12,0.309,17,1.137,23,0.013,24,0.219,34,1.038,41,2.084,65,0.008,66,0.01,67,0.008,71,0.568,73,0.639,83,2.01,87,3.219,89,2.173,105,2.084,106,3.41,112,1.779,124,0.554,126,2.411,129,2.411,134,2.432,170,0.665,175,1.667,208,2.173,253,2.031,256,2.591,267,1.431,395,1.839,396,2.247,409,2.591,410,3.023,411,2.432,413,2.904,414,2.591,469,1.431,849,3.051,850,3.219,1057,4.518,1360,2.432,1367,3.41,1380,5.373,1381,7.271,1382,4.689,1383,5.373]],["title/modules/PluginParagraphModule.html",[124,0.341,1058,2.779]],["body/modules/PluginParagraphModule.html",[1,0.803,3,0.222,4,0.222,5,0.203,6,0.147,7,0.242,9,0.598,11,0.548,12,0.311,17,1.156,23,0.013,24,0.222,34,1.049,41,2.968,65,0.008,66,0.01,67,0.008,71,0.547,73,0.65,83,2.044,86,2.2,89,2.196,105,2.12,112,1.798,124,0.56,126,2.436,129,2.436,170,0.677,175,1.684,208,2.196,253,2.052,256,2.618,267,1.455,395,1.858,396,2.285,409,2.618,410,3.055,411,2.473,413,2.935,414,2.618,469,1.455,1058,4.565,1360,2.473,1367,3.468,1382,4.769,1384,5.465]],["title/modules/PluginQuoteModule.html",[124,0.341,1059,2.779]],["body/modules/PluginQuoteModule.html",[1,0.8,3,0.221,4,0.221,5,0.202,6,0.146,7,0.24,9,0.594,11,0.545,12,0.311,17,1.149,23,0.013,24,0.221,34,1.044,65,0.008,66,0.01,67,0.008,71,0.546,73,0.646,83,2.031,86,2.186,89,2.376,105,2.106,112,1.946,115,3.253,124,0.558,126,2.427,129,2.427,170,0.672,175,1.677,208,2.187,253,2.044,256,2.608,267,1.446,395,1.851,396,2.27,409,2.608,410,3.043,411,2.457,413,2.923,414,2.608,469,1.446,1059,4.548,1360,2.457,1367,3.446,1385,5.43,1386,7.635,1387,5.43]],["title/modules/PluginSimpleImageModule.html",[124,0.341,1060,2.779]],["body/modules/PluginSimpleImageModule.html",[1,0.792,3,0.218,4,0.218,5,0.199,6,0.144,7,0.237,9,0.586,11,0.537,12,0.309,17,1.132,23,0.013,24,0.218,34,1.035,50,2.897,65,0.008,66,0.01,67,0.008,71,0.567,73,0.636,83,2.001,86,2.154,89,2.167,105,2.075,112,1.775,124,0.553,126,2.405,129,2.405,134,2.421,170,0.662,175,1.662,208,2.167,253,2.026,256,2.585,267,1.425,395,1.834,396,2.237,409,2.585,410,3.015,411,2.421,413,2.897,414,2.585,469,1.425,849,3.038,850,3.205,1060,4.506,1082,4.67,1228,5.725,1360,2.421,1370,3.886,1388,5.351,1389,5.351,1390,5.351,1391,5.351]],["title/modules/PluginWarningModule.html",[124,0.341,1061,2.779]],["body/modules/PluginWarningModule.html",[1,0.869,3,0.221,4,0.221,5,0.202,6,0.146,7,0.24,9,0.594,11,0.545,12,0.311,17,1.149,23,0.013,24,0.221,34,1.044,65,0.008,66,0.01,67,0.008,71,0.546,73,0.646,83,2.031,86,2.186,89,2.187,105,2.106,112,1.946,115,3.253,124,0.558,126,2.427,129,2.427,170,0.672,175,1.677,208,2.187,253,2.044,256,2.608,267,1.446,395,1.851,396,2.27,409,2.608,410,3.043,411,2.457,413,2.923,414,2.608,469,1.446,1061,4.548,1297,6.663,1360,2.457,1367,3.446,1392,5.43,1393,5.43]],["title/interfaces/ReadyMap.html",[0,0.197,152,2.462]],["body/interfaces/ReadyMap.html",[0,0.359,1,0.727,2,1.056,3,0.19,4,0.19,5,0.174,6,0.164,7,0.27,9,0.511,12,0.313,16,2.652,17,1.716,18,1.435,19,1.286,23,0.013,24,0.305,48,1.686,65,0.007,66,0.009,67,0.007,71,0.509,76,1.519,92,2.825,136,2.798,137,3.159,138,5.483,139,4.517,140,2.523,141,2.285,142,1.469,144,1.88,145,2.203,146,2.215,147,2.523,148,2.798,149,2.96,150,2.765,151,3.677,152,3.66,153,2.798,154,2.547,155,2.652,156,2.964,157,2.459,1394,4.671]],["title/interfaces/SavedMap.html",[0,0.197,153,2.462]],["body/interfaces/SavedMap.html",[0,0.359,1,0.727,2,1.056,3,0.19,4,0.19,5,0.174,6,0.164,7,0.27,9,0.511,12,0.313,16,2.652,17,1.716,18,1.435,19,1.286,23,0.013,24,0.305,48,1.686,65,0.007,66,0.009,67,0.007,71,0.509,76,1.519,92,2.825,136,2.798,137,3.159,138,5.483,139,4.517,140,2.523,141,2.547,142,1.469,144,1.88,145,2.203,146,2.215,147,2.523,148,2.798,149,2.96,150,2.114,151,3.677,152,2.798,153,3.66,154,2.547,155,2.652,156,2.964,157,2.459,1395,4.671]],["title/interfaces/Tag.html",[0,0.197,583,2.024]],["body/interfaces/Tag.html",[0,0.36,1,0.832,2,1.311,3,0.236,4,0.236,5,0.215,6,0.156,7,0.256,11,0.581,12,0.285,13,1.11,14,1.804,17,1.652,18,1.495,23,0.013,24,0.306,40,1.705,65,0.009,66,0.011,67,0.009,71,0.523,146,1.885,271,3.77,557,2.623,583,3.703,586,2.52,1175,3.92,1253,4.573,1254,4.21,1255,4.733,1256,3.472]],["title/interfaces/ToolSettingsMap.html",[0,0.197,94,2.462]],["body/interfaces/ToolSettingsMap.html",[0,0.329,1,0.891,2,0.824,3,0.148,4,0.148,5,0.135,6,0.139,7,0.228,9,0.655,11,0.736,12,0.298,15,1.649,16,2.07,17,1.614,18,1.366,19,1.42,23,0.013,24,0.318,31,2.243,34,0.566,38,2.359,52,1.289,55,1.798,57,1.186,65,0.005,66,0.008,67,0.005,68,4.051,69,2.183,71,0.385,72,1.795,73,0.433,74,3.49,75,3.49,76,1.186,77,3.275,78,2.604,79,3.275,80,2.183,81,3.903,82,2.647,83,1.363,84,1.795,85,2.465,86,1.467,87,2.183,88,4.827,89,2.236,90,4.649,91,4.405,92,2.27,93,2.787,94,3.091,95,3.748,96,2.087,97,2.313,98,3.275,99,2.647,100,2.313,101,1.585,102,2.465,103,2.647,104,1.108,105,1.414,106,3.275,107,2.07,108,2.647,109,1.585,110,2.436,111,1.585,112,0.971,113,2.465,114,1.969,115,2.183,116,2.787,117,2.313,118,1.363,119,2.313,120,2.825,121,2.825,122,1.878,123,1.363,124,0.302,125,2.162,126,1.316,127,1.821,128,2.465,129,1.316,130,2.465,131,2.647,132,2.313,133,2.647,134,1.65,135,2.465,1396,3.645]],["title/changelog.html",[1397,2.178,1398,2.321,1399,2.708]],["body/changelog.html",[0,0.2,1,0.497,12,0.294,23,0.009,32,2.466,34,0.649,37,1.563,38,1.614,45,2.058,65,0.006,66,0.009,67,0.006,78,3.312,80,2.503,89,1.359,92,1.456,96,1.456,124,0.534,127,2.264,142,1.783,147,2.256,154,2.121,161,2.058,173,1.816,175,1.606,200,2.503,208,1.359,228,3.019,240,2.152,251,3.656,253,1.27,256,1.62,261,2.825,267,1.113,275,3.034,316,4.119,335,2.058,352,3.063,367,2.651,384,2.825,386,1.816,395,1.15,409,1.62,474,1.747,485,3.397,492,2.922,524,3.034,525,2.651,541,3.034,553,4.022,557,3.37,562,3.296,565,2.256,566,4.119,577,1.747,614,3.296,630,2.058,643,3.296,680,3.034,689,4.677,690,3.646,696,2.825,740,4.95,775,4.95,777,3.6,794,2.503,797,3.646,858,3.296,885,2.503,904,4.475,908,3.296,927,3.646,954,3.646,1209,6.028,1235,4.95,1236,3.646,1329,3.296,1397,2.651,1399,4.475,1400,4.178,1401,5.62,1402,3.646,1403,4.178,1404,3.646,1405,4.178,1406,3.296,1407,4.178,1408,6.907,1409,4.178,1410,7.221,1411,4.178,1412,4.178,1413,4.178,1414,4.178,1415,4.178,1416,3.646,1417,4.475,1418,5.672,1419,4.178,1420,5.672,1421,4.178,1422,5.672,1423,5.672,1424,4.178,1425,6.028,1426,4.178,1427,4.178,1428,4.178,1429,5.672,1430,4.178,1431,4.178,1432,4.178,1433,6.44,1434,4.178,1435,4.178,1436,4.178,1437,3.646,1438,4.178,1439,4.178,1440,3.296,1441,4.178,1442,5.672,1443,4.178,1444,4.178,1445,4.178,1446,3.296,1447,4.178,1448,4.178,1449,4.178,1450,4.178,1451,3.646,1452,4.178,1453,4.178,1454,4.178,1455,5.672,1456,5.672,1457,4.178,1458,4.95,1459,3.646,1460,4.178,1461,4.178,1462,4.178,1463,4.178,1464,4.178,1465,4.178,1466,4.178,1467,4.178,1468,4.178,1469,4.178,1470,4.178,1471,4.178,1472,4.178,1473,4.178,1474,3.646,1475,4.178,1476,3.646]],["title/contributing.html",[1397,2.178,1398,2.321,1477,2.995]],["body/contributing.html",[0,0.17,5,0.132,19,0.977,23,0.008,25,1.543,45,1.748,65,0.008,66,0.008,67,0.005,84,2.494,101,2.201,127,1.539,147,2.735,154,1.894,155,2.015,166,4.287,173,2.566,178,2.015,180,2.253,184,1.429,211,3.033,273,2.735,287,2.735,339,2.126,390,1.429,399,2.8,400,2.578,413,2.201,470,1.429,525,2.253,560,5.289,652,4.419,686,3.098,692,3.098,696,2.401,777,3.214,787,2.578,856,2.8,861,2.8,874,3.098,876,3.098,879,3.098,908,2.8,909,3.098,915,2.578,932,2.8,1006,5.617,1068,3.098,1202,3.098,1329,2.8,1417,6.25,1440,2.8,1458,4.419,1459,3.098,1474,4.419,1476,3.098,1477,4.419,1478,4.419,1479,5.903,1480,3.55,1481,3.55,1482,3.55,1483,3.55,1484,3.55,1485,3.55,1486,7.282,1487,5.064,1488,3.55,1489,5.903,1490,3.098,1491,3.55,1492,3.55,1493,5.064,1494,3.55,1495,5.903,1496,2.8,1497,3.55,1498,3.55,1499,3.55,1500,3.55,1501,3.55,1502,6.436,1503,3.098,1504,3.55,1505,3.55,1506,3.55,1507,3.55,1508,4.419,1509,3.55,1510,3.55,1511,4.419,1512,3.55,1513,5.064,1514,3.55,1515,3.55,1516,5.064,1517,3.55,1518,6.805,1519,3.55,1520,6.805,1521,5.064,1522,3.098,1523,5.064,1524,3.55,1525,3.55,1526,3.55,1527,3.55,1528,3.55,1529,3.55,1530,3.55,1531,3.55,1532,5.064,1533,3.55,1534,3.55,1535,5.064,1536,3.55,1537,3.55,1538,3.55,1539,5.064,1540,3.55,1541,5.064,1542,6.805,1543,3.55,1544,3.55,1545,3.55,1546,5.064,1547,3.55,1548,3.55,1549,3.55,1550,3.55,1551,3.55,1552,3.55,1553,3.55,1554,3.55,1555,3.55,1556,3.55,1557,3.55,1558,3.55,1559,3.55,1560,3.55,1561,5.064,1562,5.903,1563,3.55,1564,3.55,1565,3.55,1566,3.55,1567,3.55,1568,3.55,1569,3.55,1570,3.55,1571,5.064,1572,3.55,1573,3.55,1574,3.098,1575,3.55,1576,3.55,1577,3.55,1578,5.064,1579,3.55,1580,3.55,1581,3.55,1582,5.064,1583,3.55,1584,3.098,1585,3.55,1586,3.55,1587,3.55,1588,3.55,1589,3.55,1590,5.064,1591,3.55,1592,3.55,1593,3.098,1594,3.55,1595,3.55,1596,3.55,1597,3.55,1598,3.55,1599,3.55,1600,3.55,1601,3.55,1602,3.55,1603,3.55,1604,3.55,1605,3.55,1606,5.064,1607,3.55,1608,3.55,1609,3.55,1610,3.55,1611,3.55,1612,3.55,1613,3.55,1614,3.55,1615,5.064,1616,5.064,1617,5.064,1618,3.55,1619,3.55,1620,3.55,1621,3.55,1622,3.55,1623,3.55,1624,3.55,1625,3.55,1626,3.55,1627,3.55,1628,3.55,1629,3.55,1630,5.064,1631,3.55,1632,5.064,1633,3.55,1634,3.55,1635,3.55,1636,3.55,1637,5.064,1638,3.098,1639,3.55,1640,3.55,1641,3.55,1642,3.55,1643,3.55,1644,3.55,1645,3.55,1646,3.55,1647,3.55,1648,3.55,1649,3.55,1650,3.55,1651,3.55,1652,3.55,1653,3.55,1654,3.55,1655,3.55,1656,3.55,1657,3.55,1658,3.55,1659,3.55,1660,3.55,1661,3.55,1662,3.55,1663,3.55,1664,3.55,1665,3.55,1666,3.55,1667,3.55,1668,3.55,1669,3.55]],["title/dependencies.html",[470,1.99,1451,2.995]],["body/dependencies.html",[23,0.013,44,2.345,65,0.008,66,0.01,67,0.008,73,0.667,123,2.565,145,2.645,238,3.184,470,2.257,499,3.359,580,3.029,821,4.424,885,3.359,1035,4.424,1046,4.073,1103,4.073,1490,4.894,1670,5.608,1671,8.3,1672,5.608,1673,7.72,1674,5.608,1675,5.608,1676,5.608,1677,5.608,1678,6.859,1679,5.986,1680,5.608,1681,4.894,1682,5.608,1683,5.608,1684,5.608,1685,5.608,1686,5.608,1687,5.608,1688,5.608,1689,5.608,1690,4.894,1691,5.608,1692,5.608,1693,5.608,1694,5.608]],["title/miscellaneous/enumerations.html",[1695,1.949,1696,4.314]],["body/miscellaneous/enumerations.html",[1,0.926,6,0.169,7,0.278,12,0.256,13,1.205,23,0.012,65,0.009,66,0.011,67,0.009,69,3.77,77,3.994,78,2.736,79,3.994,80,3.77,81,4.42,83,2.749,279,3.619,1695,3.573,1696,5.492,1697,4.965]],["title/miscellaneous/functions.html",[1695,1.949,1698,4.314]],["body/miscellaneous/functions.html",[6,0.202,7,0.332,9,0.782,10,3.754,11,0.518,12,0.315,13,0.989,23,0.012,38,2.032,52,1.563,65,0.008,66,0.01,67,0.008,78,3.105,92,1.801,96,2.489,101,2.247,104,2.281,110,2.672,111,2.834,124,0.541,149,2.247,165,2.545,170,0.64,171,2.272,174,2.791,179,3.076,184,2.08,280,2.624,390,3.019,421,2.662,484,4.51,495,4.138,505,5.69,507,5.073,508,4.51,512,5.69,537,4.409,630,2.545,656,4.735,657,4.51,681,4.077,709,5.69,809,4.51,849,3.702,1695,2.935,1698,4.51,1699,4.51,1700,6.546,1701,5.168,1702,5.168,1703,5.168,1704,4.51,1705,5.168,1706,5.168,1707,5.168,1708,5.168,1709,5.168,1710,5.168,1711,5.168,1712,5.168,1713,5.168]],["title/index.html",[13,0.657,1397,2.178,1398,2.321]],["body/index.html",[0,0.223,1,0.553,12,0.33,14,1.2,23,0.009,34,0.723,38,1.324,65,0.007,66,0.009,67,0.007,78,2.955,84,2.292,101,2.955,111,2.65,114,2.514,116,2.514,123,2.28,124,0.564,127,1.415,142,1.916,147,2.514,169,2.292,175,1.799,178,2.643,182,3.14,208,1.982,228,2.548,240,2.398,244,2.398,247,2.514,249,2.514,251,2.643,253,1.415,258,4.062,259,3.672,261,3.147,287,3.292,315,4.062,316,3.38,335,3.347,349,2.514,352,4.148,364,3.672,365,4.062,366,4.062,409,2.636,452,3.672,470,1.873,474,1.946,483,2.023,492,3.14,547,2.788,553,3.671,557,3.076,558,5.319,559,4.062,561,3.38,562,3.672,565,3.292,566,3.38,570,2.398,577,1.946,615,3.672,616,4.062,630,3.002,777,3.868,787,4.427,794,3.651,853,4.062,1064,4.062,1210,4.062,1215,3.672,1220,3.147,1298,5.319,1399,5.362,1401,5.319,1402,5.319,1404,5.319,1406,4.808,1417,5.689,1437,5.319,1446,5.906,1478,5.932,1690,4.062,1714,4.654,1715,4.654,1716,4.654,1717,4.654,1718,4.654,1719,4.654,1720,4.654,1721,4.654,1722,4.654,1723,4.654,1724,4.654,1725,6.095,1726,4.654,1727,4.654,1728,4.062,1729,6.095,1730,6.095,1731,4.654,1732,4.654,1733,4.062,1734,4.062,1735,4.654,1736,4.654]],["title/license.html",[1397,2.178,1398,2.321,1737,3.432]],["body/license.html",[23,0.01,37,2.006,65,0.008,66,0.01,67,0.008,101,2.901,155,3.045,241,3.403,483,2.331,577,2.242,932,4.23,1425,4.68,1440,5.73,1446,4.23,1503,4.68,1508,4.68,1511,5.823,1522,4.68,1593,4.68,1638,4.68,1733,4.68,1734,4.68,1738,4.68,1739,5.362,1740,5.362,1741,7.264,1742,5.362,1743,5.362,1744,5.362,1745,5.362,1746,5.362,1747,6.672,1748,8.238,1749,5.362,1750,5.362,1751,5.362,1752,6.672,1753,5.362,1754,5.362,1755,5.362,1756,4.68,1757,5.362,1758,5.362,1759,5.362,1760,5.362,1761,6.672,1762,5.362,1763,5.362,1764,5.362,1765,5.362,1766,5.362,1767,5.362,1768,6.672,1769,6.672,1770,5.362,1771,5.362,1772,5.362,1773,5.362,1774,5.362,1775,5.362,1776,5.362,1777,5.362,1778,5.362,1779,5.362,1780,5.362,1781,5.362,1782,5.362,1783,5.362,1784,5.362,1785,5.362,1786,5.362,1787,5.362,1788,5.362,1789,5.362,1790,5.362,1791,5.362,1792,5.362,1793,5.362,1794,5.362,1795,5.362]],["title/modules.html",[469,1.494]],["body/modules.html",[23,0.01,25,3.663,65,0.008,66,0.01,67,0.008,114,4.476,415,3.26,468,3.077,469,1.368,590,4.122,769,3.26,781,3.474,845,3.474,1024,3.731,1029,3.26,1030,3.26,1051,3.474,1052,4.393,1053,3.474,1054,3.474,1055,3.474,1056,3.474,1057,3.474,1058,3.474,1059,3.474,1060,3.474,1061,3.474,1087,3.474,1091,3.474,1092,3.474,1130,3.731,1679,7.233,1796,8.288,1797,8.592,1798,8.426]],["title/overview.html",[1799,4.895]],["body/overview.html",[2,0.707,23,0.013,46,1.475,47,1.611,65,0.005,66,0.007,67,0.005,124,0.259,244,3.608,247,2.966,249,3.965,252,3.988,255,4.169,267,0.833,335,1.54,384,2.115,415,4.445,445,1.873,468,4.473,469,0.833,470,1.259,471,1.259,472,1.475,473,1.475,474,1.307,475,2.729,476,2.729,477,2.729,478,2.729,479,2.729,480,4.332,481,2.178,482,1.359,483,1.359,545,3.118,570,1.611,576,3.289,579,4.196,582,4.537,585,3.977,590,3.849,769,4.807,770,2.729,771,2.729,772,2.729,773,2.729,781,4.375,782,2.729,784,2.729,794,3.289,845,4.965,846,2.729,847,2.729,1024,5.673,1025,2.729,1026,2.729,1027,2.729,1028,2.729,1029,4.958,1030,5.376,1048,2.729,1049,2.729,1050,2.729,1051,4.737,1052,4.737,1053,4.737,1054,4.737,1055,4.737,1056,4.737,1057,4.737,1058,4.737,1059,4.737,1060,4.737,1061,4.737,1087,4.863,1088,2.729,1089,2.729,1090,2.729,1091,5.05,1092,5.05,1116,2.729,1117,2.729,1118,2.729,1121,2.729,1122,2.729,1123,2.729,1124,2.729,1125,4.332,1126,4.332,1130,5.567,1131,2.729,1132,2.729,1149,3.485,1292,2.729,1293,2.729,1294,3.714,1295,3.289,1728,2.729,1799,2.729,1800,3.127,1801,3.127,1802,3.127]],["title/todo.html",[398,2.493,1397,2.178,1398,2.321]],["body/todo.html",[12,0.316,23,0.01,65,0.009,66,0.01,67,0.009,84,3.414,110,2.793,114,3.744,118,2.135,123,2.793,124,0.473,141,2.135,146,1.856,161,2.811,162,3.86,204,3.24,228,2.386,232,3.418,253,1.735,259,4.502,275,4.145,398,4.145,469,1.52,553,3.082,570,2.94,577,2.386,586,2.481,630,3.414,696,3.86,715,4.981,878,4.981,1213,4.981,1220,5.538,1230,4.502,1237,4.981,1299,4.145,1360,2.583,1406,4.502,1416,4.981,1574,4.981,1584,4.981,1681,4.981,1738,4.981,1756,4.981,1803,5.707,1804,5.707,1805,5.707,1806,5.707,1807,5.707,1808,5.707,1809,5.707,1810,5.707,1811,5.707,1812,5.707]],["title/miscellaneous/typealiases.html",[1695,1.949,1813,4.943]],["body/miscellaneous/typealiases.html",[1,0.815,6,0.184,7,0.303,8,2.882,11,0.774,12,0.279,13,1.071,18,1.477,23,0.013,25,2.432,26,2.252,27,2.532,28,2.882,29,3.529,30,3.529,31,2.432,32,2.432,33,3.529,38,2.106,39,2.756,43,2.756,49,2.756,55,2.387,62,2.756,63,2.639,64,3.529,65,0.008,66,0.01,67,0.008,69,3.352,74,3.784,75,3.784,77,3.551,78,2.432,79,3.551,84,2.756,85,4.632,86,2.252,87,3.352,88,4.632,89,1.82,90,3.784,91,4.632,1695,3.177,1697,5.84,1814,5.595,1815,6.85]],["title/miscellaneous/variables.html",[1496,3.9,1695,1.949]],["body/miscellaneous/variables.html",[6,0.203,7,0.321,11,0.744,12,0.322,13,0.671,18,0.671,19,0.965,23,0.013,34,1.265,38,1.428,65,0.005,66,0.008,67,0.005,69,2.1,78,1.524,92,1.749,100,4.605,110,2.193,112,1.804,114,1.894,118,1.311,120,3.195,121,3.324,122,1.806,123,2.394,124,0.291,126,1.811,127,2.256,128,2.371,129,1.811,130,2.371,134,2.271,135,2.371,142,1.102,146,1.14,149,1.524,157,1.411,164,2.271,168,2.225,169,1.727,170,0.621,173,1.524,183,1.654,190,1.894,191,2.271,192,3.006,193,2.1,194,1.727,195,2.1,196,2.1,197,2.1,198,3.006,199,2.225,200,2.1,201,2.85,202,2.225,215,2.766,216,3.02,217,2.546,218,3.96,220,3.96,228,2.676,230,5.586,240,2.586,249,1.894,251,2.85,252,3.645,253,1.946,254,5.586,255,1.991,256,2.482,271,1.654,279,3.992,480,3.96,485,2.1,487,3.185,502,3.394,507,2.371,515,3.645,516,2.766,539,2.766,540,2.766,541,2.546,542,2.766,543,3.96,544,2.766,545,1.991,553,1.894,565,3.166,577,2.099,582,3.006,583,3.335,585,1.991,591,2.766,615,2.766,821,2.766,1039,4.38,1096,2.766,1104,2.546,1125,3.96,1126,3.96,1135,2.766,1138,5.116,1496,2.766,1695,1.991,1697,4.625,1699,3.06,1700,4.38,1704,3.06,1816,5.019,1817,5.019,1818,5.019,1819,5.862,1820,3.506,1821,3.506,1822,5.862,1823,3.506,1824,5.019,1825,5.019,1826,5.019,1827,5.862,1828,3.506,1829,3.506,1830,3.506,1831,3.506,1832,5.862,1833,3.506,1834,3.506,1835,5.019,1836,3.506,1837,3.506,1838,3.506,1839,3.506,1840,3.506]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":194,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":46,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.2",{"_index":1456,"title":{},"body":{"changelog.html":{}}}],["1.4",{"_index":1667,"title":{},"body":{"contributing.html":{}}}],["10",{"_index":407,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["100",{"_index":1243,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["100vh",{"_index":1244,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["12th",{"_index":1453,"title":{},"body":{"changelog.html":{}}}],["13th",{"_index":1449,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":1252,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["15th",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["2.0.8",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1425,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["22nd",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1800,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1801,"title":{},"body":{"overview.html":{}}}],["3.1.3",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":1802,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1286,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["6",{"_index":47,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["6.5.2",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1728,"title":{},"body":{"index.html":{},"overview.html":{}}}],["8.0.0",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["_disabled",{"_index":306,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":312,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":293,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":288,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":299,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["a.time",{"_index":993,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["above",{"_index":1767,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1633,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1588,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1553,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":315,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["accessor",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":629,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1623,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1624,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1593,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["actions",{"_index":910,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["active",{"_index":642,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["actual_component",{"_index":589,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["adapted",{"_index":1665,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":1220,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{}}}],["add(page",{"_index":1321,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1315,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1323,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":32,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["additional",{"_index":21,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1578,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":888,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["advances",{"_index":1568,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":225,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["against",{"_index":884,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["age",{"_index":1526,"title":{},"body":{"contributing.html":{}}}],["aliases",{"_index":1814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":1602,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":1300,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["allows",{"_index":535,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["along",{"_index":775,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"changelog.html":{}}}],["and/or",{"_index":1759,"title":{},"body":{"license.html":{}}}],["angular",{"_index":352,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":222,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/coercion",{"_index":224,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/common",{"_index":499,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":238,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1103,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"dependencies.html":{}}}],["angular/material/badge",{"_index":594,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/button",{"_index":596,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/card",{"_index":598,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/chips",{"_index":600,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/expansion",{"_index":602,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/form",{"_index":239,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{}}}],["angular/material/grid",{"_index":605,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/icon",{"_index":607,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/input",{"_index":609,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{}}}],["angular/material/list",{"_index":611,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/platform",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1035,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["any).defaultlevel.number",{"_index":408,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["any).onready",{"_index":442,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["api",{"_index":208,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["apicall",{"_index":862,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["apicall(options",{"_index":871,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":485,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["appear",{"_index":1216,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1536,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":492,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{}}}],["applicationref",{"_index":868,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["applies",{"_index":1613,"title":{},"body":{"contributing.html":{}}}],["appointed",{"_index":1625,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1590,"title":{},"body":{"contributing.html":{}}}],["appservice",{"_index":1150,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["architecture",{"_index":1412,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":534,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["args",{"_index":213,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["argument",{"_index":875,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["arguments",{"_index":880,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["aria",{"_index":331,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["arising",{"_index":1793,"title":{},"body":{"license.html":{}}}],["array",{"_index":656,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["arrayadd",{"_index":1338,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1351,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1339,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1352,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1258,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":1749,"title":{},"body":{"license.html":{}}}],["async",{"_index":618,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["async/await",{"_index":927,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["attach",{"_index":615,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":637,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["attacks",{"_index":1573,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1567,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":1664,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1784,"title":{},"body":{"license.html":{}}}],["autofocus",{"_index":517,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autofocused",{"_index":523,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autosave",{"_index":162,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["autosaves",{"_index":647,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["autosavetime",{"_index":1165,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["available",{"_index":25,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["await",{"_index":726,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["b",{"_index":991,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["b.time",{"_index":992,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":715,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"todo.html":{}}}],["background",{"_index":58,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1603,"title":{},"body":{"contributing.html":{}}}],["base",{"_index":10,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":377,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["basic",{"_index":63,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["basis",{"_index":1241,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["before",{"_index":652,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["behavior",{"_index":1542,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1607,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":139,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["behaviorsubject(0",{"_index":1187,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["behaviorsubject(editor",{"_index":949,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(false",{"_index":713,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(undefined",{"_index":984,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["behaviorsubject(value",{"_index":1015,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["being",{"_index":1547,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":1215,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["best",{"_index":1557,"title":{},"body":{"contributing.html":{}}}],["beta.26",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":931,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["binding",{"_index":322,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":1,"title":{"interfaces/Block.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["block.id",{"_index":1353,"title":{},"body":{"injectables/PagesService.html":{}}}],["blockdata",{"_index":68,"title":{"interfaces/BlockData.html":{}},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["blockplaceholder",{"_index":518,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["blocks",{"_index":146,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["blocktypes",{"_index":64,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["blur",{"_index":646,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["body",{"_index":1527,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":57,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["bootstrap",{"_index":473,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["border",{"_index":54,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1614,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":533,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["box",{"_index":1719,"title":{},"body":{"index.html":{}}}],["break",{"_index":1468,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1797,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1679,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bug",{"_index":1460,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1458,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builder",{"_index":1155,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["bump",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["buttons",{"_index":1234,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["call",{"_index":185,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":355,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["calling",{"_index":207,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["calls",{"_index":643,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["caption",{"_index":53,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":1245,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["caret",{"_index":877,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cd",{"_index":634,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["change",{"_index":154,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{}}}],["change.time",{"_index":1288,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changed",{"_index":670,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["changedetection",{"_index":268,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":226,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":269,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":227,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1399,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changelogs",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":136,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["changes",{"_index":696,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{}}}],["changes.blocks",{"_index":730,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":732,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.previousvalue",{"_index":731,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":737,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":743,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1744,"title":{},"body":{"license.html":{}}}],["check",{"_index":1232,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ci",{"_index":1804,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1644,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1787,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1631,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1587,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":170,"title":{"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":384,"title":{},"body":{"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"changelog.html":{},"overview.html":{}}}],["clean",{"_index":1018,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleaning",{"_index":1017,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleanupsubjects(options",{"_index":1019,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear",{"_index":439,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["clear(options",{"_index":881,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear(skipsave",{"_index":1158,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["click",{"_index":340,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["click)=\"disableautosave()\">disable",{"_index":1206,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["cluster_ngxeditorjscomponentmodule",{"_index":475,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjscomponentmodule_declarations",{"_index":476,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjscomponentmodule_exports",{"_index":478,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjscomponentmodule_ngxeditorjscomponent_providers",{"_index":477,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjscomponentmodule_providers",{"_index":479,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":1025,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":1026,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":1028,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":1027,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmatfieldmodule",{"_index":770,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmatfieldmodule_declarations",{"_index":771,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmatfieldmodule_exports",{"_index":773,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmatfieldmodule_ngxeditorjsmatfieldcomponent_providers",{"_index":772,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":782,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":784,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_imports",{"_index":783,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["cluster_ngxeditorjspluginservicemodule",{"_index":846,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginservicemodule_providers",{"_index":847,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1048,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1050,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1049,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule",{"_index":1088,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_exports",{"_index":1090,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_imports",{"_index":1089,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo",{"_index":1131,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo_declarations",{"_index":1132,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo_imports",{"_index":1133,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule",{"_index":1116,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_declarations",{"_index":1117,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_exports",{"_index":1118,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule",{"_index":1121,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_declarations",{"_index":1122,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_exports",{"_index":1124,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_ngxtinynodesmattaginputcomponent_providers",{"_index":1123,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":1292,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1293,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["code",{"_index":560,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginInlineCodeModule.html":{},"contributing.html":{}}}],["code.module",{"_index":1075,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["code.module.ts",{"_index":1372,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["code/inline",{"_index":1074,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{}}}],["coercebooleanproperty",{"_index":223,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":310,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":297,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":304,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collapse",{"_index":1115,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["collection",{"_index":558,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"index.html":{}}}],["column",{"_index":1250,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["comments",{"_index":1571,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1598,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1463,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":498,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["community",{"_index":1520,"title":{},"body":{"contributing.html":{}}}],["compatible",{"_index":258,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["complaints",{"_index":1639,"title":{},"body":{"contributing.html":{}}}],["completly",{"_index":1447,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":228,"title":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":572,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["components",{"_index":335,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["components.module.ts",{"_index":1094,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/mat",{"_index":1095,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/components/mat",{"_index":1104,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["components/src/lib/ngx",{"_index":1093,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/types/components.ts",{"_index":1101,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["components/src/test.ts",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conditions",{"_index":1766,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1486,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1647,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":110,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["config.data",{"_index":768,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.ts",{"_index":1700,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":710,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":506,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{}}}],["configs",{"_index":131,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["configuration",{"_index":96,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["configurations",{"_index":809,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":883,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["connection",{"_index":1794,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1581,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":125,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["constructive",{"_index":1554,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":344,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["constructor(@inject(pluginclasses",{"_index":825,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(cd",{"_index":1109,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(config",{"_index":388,"title":{},"body":{"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"modules/PluginHeaderModule.html":{}}}],["constructor(editorjs",{"_index":867,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":632,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":1148,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["constructor(pluginconfigmap",{"_index":804,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(private",{"_index":432,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(protected",{"_index":1311,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":1341,"title":{},"body":{"injectables/PagesService.html":{}}}],["constructor(query",{"_index":1319,"title":{},"body":{"injectables/PagesService.html":{}}}],["constructor(store",{"_index":1307,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["contacting",{"_index":1636,"title":{},"body":{"contributing.html":{}}}],["container",{"_index":339,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["container.component",{"_index":1038,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":556,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":555,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":551,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:106",{"_index":1273,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:119",{"_index":1261,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:28",{"_index":1264,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:35",{"_index":1259,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:55",{"_index":1268,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:65",{"_index":1269,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:72",{"_index":1271,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:79",{"_index":1263,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:86",{"_index":1260,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:93",{"_index":1262,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/home",{"_index":550,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["container/page",{"_index":1037,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["containers/editorjs",{"_index":791,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.module",{"_index":790,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/home",{"_index":1043,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/material",{"_index":1136,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["containers/page",{"_index":1036,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":138,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["contains",{"_index":113,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["content",{"_index":653,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["context",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":1472,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1791,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1543,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1477,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1601,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1606,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1517,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":275,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"todo.html":{}}}],["controls",{"_index":1230,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"todo.html":{}}}],["controltype",{"_index":276,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":1102,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["copies",{"_index":1761,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1747,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1741,"title":{},"body":{"license.html":{}}}],["core",{"_index":885,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["coreapi",{"_index":1808,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1592,"title":{},"body":{"contributing.html":{}}}],["covenant",{"_index":1666,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1669,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1465,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":681,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["createconfig",{"_index":760,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":680,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":619,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(config",{"_index":677,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditorjsconfig",{"_index":709,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":1705,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":512,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":508,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":158,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSService.html":{}}}],["createinstance",{"_index":865,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createinstance(options",{"_index":886,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createmoduleconfig",{"_index":505,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":1709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createonchange",{"_index":934,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonchange(options",{"_index":1007,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready",{"_index":939,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready(options",{"_index":1009,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createpluginconfig",{"_index":849,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/functions.html":{}}}],["createpluginconfig(pluginconfigs",{"_index":1711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":174,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":180,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"contributing.html":{}}}],["creation",{"_index":524,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/PageStoreModule.html":{},"changelog.html":{}}}],["criticism",{"_index":1555,"title":{},"body":{"contributing.html":{}}}],["ctrl+shift+c",{"_index":1375,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["ctrl+shift+m",{"_index":1383,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["current",{"_index":904,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["currently",{"_index":80,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["custom",{"_index":31,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["cycle",{"_index":366,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["damages",{"_index":1788,"title":{},"body":{"license.html":{}}}],["data",{"_index":15,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["data).pipe",{"_index":982,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["data.blocks",{"_index":1204,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["data.text",{"_index":404,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["date.now",{"_index":441,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["datorama/akita",{"_index":1256,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{}}}],["deal",{"_index":1750,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1795,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":472,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["decorators",{"_index":1265,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["deem",{"_index":1608,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1642,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":34,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_holder_id",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":494,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["define",{"_index":117,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["defined",{"_index":19,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["delayed",{"_index":1457,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":1021,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1326,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":553,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["demo'},{'name",{"_index":578,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["demo.material.module",{"_index":1044,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["demo.material.module.ts",{"_index":592,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["demo.module.ts",{"_index":1031,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes",{"_index":1040,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/angular",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/containers/home",{"_index":549,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["demo/src/lib/containers/page",{"_index":1257,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["demo/src/lib/demos/material",{"_index":1134,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["demo/src/lib/ngx",{"_index":591,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1253,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1296,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1305,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1308,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1313,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1320,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1336,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1337,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1322,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1335,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1327,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1333,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1324,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1331,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1354,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1358,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demos",{"_index":559,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"index.html":{}}}],["dependencies",{"_index":470,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1416,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["deps",{"_index":511,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["describedby",{"_index":333,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":418,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":712,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyinstance",{"_index":866,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyinstance(options",{"_index":891,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroys",{"_index":893,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":691,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":413,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"contributing.html":{}}}],["detection",{"_index":350,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":1661,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1510,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1298,"title":{},"body":{"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1454,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":1714,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1549,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":1249,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["directive",{"_index":570,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{},"todo.html":{}}}],["directives",{"_index":587,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["directives/ngx",{"_index":245,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{}}}],["disability",{"_index":1529,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":648,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["disableautosave",{"_index":1144,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["disabled",{"_index":305,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":309,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1480,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":651,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["displaying",{"_index":103,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["distinctuntilchanged",{"_index":912,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["distinctuntilchanged((a",{"_index":990,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["distribute",{"_index":1757,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1806,"title":{},"body":{"todo.html":{}}}],["docheck",{"_index":229,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["docs",{"_index":562,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"changelog.html":{},"index.html":{}}}],["document.createelement('div",{"_index":431,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["documentation",{"_index":1446,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["doing",{"_index":909,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["dom",{"_index":547,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["don't",{"_index":205,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["due",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1618,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":1810,"title":{},"body":{"todo.html":{}}}],["each",{"_index":190,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1064,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"index.html":{}}}],["edit",{"_index":1596,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":543,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":118,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["editor's",{"_index":532,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["editor.destroy",{"_index":1001,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor.isready",{"_index":944,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.method",{"_index":959,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.namespace][options.method",{"_index":960,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor_js_tool_injector",{"_index":126,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["editorconfig",{"_index":165,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["editorconfig.holder",{"_index":938,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onchange",{"_index":935,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onready",{"_index":940,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorform",{"_index":1143,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["editorform.value.pagename",{"_index":1214,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["editorinstance",{"_index":320,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs",{"_index":12,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["editorjs'},{'name",{"_index":573,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["editorjs.component",{"_index":501,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{}}}],["editorjs.directive",{"_index":246,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{}}}],["editorjs.directive.ts",{"_index":613,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:106",{"_index":640,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:112",{"_index":654,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:118",{"_index":671,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:124",{"_index":675,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:130",{"_index":673,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:136",{"_index":668,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:142",{"_index":674,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:148",{"_index":676,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:152",{"_index":635,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:168",{"_index":700,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:175",{"_index":703,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:182",{"_index":705,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:189",{"_index":707,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:198",{"_index":678,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:215",{"_index":685,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:251",{"_index":679,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:284",{"_index":697,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":638,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":658,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":660,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:72",{"_index":661,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:78",{"_index":665,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:84",{"_index":650,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:90",{"_index":667,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:97",{"_index":655,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.module.ts",{"_index":786,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.module.ts:30",{"_index":789,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":195,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{}}}],["editorjs/code",{"_index":1361,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["editorjs/editorjs",{"_index":76,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["editorjs/editorjs.component",{"_index":250,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs/editorjs.module",{"_index":779,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{}}}],["editorjs/embed",{"_index":1366,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["editorjs/header",{"_index":397,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["editorjs/image",{"_index":1369,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["editorjs/inline",{"_index":1374,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["editorjs/link",{"_index":1377,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["editorjs/list",{"_index":1379,"title":{},"body":{"modules/PluginListModule.html":{}}}],["editorjs/ngx",{"_index":7,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["editorjs/paragraph",{"_index":1382,"title":{},"body":{"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{}}}],["editorjs/quote",{"_index":1387,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["editorjs/simple",{"_index":1390,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["editorjs/src/lib/config/editor",{"_index":1704,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":1708,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":215,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.module.ts",{"_index":484,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.module.ts:63",{"_index":490,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":612,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":785,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":852,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:138",{"_index":872,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:177",{"_index":903,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:191",{"_index":882,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:204",{"_index":906,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:220",{"_index":895,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:231",{"_index":899,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:242",{"_index":901,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:260",{"_index":897,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:271",{"_index":892,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:288",{"_index":889,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:61",{"_index":869,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:87",{"_index":887,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":8,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":20,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":516,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/editorjs",{"_index":159,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["editorjs/src/lib/types/injector.ts",{"_index":168,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":137,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:18",{"_index":1394,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:28",{"_index":1395,"title":{},"body":{"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:52",{"_index":143,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":382,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/testing/ng",{"_index":446,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":417,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:11",{"_index":423,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:12",{"_index":426,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":427,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:14",{"_index":424,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":422,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:3",{"_index":466,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":467,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/warning",{"_index":1393,"title":{},"body":{"modules/PluginWarningModule.html":{}}}],["editorjs@1.2.0",{"_index":1450,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":1439,"title":{},"body":{"changelog.html":{}}}],["editorjs@2.0.0",{"_index":1426,"title":{},"body":{"changelog.html":{}}}],["editorjs@3.0.0",{"_index":1409,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":793,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":480,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":252,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":198,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/variables.html":{}}}],["editorjschange",{"_index":156,"title":{"interfaces/EditorJSChange.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjsclass",{"_index":167,"title":{"interfaces/EditorJSClass.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsinstance",{"_index":201,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":181,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["editorjsmaterialform",{"_index":214,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjsplugin",{"_index":91,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["editormap",{"_index":148,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorservice",{"_index":346,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["edits",{"_index":1600,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":636,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1577,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":349,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["elementref",{"_index":633,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["email",{"_index":1483,"title":{},"body":{"contributing.html":{}}}],["embed",{"_index":1365,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["emits",{"_index":669,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["empathy",{"_index":1559,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":311,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["empty(empty",{"_index":314,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["enable",{"_index":1164,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enableautosave",{"_index":1145,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enableautosave(autosavetime",{"_index":1162,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enabled",{"_index":1208,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enablelongstacktrace",{"_index":464,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["enables",{"_index":1238,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["end",{"_index":1491,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1655,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1632,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":856,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["enter",{"_index":1212,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["entire",{"_index":1236,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["entity",{"_index":1350,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1355,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1356,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":1032,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["enum",{"_index":82,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["enumerations",{"_index":1696,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1495,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":277,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["error('error",{"_index":747,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["error(`no",{"_index":961,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["errorstate",{"_index":278,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":878,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["ethnicity",{"_index":1530,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":155,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"contributing.html":{},"license.html":{}}}],["eventemitter",{"_index":462,"title":{},"body":{"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{}}}],["eventemitter(false",{"_index":463,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["events",{"_index":1721,"title":{},"body":{"index.html":{}}}],["everyone",{"_index":1524,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":261,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{}}}],["examples",{"_index":1502,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":813,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["excludelist",{"_index":814,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludelist.includes(key",{"_index":830,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":163,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":695,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["exiting",{"_index":1434,"title":{},"body":{"changelog.html":{}}}],["expand",{"_index":1108,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["expanded",{"_index":1464,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1589,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1523,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1551,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1579,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["exported",{"_index":95,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["exporting",{"_index":776,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{}}}],["exports",{"_index":474,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":1807,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1497,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":1775,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1533,"title":{},"body":{"contributing.html":{}}}],["extends",{"_index":40,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"interfaces/Tag.html":{}}}],["face",{"_index":1657,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":507,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":1591,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1656,"title":{},"body":{"contributing.html":{}}}],["falls",{"_index":714,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["false",{"_index":164,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":1151,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["feature",{"_index":1237,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["features",{"_index":1437,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["field",{"_index":240,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["field'},{'name",{"_index":575,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["field.component",{"_index":780,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["field.component.html",{"_index":264,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.scss",{"_index":266,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts",{"_index":218,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["field.component.ts:102",{"_index":1163,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:109",{"_index":1161,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:116",{"_index":1170,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:125",{"_index":1159,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:144",{"_index":1172,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:155",{"_index":1169,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:172",{"_index":1166,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:25",{"_index":1157,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:30",{"_index":1156,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:34",{"_index":1177,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:51",{"_index":1153,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:86",{"_index":1180,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:93",{"_index":1182,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.module",{"_index":792,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["field.module').then(m",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field.module.ts",{"_index":774,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["field.module.ts:29",{"_index":778,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{}}}],["field/containers/material",{"_index":1140,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field/editorjs",{"_index":217,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["field/material",{"_index":1135,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{}}}],["filed",{"_index":1461,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1503,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["filter",{"_index":913,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["filter(([key",{"_index":829,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter(haschanged",{"_index":994,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["filtering",{"_index":812,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["finaltools",{"_index":836,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":1402,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["find(key",{"_index":742,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["first",{"_index":525,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["fitness",{"_index":1780,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":393,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["fixedheader",{"_index":383,"title":{"classes/FixedHeader.html":{}},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["flex",{"_index":1246,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["float",{"_index":326,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fn",{"_index":458,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["focus",{"_index":347,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["focused",{"_index":292,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["focused(focused",{"_index":296,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1556,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":221,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["folder",{"_index":1730,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1487,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1765,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":487,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":565,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":1274,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["formbuilder",{"_index":1152,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["formcontrol",{"_index":645,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["forms",{"_index":566,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{}}}],["formsmodule",{"_index":500,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["formsmodule,commonmodule",{"_index":1129,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["forroot",{"_index":488,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["forroot(@optional",{"_index":514,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":489,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":230,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1515,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1522,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":259,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"todo.html":{}}}],["fully",{"_index":1716,"title":{},"body":{"index.html":{}}}],["function",{"_index":179,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginHeaderModule.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1698,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1764,"title":{},"body":{"license.html":{}}}],["further",{"_index":1630,"title":{},"body":{"contributing.html":{}}}],["gender",{"_index":1531,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1738,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generated",{"_index":1735,"title":{},"body":{"index.html":{}}}],["getasjson",{"_index":1272,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getautosave",{"_index":1179,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["getblocks",{"_index":1267,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getdemodata('material",{"_index":1199,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["getdemodata('ngx",{"_index":1280,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["geteditor",{"_index":699,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(options",{"_index":894,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":702,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getmenu",{"_index":1181,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["getpages",{"_index":1270,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getplugin",{"_index":799,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getplugin(key",{"_index":806,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getplugins",{"_index":800,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithexclude",{"_index":801,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithexclude(excludelist",{"_index":810,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithinclude",{"_index":802,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithinclude(includelist",{"_index":815,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gets",{"_index":325,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["getservice",{"_index":704,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getting",{"_index":1397,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"changelog.html":{}}}],["gettools",{"_index":803,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(excludetools",{"_index":818,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["gettouched",{"_index":706,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":410,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["good",{"_index":1476,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1552,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1743,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1798,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1178,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["guid",{"_index":1340,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":1443,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":853,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["handling",{"_index":797,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"changelog.html":{}}}],["happens",{"_index":859,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["harassing",{"_index":1634,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1521,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1611,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":624,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["haschanged.blocks",{"_index":1190,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["hassaved",{"_index":625,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["hassaved(options",{"_index":896,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["hassavedmap",{"_index":197,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":44,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{}}}],["headerblock",{"_index":49,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":531,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["helper",{"_index":873,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["helpers",{"_index":1809,"title":{},"body":{"todo.html":{}}}],["here",{"_index":486,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{}}}],["hereby",{"_index":1742,"title":{},"body":{"license.html":{}}}],["hideable",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["hidetoolbar",{"_index":519,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["hold",{"_index":530,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["holder",{"_index":183,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":1785,"title":{},"body":{"license.html":{}}}],["home",{"_index":554,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["home'},{'name",{"_index":574,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["host",{"_index":321,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["hostbinding",{"_index":231,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":332,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":327,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":708,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":716,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":628,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":569,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["http://contributor",{"_index":1668,"title":{},"body":{"contributing.html":{}}}],["https://angular.io/api/core/ngmodule",{"_index":822,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["https://angular.io/api/core/ngzone",{"_index":919,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://angular.io/guide/observables",{"_index":920,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://editorjs.io/api",{"_index":834,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["https://editorjs.io/provide",{"_index":108,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["https://github.com/editor",{"_index":820,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["i'll",{"_index":1471,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1441,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1442,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":271,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["identity",{"_index":1532,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":334,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":338,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ignore",{"_index":739,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":50,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":1083,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1389,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image/simple",{"_index":1082,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":62,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1565,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":260,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{}}}],["implements",{"_index":270,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["implied",{"_index":1776,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["import('./demos/material",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imported",{"_index":1726,"title":{},"body":{"index.html":{}}}],["importing",{"_index":1066,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":509,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["improved",{"_index":1431,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1422,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1582,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1650,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":166,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["included",{"_index":1770,"title":{},"body":{"license.html":{}}}],["includelist",{"_index":817,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includelist.includes(key",{"_index":833,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includes",{"_index":1494,"title":{},"body":{"contributing.html":{}}}],["includetools",{"_index":741,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["including",{"_index":1752,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1545,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1500,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":16,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["individual",{"_index":1068,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["information",{"_index":178,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["init",{"_index":1167,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["initial",{"_index":122,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["initialblock",{"_index":520,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["initialized",{"_index":639,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject",{"_index":798,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjsinstance",{"_index":923,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(ngx_editorjs_config",{"_index":924,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":443,"title":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{}},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["injectables",{"_index":445,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["injected",{"_index":169,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injecting",{"_index":541,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":120,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":72,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["injectiontoken('editior_js_instance",{"_index":544,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editor_js_tool_injector",{"_index":128,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":199,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":202,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":542,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":540,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('plugin_config",{"_index":130,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('pluginclasses",{"_index":135,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":200,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectorapicalloptions",{"_index":209,"title":{"interfaces/InjectorApiCallOptions.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectorapicallresponse",{"_index":212,"title":{"interfaces/InjectorApiCallResponse.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectormethodoption",{"_index":203,"title":{"interfaces/InjectorMethodOption.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["inline",{"_index":81,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{}}}],["inlinecode",{"_index":1373,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["inlinetoolbar",{"_index":115,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["input",{"_index":232,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"modules/PluginHeaderModule.html":{},"todo.html":{}}}],["input'},{'name",{"_index":584,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["input('disabled",{"_index":308,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":295,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":290,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":302,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":283,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input.component",{"_index":1128,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input.component.ts",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input.module",{"_index":1097,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["input.module.ts",{"_index":1127,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input/mat",{"_index":1096,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["inputconfig",{"_index":1707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":622,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["inside",{"_index":364,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{}}}],["install",{"_index":1490,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["instance",{"_index":142,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":147,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["insulting/derogatory",{"_index":1570,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":1723,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":1488,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1514,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"overview.html":{}}}],["interfaces/pluginconfig.html",{"_index":823,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["internal",{"_index":191,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{}}}],["internally",{"_index":1418,"title":{},"body":{"changelog.html":{}}}],["investigated",{"_index":1641,"title":{},"body":{"contributing.html":{}}}],["isfocused",{"_index":626,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["isready",{"_index":419,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["isready(options",{"_index":898,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isreadymap",{"_index":196,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1482,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1459,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["istouched",{"_index":627,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["it's",{"_index":688,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["items",{"_index":36,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":821,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1362,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":412,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1370,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/paragraph",{"_index":1367,"title":{},"body":{"modules/PluginEmbedModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginWarningModule.html":{}}}],["json",{"_index":580,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"dependencies.html":{}}}],["json.stringify(blocks",{"_index":1285,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["json.stringify(changes.blocks.currentvalue",{"_index":734,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["json.stringify(changes.blocks.previousvalue",{"_index":733,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["key",{"_index":17,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["keys",{"_index":657,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{}}}],["kind",{"_index":1774,"title":{},"body":{"license.html":{}}}],["label",{"_index":102,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["language",{"_index":1546,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":140,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["lastchange",{"_index":752,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["lastchange(options",{"_index":900,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["lastchangemap",{"_index":193,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["layer",{"_index":1492,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["leadership",{"_index":1663,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":471,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["level",{"_index":45,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":1789,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1786,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":428,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["libraries",{"_index":1404,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":1406,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["libs/.../blocks.ts",{"_index":1815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":1699,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.component.ts",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.module.ts",{"_index":1701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../injector.ts",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../mat",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../module",{"_index":1702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../plugin.ts",{"_index":1703,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../plugins.ts",{"_index":1697,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../test.ts",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":6,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1740,"title":{},"body":{"license.html":{}}}],["license",{"_index":1737,"title":{"license.html":{}},"body":{}}],["life",{"_index":365,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["lifecycle",{"_index":359,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["limitation",{"_index":1753,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1777,"title":{},"body":{"license.html":{}}}],["line:use",{"_index":358,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["link",{"_index":107,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginLinkModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["links",{"_index":561,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["list",{"_index":26,"title":{"interfaces/List.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginListModule.html":{},"miscellaneous/typealiases.html":{}}}],["listblock",{"_index":39,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listener",{"_index":368,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["listners",{"_index":682,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["liststyle",{"_index":33,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["loadchildren",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":1142,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["local",{"_index":933,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["locations",{"_index":1499,"title":{},"body":{"contributing.html":{}}}],["lot",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["lt;code",{"_index":1225,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":1221,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":1222,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":1227,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":1224,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":1223,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":1219,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["m.ngxtinynodesmaterialformfielddemo",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":863,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["mail",{"_index":1619,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":614,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["maintain",{"_index":1646,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1518,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":1427,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":874,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["makes",{"_index":186,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["making",{"_index":1474,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["management",{"_index":854,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["managing",{"_index":1444,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":92,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map(blocks",{"_index":1284,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map_defaults",{"_index":192,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkey",{"_index":1013,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":1251,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["marker",{"_index":1381,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["mat",{"_index":216,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":593,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["matbuttonmodule",{"_index":595,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["matcardmodule",{"_index":597,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["match",{"_index":663,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["matches",{"_index":864,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["matching",{"_index":66,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":599,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["material",{"_index":251,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["material](https://material.angular.io",{"_index":257,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["matexpansionmodule",{"_index":601,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["matformfieldcontrol",{"_index":220,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":603,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{}}}],["matgridlistmodule",{"_index":604,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["maticonmodule",{"_index":606,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["matinputmodule",{"_index":608,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{}}}],["matlistmodule",{"_index":610,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["me@tane.dev",{"_index":1638,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":690,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["meantime",{"_index":1470,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1622,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1561,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":1147,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["menugroup",{"_index":1183,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["merchantability",{"_index":1779,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1508,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["merged",{"_index":1415,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":552,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["method",{"_index":184,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["method.call(editor",{"_index":964,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall",{"_index":963,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall.then",{"_index":965,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methods",{"_index":386,"title":{},"body":{"classes/FixedHeader.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["minheight",{"_index":521,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["minimum",{"_index":666,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":1695,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1739,"title":{},"body":{"license.html":{}}}],["mock",{"_index":449,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":448,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:16",{"_index":455,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":457,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":460,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":461,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":416,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["mockngzone",{"_index":444,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["mockplugin",{"_index":429,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["modify",{"_index":1755,"title":{},"body":{"license.html":{}}}],["module",{"_index":124,"title":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":469,"title":{"modules.html":{}},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["modulewithproviders",{"_index":496,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1448,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":348,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":1475,"title":{},"body":{"changelog.html":{}}}],["mouseevent",{"_index":341,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ms",{"_index":649,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["multi",{"_index":256,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1301,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["name",{"_index":104,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":210,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["nationality",{"_index":1534,"title":{},"body":{"contributing.html":{}}}],["necessary",{"_index":1643,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":693,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["needs",{"_index":662,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["new",{"_index":127,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":402,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["newdata.level",{"_index":405,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["newdata.text",{"_index":403,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["newpage",{"_index":1344,"title":{},"body":{"injectables/PagesService.html":{}}}],["next",{"_index":357,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["nextid",{"_index":272,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ng_value_accessor",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":372,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngcontrol",{"_index":237,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdocheck",{"_index":378,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":395,"title":{},"body":{"classes/FixedHeader.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{}}}],["ngonchanges",{"_index":620,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["ngonchanges(changes",{"_index":683,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":621,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":360,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngrx/effects",{"_index":1681,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["ngrx/store",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":123,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["ngx_editorjs_config",{"_index":502,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":588,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngxeditorjs.hassaved",{"_index":1291,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isfocused",{"_index":1290,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isready",{"_index":1287,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.istouched",{"_index":1289,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjsbasecomponent",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxeditorjscomponent",{"_index":249,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjscomponentmodule",{"_index":468,"title":{"modules/NgxEditorJSComponentModule.html":{}},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsconfig",{"_index":515,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":1184,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngxeditorjsdemohomecomponent",{"_index":545,"title":{"components/NgxEditorJSDemoHomeComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemomaterialmodule",{"_index":590,"title":{"modules/NgxEditorJSDemoMaterialModule.html":{}},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemomodule",{"_index":1024,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":1039,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":244,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":748,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjsinstanceservice",{"_index":1725,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmaterialfieldcomponent",{"_index":1720,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":255,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":324,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmatfieldmodule",{"_index":769,"title":{"modules/NgxEditorJSMatFieldModule.html":{}},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsmodule",{"_index":781,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":538,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["ngxeditorjsmoduleconfig",{"_index":421,"title":{"interfaces/NgxEditorJSModuleConfig.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["ngxeditorjspluginservice",{"_index":794,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["ngxeditorjspluginservicemodule",{"_index":845,"title":{"modules/NgxEditorJSPluginServiceModule.html":{}},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginsmodule",{"_index":1030,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":247,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{}}}],["ngxjsonviewermodule",{"_index":1045,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["ngxtinynodescomponentsmodule",{"_index":1087,"title":{"modules/NgxTinynodesComponentsModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodescoremodule",{"_index":1042,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["ngxtinynodesmaterialformfielddemo",{"_index":1130,"title":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmaterialformfielddemocomponent",{"_index":576,"title":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["ngxtinynodesmatfieldcomponent",{"_index":1100,"title":{"interfaces/NgxTinynodesMatFieldComponent.html":{}},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["ngxtinynodesmatjsonoutputcomponent",{"_index":579,"title":{"components/NgxTinynodesMatJsonOutputComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["ngxtinynodesmatjsonoutputmodule",{"_index":1091,"title":{"modules/NgxTinynodesMatJsonOutputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmattaginputcomponent",{"_index":582,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodesmattaginputmodule",{"_index":1092,"title":{"modules/NgxTinynodesMatTagInputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":450,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["noninfringement",{"_index":1783,"title":{},"body":{"license.html":{}}}],["normalize",{"_index":394,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["normalizedata",{"_index":387,"title":{},"body":{"classes/FixedHeader.html":{}}}],["normalizedata(data",{"_index":391,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["note",{"_index":1485,"title":{},"body":{"contributing.html":{}}}],["notice",{"_index":1768,"title":{},"body":{"license.html":{}}}],["now",{"_index":1209,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["npm",{"_index":1690,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/nx",{"_index":1462,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":362,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":48,"title":{},"body":{"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["numbers",{"_index":1501,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1736,"title":{},"body":{"index.html":{}}}],["object",{"_index":97,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["object.entries(this.getpluginswithexclude(excludetools)).reduce",{"_index":835,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginconfigmap",{"_index":828,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(changes",{"_index":738,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["object.keys(this.editormap).foreach(holder",{"_index":1004,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["objects",{"_index":1713,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obligated",{"_index":1645,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":701,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":1746,"title":{},"body":{"license.html":{}}}],["of(response",{"_index":975,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["offensive",{"_index":1610,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1617,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1466,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1628,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":400,"title":{},"body":{"classes/FixedHeader.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginHeaderModule.html":{},"contributing.html":{}}}],["onchange",{"_index":187,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":617,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["onclick",{"_index":717,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":342,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":233,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ones",{"_index":1732,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":234,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["online",{"_index":1627,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":189,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onstable",{"_index":451,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["open",{"_index":1202,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["option",{"_index":204,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"todo.html":{}}}],["optional",{"_index":52,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":907,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options",{"_index":161,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"todo.html":{}}}],["options.config",{"_index":929,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data",{"_index":977,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.blocks",{"_index":981,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.time",{"_index":978,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.version",{"_index":979,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.holder",{"_index":968,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.method",{"_index":962,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.namespace",{"_index":958,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.skipsave",{"_index":974,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":29,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1540,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1575,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":932,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"license.html":{}}}],["out",{"_index":483,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":526,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["output'},{'name",{"_index":581,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["output.component",{"_index":1120,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output.component.html",{"_index":1106,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts",{"_index":1105,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:11",{"_index":1111,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:14",{"_index":1110,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:19",{"_index":1113,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:23",{"_index":1112,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.module",{"_index":1099,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["output.module.ts",{"_index":1119,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output/mat",{"_index":1098,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["outputdata",{"_index":144,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["outputs",{"_index":623,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["outside",{"_index":855,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["over",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":1247,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["override",{"_index":1168,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["overview",{"_index":1799,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1484,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1451,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["page",{"_index":586,"title":{"interfaces/Page.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"todo.html":{}}}],["page.id",{"_index":1346,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1255,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagecontainercomponent",{"_index":585,"title":{"components/PageContainerComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageeditor",{"_index":1176,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["pageid",{"_index":1325,"title":{},"body":{"injectables/PagesService.html":{}}}],["pagename",{"_index":1174,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["pages",{"_index":1154,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1309,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1302,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1303,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1304,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pagesquery",{"_index":1294,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesservice",{"_index":1149,"title":{"injectables/PagesService.html":{}},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesstate",{"_index":1310,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pagesstore",{"_index":1295,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":1029,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":1175,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":1254,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":1233,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["paragraph",{"_index":41,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":43,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":282,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginHeaderModule.html":{}}}],["parameter",{"_index":1160,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["parameters",{"_index":390,"title":{},"body":{"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":513,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["parse",{"_index":177,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["parseint(data.level",{"_index":406,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["participants",{"_index":1563,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1519,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1781,"title":{},"body":{"license.html":{}}}],["pass",{"_index":109,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["passed",{"_index":537,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["paste",{"_index":1226,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["patches",{"_index":644,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["path",{"_index":1138,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":687,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["peer",{"_index":1812,"title":{},"body":{"todo.html":{}}}],["per",{"_index":133,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["permanent",{"_index":1659,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1605,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1511,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1762,"title":{},"body":{"license.html":{}}}],["person",{"_index":1745,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1535,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1763,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1576,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":969,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(take(1",{"_index":998,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(takeuntil(this.ondestroy",{"_index":375,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["pipeline",{"_index":1805,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":1734,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":286,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["placeholder(placeholder",{"_index":291,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1479,"title":{},"body":{"contributing.html":{}}}],["pledge",{"_index":1513,"title":{},"body":{"contributing.html":{}}}],["pluck",{"_index":1185,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pluck('blocks",{"_index":1277,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["plug",{"_index":1065,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":38,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugin.config",{"_index":843,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.inlinetoolbar",{"_index":841,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.plugin",{"_index":837,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":838,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.type",{"_index":840,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin_config",{"_index":129,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["pluginclasses",{"_index":134,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["plugincodemodule",{"_index":1051,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginconfig",{"_index":98,"title":{"interfaces/PluginConfig.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigmap",{"_index":132,"title":{"interfaces/PluginConfigMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigs",{"_index":1712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pluginembedmodule",{"_index":1052,"title":{"modules/PluginEmbedModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginEmbedModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginheadermodule",{"_index":415,"title":{"modules/PluginHeaderModule.html":{}},"body":{"classes/FixedHeader.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1053,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{}}}],["plugininlinecodemodule",{"_index":1054,"title":{"modules/PluginInlineCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1055,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlistmodule",{"_index":1056,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginmap",{"_index":832,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pluginmarkermodule",{"_index":1057,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginname",{"_index":105,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginparagraphmodule",{"_index":1058,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginproperty",{"_index":88,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["pluginquotemodule",{"_index":1059,"title":{"modules/PluginQuoteModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginQuoteModule.html":{},"modules.html":{},"overview.html":{}}}],["plugins",{"_index":78,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugins.module.ts",{"_index":1063,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/code/code.module",{"_index":1069,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/embed/embed.module",{"_index":1070,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1071,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1072,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/inline",{"_index":1073,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1076,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1077,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1078,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1079,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/quote/quote.module",{"_index":1080,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1081,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1062,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1359,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/embed/embed.module.ts",{"_index":1364,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":385,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts:18",{"_index":392,"title":{},"body":{"classes/FixedHeader.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts:8",{"_index":389,"title":{},"body":{"classes/FixedHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1368,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/inline",{"_index":1371,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1376,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1378,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1380,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1384,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/quote/quote.module.ts",{"_index":1385,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1388,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/plugins/warning/warning.module.ts",{"_index":1392,"title":{},"body":{"modules/PluginWarningModule.html":{}}}],["plugins/src/lib/services/plugin",{"_index":795,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":69,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:107",{"_index":1363,"title":{},"body":{"interfaces/PluginConfigMap.html":{}}}],["plugins/src/lib/types/plugins.ts:43",{"_index":1396,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":70,"title":{},"body":{"interfaces/BlockData.html":{}}}],["plugins/src/lib/util/plugin.ts",{"_index":1710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plugins/warning/warning.module",{"_index":1084,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins@2.0.0",{"_index":1411,"title":{},"body":{"changelog.html":{}}}],["pluginsimpleimagemodule",{"_index":1060,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{}}}],["plugintype",{"_index":85,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugintypes",{"_index":83,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{}}}],["plugintypes.block",{"_index":86,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugintypes.inline",{"_index":87,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["pluginwarningmodule",{"_index":1061,"title":{"modules/PluginWarningModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginWarningModule.html":{},"modules.html":{},"overview.html":{}}}],["pointing",{"_index":1229,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["policies",{"_index":1652,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1572,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1772,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1498,"title":{},"body":{"contributing.html":{}}}],["positive",{"_index":1544,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1067,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1653,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1620,"title":{},"body":{"contributing.html":{}}}],["private",{"_index":287,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{},"index.html":{}}}],["process",{"_index":692,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["professional",{"_index":1583,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1417,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["project's",{"_index":1662,"title":{},"body":{"contributing.html":{}}}],["promise",{"_index":425,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["promise.resolve",{"_index":436,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["properties",{"_index":14,"title":{},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["property",{"_index":55,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["protected",{"_index":353,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":253,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":37,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":824,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":100,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":267,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"overview.html":{}}}],["provides",{"_index":175,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["providing",{"_index":568,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["provied",{"_index":539,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":273,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{}}}],["publish",{"_index":1756,"title":{},"body":{"license.html":{},"todo.html":{}}}],["publishing",{"_index":1574,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1489,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1782,"title":{},"body":{"license.html":{}}}],["query",{"_index":1314,"title":{},"body":{"injectables/PagesService.html":{}}}],["queryentity",{"_index":1306,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["quote",{"_index":1386,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["r",{"_index":966,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["race",{"_index":1537,"title":{},"body":{"contributing.html":{}}}],["re",{"_index":1413,"title":{},"body":{"changelog.html":{}}}],["reactive",{"_index":1210,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"index.html":{}}}],["reactiveformsmodule",{"_index":1033,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["read",{"_index":318,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/PageContainerComponent.html":{}}}],["readme",{"_index":1729,"title":{},"body":{"index.html":{}}}],["readme.md",{"_index":1493,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":319,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["ready",{"_index":150,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["readymap",{"_index":152,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["reasonably",{"_index":1580,"title":{},"body":{"contributing.html":{}}}],["reduce((pluginmap",{"_index":831,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":351,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["reflect",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":1648,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1525,"title":{},"body":{"contributing.html":{}}}],["regular",{"_index":1240,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["reject",{"_index":1597,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":740,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["release",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":1410,"title":{},"body":{"changelog.html":{}}}],["religion",{"_index":1538,"title":{},"body":{"contributing.html":{}}}],["remark",{"_index":925,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remarks",{"_index":952,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remove",{"_index":399,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{},"contributing.html":{}}}],["removeblock",{"_index":1316,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1330,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1329,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{}}}],["removes",{"_index":1328,"title":{},"body":{"injectables/PagesService.html":{}}}],["render",{"_index":430,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{}}}],["repercussions",{"_index":1660,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":1360,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":411,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["report",{"_index":1455,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1635,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1649,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1478,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1504,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1629,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1626,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1616,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":1006,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["requied",{"_index":301,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["require",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":182,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"index.html":{}}}],["required(required",{"_index":303,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["reset",{"_index":482,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["resetting",{"_index":911,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["resolved",{"_index":954,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["respectful",{"_index":1548,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":211,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["responsibilities",{"_index":1585,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1595,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1586,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1751,"title":{},"body":{"license.html":{}}}],["result",{"_index":65,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":67,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":280,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginHeaderModule.html":{},"miscellaneous/functions.html":{}}}],["returning",{"_index":1706,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":171,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginHeaderModule.html":{},"miscellaneous/functions.html":{}}}],["reviewed",{"_index":1640,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1512,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":1594,"title":{},"body":{"contributing.html":{}}}],["rights",{"_index":1754,"title":{},"body":{"license.html":{}}}],["root",{"_index":491,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["routable",{"_index":1141,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["route",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":1034,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1047,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forchild(routes",{"_index":1139,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["routes",{"_index":1137,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["run",{"_index":452,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["run(fn",{"_index":456,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":453,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":459,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":145,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":243,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":522,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["sanitizerconfig",{"_index":536,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["save",{"_index":141,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"todo.html":{}}}],["save(options",{"_index":902,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":672,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["savedmap",{"_index":153,"title":{"interfaces/SavedMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["saver",{"_index":420,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{}}}],["saving",{"_index":1231,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1506,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1612,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1467,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":1248,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["searchable",{"_index":1717,"title":{},"body":{"index.html":{}}}],["second",{"_index":879,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["seconds",{"_index":1207,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["section",{"_index":563,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["see",{"_index":409,"title":{},"body":{"classes/FixedHeader.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["selection",{"_index":1811,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":262,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["self",{"_index":235,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":1760,"title":{},"body":{"license.html":{}}}],["semver",{"_index":1507,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1654,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":630,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["service.module",{"_index":1086,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["service.module.ts",{"_index":848,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["service.service",{"_index":851,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["service.service.ts",{"_index":796,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:13",{"_index":805,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:23",{"_index":808,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:32",{"_index":807,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:40",{"_index":811,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:54",{"_index":816,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:68",{"_index":819,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.ts",{"_index":160,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["services",{"_index":616,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{}}}],["services/editorjs.service",{"_index":248,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{}}}],["services/plugin",{"_index":1085,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["set",{"_index":111,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["setblocks",{"_index":1317,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1332,"title":{},"body":{"injectables/PagesService.html":{}}}],["setdescribedbyids(ids",{"_index":336,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sets",{"_index":493,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["setting",{"_index":1584,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":90,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["setup",{"_index":860,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["setupsubjects(options",{"_index":1012,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["several",{"_index":858,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1539,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1564,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1769,"title":{},"body":{"license.html":{}}}],["ships",{"_index":1731,"title":{},"body":{"index.html":{}}}],["shortcut",{"_index":106,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["shouldlabelfloat",{"_index":328,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["show",{"_index":659,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["showing",{"_index":1558,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":529,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["shows",{"_index":567,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["sign",{"_index":1509,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1391,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":684,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1228,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simulatezoneexit",{"_index":454,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":219,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["site",{"_index":1401,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["size",{"_index":1528,"title":{},"body":{"contributing.html":{}}}],["skipsave",{"_index":206,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["skipself",{"_index":497,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1473,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1621,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1748,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["spaces",{"_index":1615,"title":{},"body":{"contributing.html":{}}}],["spec\\.ts",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":1651,"title":{},"body":{"contributing.html":{}}}],["specifies",{"_index":99,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["standards",{"_index":1541,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":1217,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["started",{"_index":1398,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":151,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["statechanges",{"_index":274,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["states",{"_index":921,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["static",{"_index":172,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{}}}],["still",{"_index":1211,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["store",{"_index":1299,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":1275,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":1041,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["store/pages/pages.service",{"_index":1186,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":1357,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stretch",{"_index":60,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":61,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":35,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":27,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":265,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["subject",{"_index":241,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"license.html":{}}}],["subjects",{"_index":698,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["sublicense",{"_index":1758,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":370,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["subscribe(change",{"_index":753,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(data",{"_index":1200,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["subscribe(editor",{"_index":999,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscribe(focused",{"_index":376,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe(haschanged",{"_index":1189,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["subscribe(isready",{"_index":750,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(saved",{"_index":755,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscriptions",{"_index":890,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["substantial",{"_index":1771,"title":{},"body":{"license.html":{}}}],["such",{"_index":876,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["sunday",{"_index":1452,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":345,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(config",{"_index":401,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["super(editorservice",{"_index":354,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["super(store",{"_index":1312,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["support",{"_index":114,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"index.html":{},"modules.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":79,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["supports",{"_index":28,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["svg",{"_index":1796,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":914,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["switchmap((data",{"_index":1281,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["switchmap(async",{"_index":957,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["switchmap(response",{"_index":973,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["t",{"_index":22,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["tag",{"_index":583,"title":{"interfaces/Tag.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["tag_component_field_control",{"_index":1126,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tag_component_value_accessor",{"_index":1125,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tags",{"_index":1213,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["take",{"_index":915,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["take(1",{"_index":956,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["takes",{"_index":788,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["takeuntil",{"_index":242,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(this.ondestroy",{"_index":1188,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["tane",{"_index":1733,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":916,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["tap((response",{"_index":970,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["team",{"_index":1637,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":546,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["templateurl",{"_index":263,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["temporarily",{"_index":1604,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1658,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":434,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["text",{"_index":42,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["this._disabled",{"_index":307,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":313,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":294,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":289,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":300,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":281,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.apicall",{"_index":967,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.app",{"_index":1198,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.autofocus",{"_index":761,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":729,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave$.asobservable",{"_index":1192,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.autosave$.next(0",{"_index":1195,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.autosave$.next(autosavetime",{"_index":1194,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.blockplaceholder",{"_index":764,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":438,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.length",{"_index":767,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1283,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.cd.markforcheck",{"_index":720,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.cleanupsubjects",{"_index":1003,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":928,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":744,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.createonchange.call(this",{"_index":937,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createonready.call(this",{"_index":941,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.describedby",{"_index":337,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroy",{"_index":437,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.destroyinstance",{"_index":1005,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorform.patchvalue",{"_index":1191,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorform.reset",{"_index":1197,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorjs(editorconfig",{"_index":943,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorjs.version",{"_index":980,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder",{"_index":947,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].next(editor",{"_index":948,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder",{"_index":983,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].complete",{"_index":1022,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].pipe(filter(editor",{"_index":985,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":724,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorservice.clear",{"_index":1279,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorservice.lastchange",{"_index":1276,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorservice.save",{"_index":1196,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editorservice.update",{"_index":1282,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.el.nativeelement",{"_index":723,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":745,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":330,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":379,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.excludetools",{"_index":728,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.expand",{"_index":1114,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["this.fb.group",{"_index":1173,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.focused",{"_index":329,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.geteditor(options",{"_index":997,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.geteditor(options).pipe",{"_index":955,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.getfocusmonitor(this.editorinstance.element",{"_index":374,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.gettools(options.excludetools",{"_index":930,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschanged.emit(change",{"_index":754,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassaved.next(saved",{"_index":756,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassavedmap[options.holder",{"_index":995,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].asobservable",{"_index":996,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].next(true",{"_index":971,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hidetoolbar",{"_index":762,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":736,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.id",{"_index":722,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":763,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isready",{"_index":435,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.isready.emit(isready",{"_index":751,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isreadymap[holder].next(true",{"_index":950,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder",{"_index":986,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].asobservable",{"_index":987,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].next(true",{"_index":1011,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].value",{"_index":1010,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.istouched.emit(true",{"_index":719,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.lastchangemap[options.holder",{"_index":988,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(change",{"_index":1008,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(response.result",{"_index":972,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].pipe",{"_index":989,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.menu",{"_index":1193,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.menu$.next(data.links",{"_index":1201,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.minheight",{"_index":765,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.ngcontrol",{"_index":361,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":380,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":381,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":363,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ondestroy$.complete",{"_index":758,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.ondestroy$.next(true",{"_index":757,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.onstable.emit(null",{"_index":465,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.ontouch",{"_index":298,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ontouch(event",{"_index":343,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pages",{"_index":1342,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":1278,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.pluginconfigmap",{"_index":826,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginconfigmap[key",{"_index":827,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.plugins.gettools(excludetools",{"_index":1023,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.query.selectall",{"_index":1343,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.ref.tick",{"_index":951,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.reset",{"_index":1205,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":766,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.save(options",{"_index":976,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.saver",{"_index":440,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.service",{"_index":749,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.createinstance",{"_index":727,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroyinstance",{"_index":759,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.geteditor",{"_index":721,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.update",{"_index":735,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setupservicesubscriptions",{"_index":373,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.setupsubjects",{"_index":946,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.statechanges.next",{"_index":285,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.store.add(newpage",{"_index":1345,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1348,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update(pageid",{"_index":1349,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1347,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.touched$.asobservable",{"_index":725,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":718,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.update",{"_index":1203,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.version",{"_index":433,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.zone.run",{"_index":1002,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":945,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular",{"_index":1000,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular(async",{"_index":942,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder",{"_index":1014,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].complete",{"_index":1020,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].next(value",{"_index":1016,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["threatening",{"_index":1609,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":746,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":870,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["tidy",{"_index":1419,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":157,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":641,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["tinynode",{"_index":1718,"title":{},"body":{"index.html":{}}}],["tinynodes",{"_index":577,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/ngx",{"_index":557,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"changelog.html":{},"index.html":{}}}],["title",{"_index":1146,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["today",{"_index":1408,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":398,"title":{"todo.html":{}},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{},"todo.html":{}}}],["todos",{"_index":1803,"title":{},"body":{"todo.html":{}}}],["toggleexpand",{"_index":1107,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["token",{"_index":121,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":89,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["tool.config",{"_index":844,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["tool.inlinetoolbar",{"_index":842,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["tool.shortcut",{"_index":839,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["toolbar",{"_index":527,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["toolbaropen",{"_index":922,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["toolconstructable",{"_index":75,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["tools",{"_index":93,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["toolsettings",{"_index":74,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["toolsettingsmap",{"_index":94,"title":{"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["tort",{"_index":1792,"title":{},"body":{"license.html":{}}}],["touched",{"_index":631,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["towards",{"_index":1560,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":548,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["trigger",{"_index":369,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["triggered",{"_index":857,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["trolling",{"_index":1569,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":112,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tslint:disable",{"_index":356,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["two",{"_index":686,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1813,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":936,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types",{"_index":77,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["types/blocks",{"_index":711,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["types/config",{"_index":503,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/editorjs",{"_index":917,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/injector",{"_index":504,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":918,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":396,"title":{},"body":{"classes/FixedHeader.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["typescript",{"_index":176,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["typing",{"_index":1218,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["unacceptable",{"_index":1562,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":119,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["under",{"_index":1405,"title":{},"body":{"changelog.html":{}}}],["underlying",{"_index":316,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{}}}],["underneath",{"_index":1724,"title":{},"body":{"index.html":{}}}],["unique",{"_index":323,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unlike",{"_index":953,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["unordered",{"_index":30,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unreleased",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["unsubscribe",{"_index":371,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":1469,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1566,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":367,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{}}}],["update",{"_index":861,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["update(data",{"_index":1171,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["update(options",{"_index":905,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":689,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["updates",{"_index":1239,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{}}}],["upgraded",{"_index":1435,"title":{},"body":{"changelog.html":{}}}],["upsert",{"_index":1318,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1334,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":51,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1722,"title":{},"body":{"index.html":{}}}],["use",{"_index":101,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":116,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"index.html":{}}}],["useexisting",{"_index":254,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":510,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["useful",{"_index":908,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["userplugins",{"_index":664,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["uses",{"_index":926,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["usevalue",{"_index":414,"title":{},"body":{"classes/FixedHeader.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["using",{"_index":777,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["util/plugin",{"_index":850,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["value",{"_index":279,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":284,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":149,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":571,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["variables",{"_index":1496,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":173,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginHeaderModule.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["versioning",{"_index":1505,"title":{},"body":{"contributing.html":{}}}],["via",{"_index":84,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["viewchild",{"_index":236,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/PageContainerComponent.html":{}}}],["viewchild('editorinstance",{"_index":317,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["viewchild('ngxeditorjs",{"_index":1266,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["viewer",{"_index":1046,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["viewpoints",{"_index":1550,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":1715,"title":{},"body":{"index.html":{}}}],["void",{"_index":188,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["wait",{"_index":694,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":1727,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1297,"title":{},"body":{"modules/PageStoreModule.html":{},"modules/PluginWarningModule.html":{}}}],["warranties",{"_index":1778,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1773,"title":{},"body":{"license.html":{}}}],["way",{"_index":564,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["wednesday",{"_index":1423,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":1516,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":1421,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1790,"title":{},"body":{"license.html":{}}}],["width",{"_index":1242,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1599,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1481,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":59,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":56,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":787,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["without",{"_index":1440,"title":{},"body":{"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":528,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["work",{"_index":1235,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["written",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":495,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":447,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":481,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockData.html":{"url":"interfaces/BlockData.html","title":"interface - BlockData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlockData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Block Data interface\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject which is the last save from the EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:52\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        excludeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        excludeTools\n                                    \n                                \n                                \n                                    \n                                        excludeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from '@editorjs/editorjs';\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  excludeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSChange.html":{"url":"interfaces/EditorJSChange.html","title":"interface - EditorJSChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An EditorJS change event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Blocks in the change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the change\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSClass.html":{"url":"interfaces/EditorJSClass.html","title":"interface - EditorJSClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the injected EditorJS class, returns the static\nclass of EditorJS with the version and that creates the instance and provides\nthe Typescript parse with type information\n\n            \n\n            \n                Extends\n            \n            \n                        Function\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    EditorJS version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                    MatFormFieldControl\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSComponent } from '../editorjs/editorjs.component';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends MatFormFieldControl,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck {}\n\n/**\n * This component provides a [Material](https://material.angular.io) compatible `` component.\n * It provides a full implementation of all the required properties of a Material component\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxEditorJSMatFieldComponent extends NgxEditorJSComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild('editorInstance', { read: NgxEditorJSDirective, static: true })\n  public readonly editorInstance: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Constructor for the Material field, as this extends the `NgxEditorJSComponent` component\n   * we call `super()` to get all the properties of that component\n   * @param editorService The NgxEditorJSService instance\n   * @param focusMonitor Focus monitor for the Material element\n   * @param changeDetection The Change detection ref\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly editorService: NgxEditorJSService,\n    protected focusMonitor: FocusMonitor,\n    protected readonly changeDetection: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(editorService, focusMonitor, changeDetection);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngAfterContentInit(): void {\n    this.setupServiceSubscriptions();\n    this.getFocusMonitor(this.editorInstance.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.onTouch();\n        this.focused = focused;\n        this.stateChanges.next();\n      });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of BehaviorSubject\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n                \n                    \n                        A map key containing BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FixedHeader.html":{"url":"classes/FixedHeader.html","title":"class - FixedHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FixedHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Header\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                normalizeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: any)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            normalizeData\n                        \n                        \n                    \n                \n            \n            \n                \nnormalizeData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts:18\n                \n            \n\n\n            \n                \n                    Fixed version of the function to normalize input data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        The data for the header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The new header data\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Header from '@editorjs/header';\n\n\n//TODO: Remove once Header plugin has been fixed\n\nexport class FixedHeader extends Header {\n  constructor(config: any) {\n    super(config);\n  }\n\n  /**\n   * Fixed version of the function to normalize input data\n   * @param data The data for the header\n   * @returns The new header data\n   */\n  normalizeData(data: any = {}) {\n    const newData: any = {};\n    newData.text = data.text || '';\n    newData.level = parseInt(data.level, 10) || (this as any).defaultLevel.number;\n    return newData;\n  }\n}\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: FixedHeader,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'header',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Header'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginHeaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallOptions.html":{"url":"interfaces/InjectorApiCallOptions.html","title":"interface - InjectorApiCallOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options to pass when calling the EditorJS instance API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        holder\n                                \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Holder for the EditorJS instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The method to call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The optional namespace for the API call\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallResponse.html":{"url":"interfaces/InjectorApiCallResponse.html","title":"interface - InjectorApiCallResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                A response from the EditorJS api\n\n            \n\n            \n                Extends\n            \n            \n                        InjectorApiCallOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorMethodOption.html":{"url":"interfaces/InjectorMethodOption.html","title":"interface - InjectorMethodOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorMethodOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options for a Injector method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        editor\n                                \n                                \n                                        holder\n                                \n                                \n                                            Optional\n                                        skipSave\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                    \n                                \n                                \n                                    \n                                        editor:     EditorJS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorJS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The holder for the option\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipSave\n                                    \n                                \n                                \n                                    \n                                        skipSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Don't call save\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                isReady\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class MockPlugin {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:3\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class MockPlugin {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSComponentModule.html":{"url":"modules/NgxEditorJSComponentModule.html","title":"module - NgxEditorJSComponentModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSComponentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSComponentModule\n\n\n\ncluster_NgxEditorJSComponentModule_declarations\n\n\n\ncluster_NgxEditorJSComponentModule_NgxEditorJSComponent_providers\n\n\n\ncluster_NgxEditorJSComponentModule_exports\n\n\n\ncluster_NgxEditorJSComponentModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSComponentModule\n\nNgxEditorJSComponentModule\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSComponent->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSDirective->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSComponentModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSComponentModule->NgxEditorJSDirective \n\n\n\n\n\nEDITORJS_FORM_VALUE_ACCESSOR\n\nEDITORJS_FORM_VALUE_ACCESSOR\n\nNgxEditorJSComponent -->\n\nEDITORJS_FORM_VALUE_ACCESSOR->NgxEditorJSComponent\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSService->NgxEditorJSComponentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Base module for the NgxEditorJSComponent, NgxEditorJSDirective and NgxEditorJSService.\nAll providers for the app are set here, however FOR_ROOT_OPTIONS_TOKEN can be set in any\n.forRoot\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.module.ts:63\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgxEditorJSComponent } from './editorjs.component';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NGX_EDITORJS_CONFIG, NgxEditorJSModuleConfig } from '../../types/config';\nimport { FOR_ROOT_OPTIONS_TOKEN } from '../../types/config';\nimport { EDITORJS_MODULE_IMPORT, EditorJSInstance } from '../../types/injector';\nimport EditorJS from '@editorjs/editorjs';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { createModuleConfig } from '../../config/module-config';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * Base module for the `NgxEditorJSComponent`, `NgxEditorJSDirective` and `NgxEditorJSService`.\n * All providers for the app are set here, however `FOR_ROOT_OPTIONS_TOKEN` can be set in any\n * `.forRoot`\n */\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSDirective],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: FOR_ROOT_OPTIONS_TOKEN,\n      useValue: {}\n    },\n    {\n      provide: NGX_EDITORJS_CONFIG,\n      useFactory: createModuleConfig,\n      deps: [FOR_ROOT_OPTIONS_TOKEN]\n    },\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSComponentModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSComponentModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSComponentModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoHomeComponent.html":{"url":"components/NgxEditorJSDemoHomeComponent.html","title":"component - NgxEditorJSDemoHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-home\n            \n\n            \n                styleUrls\n                home-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-editorjs-demo-home',\n  templateUrl: 'home-container.component.html',\n  styleUrls: ['home-container.component.scss']\n})\nexport class NgxEditorJSDemoHomeComponent {}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.\n    \n    \n      \n        The demos in this section are for the\n        @tinynodes/ngx-editorjs module.\n      \n      \n        Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with\n        Angular forms or Material forms.\n      \n      Each demo shows the components providing a EditorJS instance.\n    \n    \n      Angular Component Demo\n      Angular Material Form Demo\n    \n  \n\n\n    \n\n    \n                \n                    home-container.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.                      The demos in this section are for the        @tinynodes/ngx-editorjs module.                    Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with        Angular forms or Material forms.            Each demo shows the components providing a EditorJS instance.              Angular Component Demo      Angular Material Form Demo      '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSDemoMaterialModule.html":{"url":"modules/NgxEditorJSDemoMaterialModule.html","title":"module - NgxEditorJSDemoMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSDemoMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule\n  ]\n})\nexport class NgxEditorJSDemoMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Async\n                                ngAfterContentInit\n                            \n                            \n                                    Async\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                excludeTools\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:152\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:106\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:84\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:112\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        excludeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:78\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:136\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:118\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:130\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:142\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:148\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig, excludeTools: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:198\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:251\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance and set up listners\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:215\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:284\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:168\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:175\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:182\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:189\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData, SanitizerConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * On Destroyed subject\n   */\n  private readonly onDestroy$ = new Subject();\n  /**\n   * Form touched state\n   */\n  private touched$ = new BehaviorSubject(false);\n\n  /**\n   * The DOM element ID, it will use the Directive DOM element ID or falls back to the provided `holder` property\n   */\n  private id: string;\n\n  /**\n   * Boolean, If set to true the EditorJS instance gets autofocus when initialized\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Boolean, If set to true the toolbar will not show in the EditorJS instance\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * String, the ID property of the element that the EditorJS instance will be attached to\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * String, The type of block to set as the initial block type. This needs to match a name in the `UserPlugins` object.\n   * The default value is \"paragraph\"\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Number, The minimum height of the EditorJS instance bottom after the last block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * String, The text to display as the placeholder text in the first block before content is added\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * SanitizerConfig, The configuration for the HTML sanitizer\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * String Array, If empty all tools available via the plugin service will be added.  If a string\n   * array is set only the tools with the provided keys will be added\n   */\n  @Input()\n  public excludeTools: string[] = [];\n\n  /**\n   * Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\n   * method. This patches the `FormControl` value with every block change and focus and blur, it also autosaves after\n   * a set time\n   * Set to 0 to disable or pass a value in `ms` of the autosave time\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * Blocks, An initial set of block data to render inside the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * Emits if the content from the EditorJS instance has been saved to the component value\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Emits if the component has been touched\n   */\n  @Output()\n  public isTouched = new EventEmitter();\n\n  /**\n   * Emits if the component is focused\n   */\n  @Output()\n  public isFocused = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS content has changed when `save` is called\n   */\n  @Output()\n  public hasChanged = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS component is ready\n   */\n  @Output()\n  public isReady = new EventEmitter();\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n    this.isTouched.emit(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(\n    protected readonly el: ElementRef,\n    protected readonly editorService: NgxEditorJSService,\n    protected readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the EditorJS instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor({ holder: this.id });\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an EditorJS instance for this directive\n   * @param config Configuration for this instance\n   * @param excludeTools\n   */\n  public async createEditor(config?: EditorConfig, excludeTools = []): Promise {\n    await this.service.createInstance({\n      config,\n      excludeTools: this.excludeTools || excludeTools,\n      autoSave: this.autosave || 0\n    });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  async ngOnChanges(changes: SimpleChanges): Promise {\n    if (\n      changes.blocks &&\n      changes.blocks.previousValue !== null &&\n      !changes.blocks.firstChange &&\n      JSON.stringify(changes.blocks.previousValue) !== JSON.stringify(changes.blocks.currentValue)\n    ) {\n      this.service.update({ holder: this.holder }).subscribe();\n      this.cd.markForCheck();\n    } else {\n      const changesKeys = Object.keys(changes);\n      if (\n        this.id &&\n        // Ignore changes for values not related to EditorJS\n        [\n          'autofocus',\n          'holder',\n          'hideToolbar',\n          'initialBlock',\n          'minHeight',\n          'blockPlaceholder',\n          'sanitizer',\n          'includeTools'\n        ].find(key => {\n          return changesKeys.includes(key);\n        })\n      ) {\n        await this.createEditor(this.createConfig());\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance and set up listners\n   */\n  async ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    await this.createEditor(this.createConfig());\n\n    this.service\n      .isReady({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(isReady => {\n        this.isReady.emit(isReady);\n      });\n\n    this.service\n      .lastChange({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(change => {\n        this.hasChanged.emit(change);\n      });\n\n    this.service\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(saved => {\n        this.hasSaved.next(saved);\n      });\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n    this.service.destroyInstance({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSMatFieldModule.html":{"url":"modules/NgxEditorJSMatFieldModule.html","title":"module - NgxEditorJSMatFieldModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSMatFieldModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSMatFieldModule\n\n\n\ncluster_NgxEditorJSMatFieldModule_declarations\n\n\n\ncluster_NgxEditorJSMatFieldModule_NgxEditorJSMatFieldComponent_providers\n\n\n\ncluster_NgxEditorJSMatFieldModule_exports\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\n\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSMatFieldModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSMatFieldModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nEDITORJS_MATERIAL_FIELD_CONTROL\n\nEDITORJS_MATERIAL_FIELD_CONTROL\n\nNgxEditorJSMatFieldComponent -->\n\nEDITORJS_MATERIAL_FIELD_CONTROL->NgxEditorJSMatFieldComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides the NgxEditorJSMatFieldComponent along with exporting the\nNgxEditorJSComponentModule. If using this module, Angular Material is required\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.module.ts:29\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { NgxEditorJSComponentModule } from '../editorjs/editorjs.module';\nimport { NgxEditorJSMatFieldComponent } from './editorjs-mat-field.component';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig } from '../../types/config';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n/**\n * This module provides the `NgxEditorJSMatFieldComponent` along with exporting the\n * `NgxEditorJSComponentModule`. If using this module, Angular Material is required\n */\n@NgModule({\n  imports: [NgxEditorJSComponentModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSMatFieldComponent],\n  exports: [NgxEditorJSComponentModule, NgxEditorJSMatFieldComponent]\n})\nexport class NgxEditorJSMatFieldModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSMatFieldModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSMatFieldModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldModule \n\nNgxEditorJSMatFieldModule \n\nNgxEditorJSMatFieldModule  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides the directive, service and components to use EditorJS\nwithin Angular and Material.\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSModuleConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSMatFieldModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSMatFieldModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:30\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig } from './types/config';\nimport { NgxEditorJSComponentModule } from './containers/editorjs/editorjs.module';\nimport { NgxEditorJSMatFieldModule } from './containers/editorjs-mat-field/editorjs-mat-field.module';\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides the directive, service and components to use [EditorJS](http://editorjs.io)\n * within Angular and Material.\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSModuleConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [NgxEditorJSComponentModule, NgxEditorJSMatFieldModule],\n  exports: [NgxEditorJSComponentModule, NgxEditorJSMatFieldModule]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSModuleConfig.html":{"url":"interfaces/NgxEditorJSModuleConfig.html","title":"interface - NgxEditorJSModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSPluginService is provided as a root service for handling  EditorJS plugins.\nPlugins are provided by using  NgModule to inject the plugin with a\n PluginConfig using providers.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPlugin\n                            \n                            \n                                    Public\n                                getPlugins\n                            \n                            \n                                    Public\n                                getPluginsWithExclude\n                            \n                            \n                                    Public\n                                getPluginsWithInclude\n                            \n                            \n                                    Public\n                                getTools\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pluginConfigMap: PluginConfigMap)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pluginConfigMap\n                                                  \n                                                        \n                                                                        PluginConfigMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin configuration map injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugin(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:32\n                \n            \n\n\n            \n                \n                    Get a plugin configuration via it's key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the plugin to get\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfig\n\n                    \n                    \n                        The plugin configuration for the passed key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugins()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:23\n                \n            \n\n\n            \n                \n                    Get a map of all plugin configurations\n\n\n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        The map of plugins injected into this plugin\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithExclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithExclude(excludeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:40\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an exclude list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    excludeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithInclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithInclude(includeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:54\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an include list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    includeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(excludeTools: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns a map of  EditorJS tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    excludeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of tools to exclude, if not passed all tools\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { PluginClasses, PluginConfig, PluginConfigMap, ToolSettingsMap } from '../types/plugins';\n\n/**\n * The `NgxEditorJSPluginService` is provided as a root service for handling {@link https://github.com/editor-js | EditorJS plugins}.\n *\n * Plugins are provided by using {@link https://angular.io/api/core/NgModule | NgModule} to inject the plugin with a\n * {@link ../interfaces/PluginConfig.html | PluginConfig} using providers.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * @param pluginConfigMap The plugin configuration map injected into the application\n   */\n  constructor(@Inject(PluginClasses) private readonly pluginConfigMap: PluginConfigMap) {}\n\n  /**\n   * Get a map of all plugin configurations\n   * @returns The map of plugins injected into this plugin\n   */\n  public getPlugins(): PluginConfigMap {\n    return this.pluginConfigMap;\n  }\n\n  /**\n   * Get a plugin configuration via it's key\n   * @param key The key of the plugin to get\n   * @returns The plugin configuration for the passed key\n   */\n  public getPlugin(key: string): PluginConfig {\n    return this.pluginConfigMap[key];\n  }\n\n  /**\n   * Get a list of plugins, filtering with an exclude list of plugins\n   * @param excludeList\n   */\n  public getPluginsWithExclude(excludeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return !excludeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Get a list of plugins, filtering with an include list of plugins\n   * @param includeList\n   */\n  public getPluginsWithInclude(includeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return includeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excludeTools Optional array of tools to exclude, if not passed all tools\n   */\n  public getTools(excludeTools: string[] = []): ToolSettingsMap {\n    return Object.entries(this.getPluginsWithExclude(excludeTools)).reduce(\n      (finalTools, [key, plugin]: [string, PluginConfig]) => {\n        const tool: any = {\n          class: plugin.plugin\n        };\n        if (plugin.shortcut) tool.shortcut = plugin.shortcut;\n        if (plugin.type === 'inline' || plugin.inlineToolbar) tool.inlineToolbar = true;\n        if (plugin.config) tool.config = plugin.config;\n        return { ...finalTools, [key]: tool };\n      },\n      {}\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSPluginServiceModule.html":{"url":"modules/NgxEditorJSPluginServiceModule.html","title":"module - NgxEditorJSPluginServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSPluginServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PluginClasses, PLUGIN_CONFIG } from '../types/plugins';\nimport { createPluginConfig } from '../util/plugin';\nimport { NgxEditorJSPluginService } from './plugin-service.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: undefined,\n      multi: true\n    },\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: undefined,\n      multi: true\n    },\n    {\n      provide: PluginClasses,\n      useFactory: createPluginConfig,\n      deps: [PLUGIN_CONFIG, EDITOR_JS_TOOL_INJECTOR]\n    },\n    NgxEditorJSPluginService\n  ]\n})\nexport class NgxEditorJSPluginServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                This handles the management of  EditorJS instances and their lifecycle.\nAll EditorJS instances are created outside of Angular using  NgZone  to ensure change detection is not triggered.\nOnce an instance is created, several  Observable values are also set up:\n\n isReady  Set when the editor instance is ready in the DOM\n hasSaved  Set when the editor .save() method has been called.\n lastChange  Set when a change happens, contains the OutputData from the Editor.\n\nAfter setup,  isReady  is set to true and the editor can be used within Angular.  There are some methods provided\nfor  save ,  update  and  clear  - and an  apiCall  method which allows\nfor any call to be made to EditorJS that matches it's API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCall\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasSaved\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                lastChange\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorJs: EditorJSClass, config: NgxEditorJSModuleConfig, plugins: NgxEditorJSPluginService, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editorJs\n                                                  \n                                                        \n                                                                        EditorJSClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class injected into the application and used to create new editor instances\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration provided from the NgxEditorJSModule.forRoot method\n\n                                                        \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin service which provides all plugins injected into the application\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ApplicationRef provided by Angular, used to trigger an application tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiCall(options: InjectorApiCallOptions, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:138\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    A helper method to make calls to the  EditorJS API  of any instance.\nThe first argument is an object that you must pass the method name, and the holder ID of the container.\nAn optional namespace can be added for API calls such as blocks, caret, etc.\nThe second argument is any additional arguments as required by the API.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorApiCallOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The options for the API call to be made\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Any arguments to be passed to the API call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        An Observable of the API response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:191\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the clear method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:87\n                \n            \n\n\n            \n                \n                    Creates a new  EditorJS instance outside of the Angular zone and then adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A configuration passed to create an EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise when the editor has been created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:288\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:271\n                \n            \n\n\n            \n                \n                    Destroys a single instance of  EditorJS and all the subject values created for it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:220\n                \n            \n\n\n            \n                \n                    Returns the underlying  EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasSaved(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:260\n                \n            \n\n\n            \n                \n                    Subscribe to the hasSaved state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:231\n                \n            \n\n\n            \n                \n                    Subscribe to the isReady state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lastChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lastChange(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:242\n                \n            \n\n\n            \n                \n                    Subscribe to the lastChange state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:177\n                \n            \n\n\n            \n                \n                    Call the save method of an  EditorJS instance and sets the current value of the service to the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options for the method call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:204\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the render method if blocks\nare passed. Optionally can disable the lastChange update - useful if doing actions\nsuch as resetting data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { NgxEditorJSPluginService, ToolSettingsMap } from '@tinynodes/ngx-editorjs-plugins';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, take, tap } from 'rxjs/operators';\nimport { NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { CreateEditorJSOptions } from '../types/editorjs-service';\nimport {\n  EditorJSClass,\n  EditorJSInstance,\n  InjectorApiCallOptions,\n  InjectorApiCallResponse,\n  InjectorMethodOption,\n  MAP_DEFAULTS\n} from '../types/injector';\nimport { ChangeMap, EditorMap, ReadyMap, SavedMap } from '../types/maps';\n\n/**\n * This handles the management of {@link https://editorjs.io/api | EditorJS} instances and their lifecycle.\n *\n * All `EditorJS` instances are created outside of Angular using {@link https://angular.io/api/core/NgZone | NgZone } to ensure change detection is not triggered.\n * Once an instance is created, several {@link https://angular.io/guide/observables | Observable} values are also set up:\n *\n *  - {@link #isReady | isReady } Set when the editor instance is ready in the DOM\n *  - {@link #hasSaved | hasSaved } Set when the editor `.save()` method has been called.\n *  - {@link #lastChange | lastChange } Set when a change happens, contains the `OutputData` from the Editor.\n *\n * After setup, {@link #isReady | isReady } is set to true and the editor can be used within Angular.  There are some methods provided\n * for {@link #save | save }, {@link #update | update } and {@link #clear | clear } - and an {@link #apiCall | apiCall } method which allows\n * for any call to be made to EditorJS that matches it's API.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal destroy subject for the service\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} instances\n   */\n  private readonly editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} ready states\n   */\n  private readonly isReadyMap: ReadyMap = {};\n\n  /**\n   * Internal map of when {@link https://editorjs.io/api | EditorJS} save is called\n   */\n  private readonly hasSavedMap: SavedMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} change states\n   */\n  private readonly lastChangeMap: ChangeMap = {};\n\n  private toolbarOpen = false;\n\n  /**\n   * @param editorJs The EditorJS class injected into the application and used to create new editor instances\n   * @param config The configuration provided from the NgxEditorJSModule.forRoot method\n   * @param plugins The plugin service which provides all plugins injected into the application\n   * @param zone The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n   * @param ref The ApplicationRef provided by Angular, used to trigger an application tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private readonly editorJs: EditorJSClass,\n    @Inject(NGX_EDITORJS_CONFIG) private readonly config: NgxEditorJSModuleConfig,\n    private readonly plugins: NgxEditorJSPluginService,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new {@link https://editorjs.io/api | EditorJS} instance outside of the Angular zone and then adds it to the editor instances\n   *\n   * @remark\n   * This method uses `async/await`\n   *\n   * @param options A configuration passed to create an EditorJS instance\n   * @returns A Promise when the editor has been created\n   */\n  public async createInstance(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.getTools(options.excludeTools)\n    };\n\n    // Bind the editor onChange method from the config, otherwise use the local createOnChange method\n    editorConfig.onChange =\n      editorConfig.onChange && typeof editorConfig.onChange === 'function'\n        ? editorConfig.onChange\n        : this.createOnChange.call(this, { holder: editorConfig.holder as string });\n\n    // Bind the editor onReady method from the config, otherwise use the local createOnReady method\n    editorConfig.onReady =\n      editorConfig.onReady && typeof editorConfig.onReady === 'function'\n        ? editorConfig.onReady\n        : this.createOnReady.call(this, { holder: editorConfig.holder as string });\n\n    await this.zone.runOutsideAngular(async () => {\n      const editor = new this.editorJs(editorConfig);\n      const holder = editorConfig.holder as string;\n      await editor.isReady;\n      await this.zone.run(async () => {\n        await this.setupSubjects({ holder });\n        if (this.editorMap[holder]) {\n          this.editorMap[holder].next(editor);\n        } else {\n          this.editorMap[holder] = new BehaviorSubject(editor);\n        }\n        this.isReadyMap[holder].next(true);\n        this.ref.tick();\n      });\n    });\n  }\n\n  /**\n   * A helper method to make calls to the {@link https://editorjs.io/api | EditorJS API } of any instance.\n   * The first argument is an object that you must pass the `method` name, and the `holder` ID of the container.\n   * An optional `namespace` can be added for API calls such as `blocks`, `caret`, etc.\n   *\n   * The second argument is any additional arguments as required by the API.\n   *\n   * @remarks\n   * Unlike other methods an API call be made with a `.subscribe`, the result will be an observable value.\n   * If the value is a Promise it will be resolved first\n   *\n   * @param options The options for the API call to be made\n   * @param args Any arguments to be passed to the API call\n   * @returns An Observable of the API response\n   */\n  public apiCall(options: InjectorApiCallOptions, ...args: any[]): Observable> {\n    return this.getEditor(options).pipe(\n      take(1),\n      switchMap(async editor => {\n        let result: InjectorApiCallResponse = { ...options, result: undefined };\n\n        await this.zone.runOutsideAngular(async () => {\n          let method: any;\n          if (!options.namespace) {\n            method = editor[options.method];\n          } else {\n            method = editor[options.namespace][options.method];\n          }\n          if (!method) {\n            throw new Error(`No method ${options.method} ${options.namespace ? 'in ' + options.namespace : ''}`);\n          }\n          const methodCall = method.call(editor, ...args);\n          await this.zone.run(async () => {\n            if (!methodCall || (methodCall && !methodCall.then)) {\n              result = {\n                ...result,\n                result: typeof methodCall === 'undefined' ? {} : methodCall\n              };\n            } else {\n              const r = await methodCall;\n              result = { ...result, result: r };\n            }\n          });\n        });\n\n        return result;\n      })\n    );\n  }\n\n  /**\n   * Call the `save` method of an {@link https://editorjs.io/api | EditorJS} instance and sets the current value of the service to the result\n   * @param options Options for the method call\n   */\n  public save(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'saver', method: 'save' }).pipe(\n      take(1),\n      tap((response: InjectorApiCallResponse) => {\n        this.hasSavedMap[options.holder].next(true);\n        this.lastChangeMap[options.holder].next(response.result);\n      })\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the `clear` method.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public clear(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'clear' }).pipe(\n      take(1),\n      switchMap(response => (options.skipSave ? of(response) : this.save(options)))\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the render method if blocks\n   * are passed. Optionally can disable the `lastChange` update - useful if doing actions\n   * such as resetting data.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public update(options: InjectorMethodOption): Observable> {\n    const data = {\n      time: (options.data && options.data.time) || Date.now(),\n      version: (options.data && options.data.version) || this.editorJs.version,\n      blocks: [...options.data.blocks]\n    };\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'render' }, data).pipe(\n      take(1),\n      switchMap(response => (options.skipSave ? of(response) : this.save(options)))\n    );\n  }\n\n  /**\n   * Returns the underlying {@link https://editorjs.io/api | EditorJS} instance\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public getEditor(options: InjectorMethodOption): Observable {\n    if (!this.editorMap[options.holder]) {\n      this.editorMap[options.holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[options.holder].pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Subscribe to the `isReady` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public isReady(options: InjectorMethodOption): Observable {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.isReadyMap[options.holder].asObservable();\n  }\n\n  /**\n   * Subscribe to the `lastChange` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public lastChange(options: InjectorMethodOption): Observable {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({\n        time: 0,\n        blocks: [],\n        version: this.editorJs.version\n      });\n    }\n    return this.lastChangeMap[options.holder].pipe(\n      distinctUntilChanged((a, b) => (b && b.time && b.time === 0) || (a && b && (a.time && a.time === b.time))),\n      filter(hasChanged => typeof hasChanged !== 'undefined')\n    );\n  }\n\n  /**\n   * Subscribe to the `hasSaved` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public hasSaved(options: InjectorMethodOption): Observable {\n    if (!this.hasSavedMap[options.holder]) {\n      this.hasSavedMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.hasSavedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Destroys a single instance of {@link https://editorjs.io/api | EditorJS} and all the subject values created for it\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public destroyInstance(options: InjectorMethodOption): void {\n    this.getEditor(options)\n      .pipe(take(1))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects({ holder: options.holder });\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(holder => this.destroyInstance({ holder }));\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Internal method to create an default onChange method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnChange(options: InjectorMethodOption): (change: OutputData) => void {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({ blocks: [] });\n    }\n    return (change: OutputData) => {\n      if (change) {\n        this.lastChangeMap[options.holder].next(change);\n      }\n    };\n  }\n\n  /**\n   * Internal method to create an default onReady method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnReady(options: InjectorMethodOption): () => void {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n\n    return () => {\n      if (!this.isReadyMap[options.holder].value) {\n        this.isReadyMap[options.holder].next(true);\n      }\n    };\n  }\n\n  /**\n   * Sets up the `BehaviorSubject` values when an {@link https://editorjs.io/api | EditorJS} instance is created.  All the subjects are first created and set\n   * to default values.\n   * Once an EditorJS instance is ready these values can provide change and save state information\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  private async setupSubjects(options: InjectorMethodOption): Promise {\n    MAP_DEFAULTS.forEach(([mapKey, value]: [string, typeof value]) => {\n      if (!this[mapKey][options.holder]) {\n        this[mapKey][options.holder] = new BehaviorSubject(value);\n      }\n      this[mapKey][options.holder].next(value);\n    });\n  }\n\n  /**\n   * Handles cleaning up all the `BehaviorSubject` values once an {@link https://editorjs.io/api | EditorJS} instance has been destroyed\n   * @param options The options to pass to clean up the subjects\n   */\n  private cleanupSubjects(options: InjectorMethodOption) {\n    MAP_DEFAULTS.forEach(([mapKey]: [string]) => {\n      if (this[mapKey][options.holder]) {\n        this[mapKey][options.holder].complete();\n        this[mapKey][options.holder] = null;\n        delete this[mapKey][options.holder];\n      }\n    });\n    this.editorMap[options.holder].complete();\n    this.editorMap[options.holder] = null;\n    delete this.editorMap[options.holder];\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excludeTools Optional array of tools to exclude, if not passed all tools\n   */\n  private getTools(excludeTools: string[] = []): ToolSettingsMap {\n    return this.plugins.getTools(excludeTools);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorjsPluginsModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSDemoHomeComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSDemoMaterialModule\n                        \n                        \n                            NgxEditorjsPluginsModule\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSComponentModule, NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { NgxEditorJSDemoHomeComponent } from './containers/home-container/home-container.component';\nimport { NgxEditorJSDemoMaterialModule } from './ngx-editorjs-demo.material.module';\n\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { NgxEditorjsPluginsModule } from '@tinynodes/ngx-editorjs-plugins';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxJsonViewerModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSComponentModule,\n    NgxEditorjsPluginsModule,\n    NgxEditorJSDemoMaterialModule\n  ],\n  declarations: [PageContainerComponent, NgxEditorJSDemoHomeComponent],\n  exports: [PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginEmbedModule\n\nPluginEmbedModule\n\nNgxEditorjsPluginsModule -->\n\nPluginEmbedModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginQuoteModule\n\nPluginQuoteModule\n\nNgxEditorjsPluginsModule -->\n\nPluginQuoteModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginWarningModule\n\nPluginWarningModule\n\nNgxEditorjsPluginsModule -->\n\nPluginWarningModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginEmbedModule \n\nPluginEmbedModule \n\nPluginEmbedModule  -->\n\nNgxEditorjsPluginsModule->PluginEmbedModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginQuoteModule \n\nPluginQuoteModule \n\nPluginQuoteModule  -->\n\nNgxEditorjsPluginsModule->PluginQuoteModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPluginWarningModule \n\nPluginWarningModule \n\nPluginWarningModule  -->\n\nNgxEditorjsPluginsModule->PluginWarningModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginEmbedModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginQuoteModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                        \n                            PluginWarningModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginEmbedModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginQuoteModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                        \n                            PluginWarningModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginEmbedModule } from './plugins/embed/embed.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginInlineCodeModule } from './plugins/inline-code/inline-code.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginQuoteModule } from './plugins/quote/quote.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\nimport { PluginWarningModule } from './plugins/warning/warning.module';\nimport { NgxEditorJSPluginServiceModule } from './services/plugin-service.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for EditorJS.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule,\n    PluginWarningModule,\n    PluginQuoteModule,\n    PluginEmbedModule\n  ],\n  exports: [\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule,\n    PluginWarningModule,\n    PluginQuoteModule,\n    PluginEmbedModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesComponentsModule.html":{"url":"modules/NgxTinynodesComponentsModule.html","title":"module - NgxTinynodesComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/ngx-tinynodes-components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputModule } from './components/mat-tag-input/mat-tag-input.module';\nimport { NgxTinynodesMatJsonOutputModule } from './components/mat-json-output/mat-json-output.module';\n\n@NgModule({\n  imports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ],\n  exports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ]\n})\nexport class NgxTinynodesComponentsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxTinynodesMatFieldComponent.html":{"url":"interfaces/NgxTinynodesMatFieldComponent.html","title":"interface - NgxTinynodesMatFieldComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxTinynodesMatFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/types/components.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { AfterContentInit, DoCheck, OnDestroy, OnInit } from '@angular/core';\n\nexport interface NgxTinynodesMatFieldComponent extends ControlValueAccessor,\n  MatFormFieldControl,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  AfterContentInit {\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxTinynodesMatJsonOutputComponent.html":{"url":"components/NgxTinynodesMatJsonOutputComponent.html","title":"component - NgxTinynodesMatJsonOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMatJsonOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-json-output\n            \n\n\n\n\n            \n                templateUrl\n                mat-json-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggleExpand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expand\n                            \n                            \n                                json\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expand\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        json\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpand\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpand()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tinynodes-mat-json-output',\n  templateUrl: 'mat-json-output.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMatJsonOutputComponent implements OnChanges {\n\n  @Input()\n  json: any;\n\n  @Input()\n  expand = true;\n\n  constructor(private readonly cd: ChangeDetectorRef) {\n  }\n\n  public toggleExpand() {\n    this.expand = !this.expand;\n  }\n\n  ngOnChanges(): void {\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n  \n    Output\n    Data from the EditorJS instance\n  \n  \n    {{expand ? 'Collapse JSON' : 'Expand JSON'}}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Output    Data from the EditorJS instance        {{expand ? \\'Collapse JSON\\' : \\'Expand JSON\\'}}          '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMatJsonOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatJsonOutputModule.html":{"url":"modules/NgxTinynodesMatJsonOutputModule.html","title":"module - NgxTinynodesMatJsonOutputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatJsonOutputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatJsonOutputComponent } from './mat-json-output.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatCardModule } from '@angular/material';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\n@NgModule({\n  imports: [CommonModule, MatCardModule, MatButtonModule, NgxJsonViewerModule],\n  declarations: [ NgxTinynodesMatJsonOutputComponent ],\n  exports: [ NgxTinynodesMatJsonOutputComponent ]\n})\nexport class NgxTinynodesMatJsonOutputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatTagInputModule.html":{"url":"modules/NgxTinynodesMatTagInputModule.html","title":"module - NgxTinynodesMatTagInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatTagInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputComponent } from './mat-tag-input.component';\nimport { MatChipsModule, MatIconModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [FormsModule,CommonModule, MatChipsModule, MatIconModule],\n  declarations: [ NgxTinynodesMatTagInputComponent ],\n  exports: [ NgxTinynodesMatTagInputComponent ]\n})\nexport class NgxTinynodesMatTagInputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMaterialFormFieldDemo.html":{"url":"modules/NgxTinynodesMaterialFormFieldDemo.html","title":"module - NgxTinynodesMaterialFormFieldDemo","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMaterialFormFieldDemo\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMaterialFormFieldDemo\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_declarations\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_imports\n\n\n\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\n\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxTinynodesMaterialFormFieldDemoComponent->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSDemoMaterialModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSMatFieldModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorjsPluginsModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPageStoreModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/material-form-field.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMaterialFormFieldDemoComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            NgxTinynodesMaterialFormFieldDemoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSDemoMaterialModule\n                        \n                        \n                            NgxEditorJSMatFieldModule\n                        \n                        \n                            NgxEditorjsPluginsModule\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMaterialFormFieldDemoComponent } from './containers/material-form-field/material-form-field.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgxEditorJSDemoMaterialModule } from './ngx-editorjs-demo.material.module';\nimport { CommonModule } from '@angular/common';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PageStoreModule } from '../../store/pages/pages.module';\nimport { NgxEditorJSMatFieldModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsPluginsModule } from '@tinynodes/ngx-editorjs-plugins';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { NgxTinynodesComponentsModule } from '@tinynodes/ngx-tinynodes-components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NgxTinynodesMaterialFormFieldDemoComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxTinynodesComponentsModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    NgxJsonViewerModule,\n    PageStoreModule,\n    NgxEditorJSMatFieldModule,\n    NgxEditorjsPluginsModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSDemoMaterialModule\n  ],\n  declarations: [NgxTinynodesMaterialFormFieldDemoComponent],\n  entryComponents: [NgxTinynodesMaterialFormFieldDemoComponent]\n})\nexport class NgxTinynodesMaterialFormFieldDemo {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{"url":"components/NgxTinynodesMaterialFormFieldDemoComponent.html","title":"component - NgxTinynodesMaterialFormFieldDemoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMaterialFormFieldDemoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-form-field-demo\n            \n\n            \n                styleUrls\n                material-form-field.component.scss\n            \n\n\n\n            \n                templateUrl\n                material-form-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                disableAutosave\n                            \n                            \n                                    Public\n                                enableAutosave\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                holder\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    autosave\n                                \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:51\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Default value : 'ngx-editorjs-demo'\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:30\n                            \n                        \n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'ngx-editorjs Material Field'\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:25\n                            \n                        \n                \n                    \n                        Title of the page\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(skipSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:125\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    skipSave\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Optional parameter, if set to true the save method won't be called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableAutosave()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:109\n                \n            \n\n\n            \n                \n                    Disable autosave\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAutosave(autosaveTime: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:102\n                \n            \n\n\n            \n                \n                    Enable autosave, set the value from the autosaveTime\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    autosaveTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Time to set for autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:172\n                \n            \n\n\n            \n                \n                    After the content has init override the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:155\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:116\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: OutputData, skipSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:144\n                \n            \n\n\n            \n                \n                    Update the component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            OutputData\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The data to render in the update\n\n                                    \n                                \n                                \n                                    skipSave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Optional parameter, if set to true the save method won't be called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageName: [ '' ],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:34\n                            \n                        \n\n                \n                    \n                        Editor form group\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n\n                \n                    \n                        getautosave()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:86\n                                \n                            \n                    \n                        \n                                Get the current autosave state of the application\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:93\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { AppService, MenuGroup, NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, pluck, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { PagesService } from '../../../../store/pages/pages.service';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-tinynodes-mat-form-field-demo',\n  templateUrl: 'material-form-field.component.html',\n  styleUrls: [ 'material-form-field.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMaterialFormFieldDemoComponent implements AfterContentInit {\n  /**\n   * Title of the page\n   */\n  @Input()\n  public title = 'ngx-editorjs Material Field';\n  /**\n   * The holder ID for this demo\n   */\n  @Input()\n  public holder = 'ngx-editorjs-demo';\n  /**\n   * Editor form group\n   */\n  public editorForm = this.fb.group({\n    pageName: [ '' ],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  });\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Menu state for the component\n   */\n  private menu$ = new BehaviorSubject(undefined);\n  /**\n   * Autosave state\n   */\n  private autoSave$ = new BehaviorSubject(0);\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   * @param fb The form builder\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly fb: FormBuilder\n  ) {\n    this.editorService\n      .lastChange({ holder: this.holder })\n      .pipe(\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hasChanged => {\n        if (hasChanged && hasChanged.blocks) {\n          this.editorForm.patchValue({\n            pageEditor: hasChanged.blocks\n          });\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  /**\n   * Get the current autosave state of the application\n   */\n  public get autosave() {\n    return this.autoSave$.asObservable();\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n\n  /**\n   * Enable autosave, set the value from the autosaveTime\n   * @param autosaveTime Time to set for autosave\n   */\n  public enableAutosave(autosaveTime: number) {\n    this.autoSave$.next(autosaveTime);\n  }\n\n  /**\n   * Disable autosave\n   */\n  public disableAutosave() {\n    this.autoSave$.next(0);\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder }).subscribe();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Clear the editor\n   * @param skipSave Optional parameter, if set to true the save method won't be called\n   */\n  public clear(skipSave = false) {\n    this.editorForm.reset({\n      pageName: '',\n      pageTags: [],\n    });\n\n    this.editorService\n      .clear({ holder: this.holder, skipSave })\n      .pipe(take(1))\n      .subscribe();\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Update the component\n   * @param data The data to render in the update\n   * @param skipSave Optional parameter, if set to true the save method won't be called\n   */\n  public update(data: OutputData, skipSave = false) {\n    this.editorService\n      .update({ holder: this.holder, data, skipSave })\n      .pipe(take(1))\n      .subscribe();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('material-form-field-demo')\n      .pipe(take(1))\n      .subscribe(data => {\n        this.menu$.next(data.links);\n        this.editorForm.patchValue({\n          pageName: 'A test page for the Material EditorJS Component',\n          pageTags: ['Angular', 'Material', 'EditorJS', 'TypeScript', 'Open Source']\n        })\n        this.update({ time: Date.now(), blocks: data.blocks });\n      });\n  }\n\n  /**\n   * After the content has init override the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Material Field Demo\n      A single page demo of the EditorJS Material Field component\n    \n\n    \n      \n    \n\n    \n      Save\n      Clear\n      Reset\n      \n        Enable Editor Autosave\n      \n       0\" (click)=\"disableAutosave()\">Disable\n        Editor Autosave\n      \n\n\n      \n        Autosave Time\n        \n        seconds\n         0\">\n          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated -\n          You still need to call\n          save to save all the form data.\n        \n      \n    \n    \n      \n        \n          Page Name\n          \n          Enter the name for this page\n        \n        \n          Page Tags\n          \n        \n        \n          Content Editor for {{ editorForm.value.pageName || 'Page Name' }}\n          Click on the editor to active it\n          \n        \n      \n    \n    \n      \n    \n  \n\n\n\n  \n    Below is an instance of an {{ title }} EditorJS Material component. Click on the area and the block\n    tool will appear, or you can just start typing a paragraph.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks,\n    list with &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage\n    plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results. The save, clear and reset buttons work on\n    the entire form.  The Autosave feature enables the `EditorJS` instance to update the form value on any changes  It also updates\n    on a regular basis to ensure the content is in the form. With autosave off you need to call save on the form to get the value.\n  \n\n\n    \n\n    \n                \n                    material-form-field.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n.form-content form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-content > * {\n  width: 100%;\n}\n\n.mat-form-field {\n  margin-bottom: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Material Field Demo      A single page demo of the EditorJS Material Field component                            Save      Clear      Reset              Enable Editor Autosave             0\" (click)=\"disableAutosave()\">Disable        Editor Autosave                    Autosave Time                seconds         0\">          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated -          You still need to call          save to save all the form data.                                              Page Name                    Enter the name for this page                          Page Tags                                    Content Editor for {{ editorForm.value.pageName || \\'Page Name\\' }}          Click on the editor to active it                                                  Below is an instance of an {{ title }} EditorJS Material component. Click on the area and the block    tool will appear, or you can just start typing a paragraph.        The default block is a  paragraph, you can also add header  -  blocks,    list with  /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage    plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results. The save, clear and reset buttons work on    the entire form.  The Autosave feature enables the `EditorJS` instance to update the form value on any changes  It also updates    on a regular basis to ensure the content is in the form. With autosave off you need to call save on the form to get the value.  '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMaterialFormFieldDemoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container provided the basic demo for the ngx-editorjs component\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                            \n                                ngxEditorJS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    blocks\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:86\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:119\n                \n            \n\n\n            \n                \n                    After the content has init override the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:93\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:79\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:28\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorJS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditorJS', {read: NgxEditorJSComponent, static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:55\n                                \n                            \n                    \n                        \n                                Get the blocks from the last change\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:65\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:72\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:106\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { Block, NgxEditorJSComponent, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { AppService, MenuGroup, NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, pluck, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container provided the basic demo for the `ngx-editorjs` component\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: [ 'page-container.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  @ViewChild('ngxEditorJS', { read: NgxEditorJSComponent, static: true }) ngxEditorJS: NgxEditorJSComponent;\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private readonly app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {\n  }\n\n  /**\n   * Get the blocks from the last change\n   */\n  public get blocks() {\n    return this.editorService.lastChange({ holder: this.holder }).pipe(\n      pluck('blocks'),\n      takeUntil(this.onDestroy$)\n    );\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder });\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editorService.clear({ holder: this.holder });\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1), switchMap((data: NgxEditorJSDemo) => {\n        this.menu$.next(data.links);\n        return this.editorService.update({ holder: this.holder, data: { blocks: data.blocks } }).pipe(take(1));\n      }))\n      .subscribe();\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      take(1),\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init override the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n    \n\n    \n      \n        Demo\n        Save\n        Clear\n        Reset\n      \n      \n        \n          Ready: {{ ngxEditorJS.isReady | async }}\n          Has Changed:\n            {{ change.time }}\n            0\n          \n          Touched: {{ ngxEditorJS.isTouched | async }}\n          Focused: {{ ngxEditorJS.isFocused | async }}\n          Saved: {{ ngxEditorJS.hasSaved | async }}\n        \n      \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start\n    typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                    Demo        Save        Clear        Reset                              Ready: {{ ngxEditorJS.isReady | async }}          Has Changed:            {{ change.time }}            0                    Touched: {{ ngxEditorJS.isTouched | async }}          Focused: {{ ngxEditorJS.isFocused | async }}          Saved: {{ ngxEditorJS.hasSaved | async }}                                                    Output          Data from the EditorJS instance                          {{ asJSON | async }}                               Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start    typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Code from '@editorjs/code';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Code,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'code',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Code'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A plugin configuration object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blockData\n                                \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        inlineToolbar\n                                \n                                \n                                        key\n                                \n                                \n                                        plugin\n                                \n                                \n                                        pluginName\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockData\n                                    \n                                \n                                \n                                    \n                                        blockData:         BlockData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional block data, used to define the block data for this type\nand used as a default\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional  custom configuration to pass to EditorJS\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional description for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineToolbar\n                                    \n                                \n                                \n                                    \n                                        inlineToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If a block tool, you can also set this to true if it contains inline tool support\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         EditorJSPlugin | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSPlugin | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin for the editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluginName\n                                    \n                                \n                                \n                                    \n                                        pluginName:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for displaying the plugin name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the type of plugin for the plugin provider\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfigMap.html":{"url":"interfaces/PluginConfigMap.html","title":"interface - PluginConfigMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfigMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of plugin configs\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        PluginConfig\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:107\n                            \n                        \n                \n                    \n                        A plugin config per key\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginEmbedModule.html":{"url":"modules/PluginEmbedModule.html","title":"module - PluginEmbedModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginEmbedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/embed/embed.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Embed from '@editorjs/embed';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Embed,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'embed',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Embed Block',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginEmbedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Header from '@editorjs/header';\n\n\n//TODO: Remove once Header plugin has been fixed\n\nexport class FixedHeader extends Header {\n  constructor(config: any) {\n    super(config);\n  }\n\n  /**\n   * Fixed version of the function to normalize input data\n   * @param data The data for the header\n   * @returns The new header data\n   */\n  normalizeData(data: any = {}) {\n    const newData: any = {};\n    newData.text = data.text || '';\n    newData.level = parseInt(data.level, 10) || (this as any).defaultLevel.number;\n    return newData;\n  }\n}\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: FixedHeader,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'header',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Header'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginHeaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Image from '@editorjs/image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Image,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'image',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginInlineCodeModule.html":{"url":"modules/PluginInlineCodeModule.html","title":"module - PluginInlineCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginInlineCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/inline-code/inline-code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport InlineCode from '@editorjs/inline-code';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: InlineCode,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'inline-code',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Inline Code',\n        shortcut: 'CTRL+SHIFT+C'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginInlineCodeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Link from '@editorjs/link';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Link,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'link',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Link'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport List from '@editorjs/list';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: List,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'list',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS List'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Marker from '@editorjs/paragraph';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Marker,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Marker',\n        shortcut: 'CTRL+SHIFT+M'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Paragraph from '@editorjs/paragraph';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Paragraph,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Paragraph'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginQuoteModule.html":{"url":"modules/PluginQuoteModule.html","title":"module - PluginQuoteModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginQuoteModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/quote/quote.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Quote from '@editorjs/quote';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Quote,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'quote',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Quote Tool',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginQuoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport SimpleImage from '@editorjs/simple-image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: SimpleImage,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'simpleimage',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Simple Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginWarningModule.html":{"url":"modules/PluginWarningModule.html","title":"module - PluginWarningModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginWarningModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/warning/warning.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Warning from '@editorjs/warning';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Warning,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'warning',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Warning Block',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginWarningModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:18\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SavedMap.html":{"url":"interfaces/SavedMap.html","title":"interface - SavedMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SavedMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the save state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:28\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        EditorJSPlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:43\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nUNRELEASED\nToday @tinynodes/ngx-editorjs@3.0.0 has been released, along with @tinynodes/ngx-editorjs-plugins@2.0.0\nThe plugin architecture of the components has been re-written so that plugins are just NgModule classes\nthat provide multi providers for injecting plugins and their configuration.  These are merged into a map\nthat the NgxEditorJSPluginService now provides, and provides methods to getting tool options for instances.\nThis means the plugin module is now a dependency of the project.\nInternally there is some tidy-up related to this, and better async/await handling of the instance creation\nalong with API calls.  The Material demo \nhas been updated as well with improvements on using the component in an application.\nWednesday, 22nd May 2019\nToday @tinynodes/ngx-editorjs@2.0.0 has been released. The major bump is due to underlying changes that may be breaking - the entire service has been improved with better control over the EditorJS interface. Also in this release the exiting component has been upgraded to work with Angular Forms, and there is a new Material Form Field component provided too.\nThe demo has also been updated to reflect the new features of this, and a new demo added for the Material component.\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.0.0\n        \n            @angular/cdk : ~8.0.1\n        \n            @angular/common : ~8.0.0\n        \n            @angular/compiler : ~8.0.0\n        \n            @angular/core : ~8.0.0\n        \n            @angular/flex-layout : ~8.0.0-beta.26\n        \n            @angular/forms : ~8.0.0\n        \n            @angular/material : ~8.0.1\n        \n            @angular/platform-browser : ~8.0.0\n        \n            @angular/platform-browser-dynamic : ~8.0.0\n        \n            @angular/router : ~8.0.0\n        \n            @ngrx/effects : ~8.0.1\n        \n            @ngrx/store : ~8.0.1\n        \n            core-js : ~3.1.3\n        \n            hammerjs : ~2.0.8\n        \n            install : ~0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-json-viewer : ~2.4.0\n        \n            npm : ~6.9.0\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PluginTypes   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginTypes\n                    \n                \n                    \n                        \n                            The types of plugins supported, currently block and inline\n\n                        \n                    \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                Value : block\n                            \n                        \n                        \n                            \n                                 Inline\n                            \n                        \n                        \n                            \n                                Value : inline\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createPluginConfig   (libs/.../plugin.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS configuration, only returning keys that are set\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional config to use to set values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Method to return an module configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSModuleConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/util/plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createPluginConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePluginConfig(pluginConfigs, plugins)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to create the plugin config map for the plugin service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pluginConfigs\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of plugin configuration objects passed to this factory\n\n                                    \n                                \n                                \n                                    plugins\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of EditorJS plugins that are passed to this factory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the\ndevelopment diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides the plugin service module that exports handles\n plugins for @tinynodes/ngx-editorjs. The module also ships a set of default\n plugins and documentation on how to add new ones easily.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorJSComponentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSDemoMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSDemoMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSMatFieldModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSPluginServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMaterialFormFieldDemo\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatJsonOutputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatTagInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginEmbedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginEmbedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginInlineCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginQuoteModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginWarningModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSComponentModule\n\n\n\ncluster_NgxEditorJSComponentModule_declarations\n\n\n\ncluster_NgxEditorJSComponentModule_NgxEditorJSComponent_providers\n\n\n\ncluster_NgxEditorJSComponentModule_exports\n\n\n\ncluster_NgxEditorJSComponentModule_providers\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSMatFieldModule\n\n\n\ncluster_NgxEditorJSMatFieldModule_declarations\n\n\n\ncluster_NgxEditorJSMatFieldModule_NgxEditorJSMatFieldComponent_providers\n\n\n\ncluster_NgxEditorJSMatFieldModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSComponentModule\n\nNgxEditorJSComponentModule\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSComponent->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSDirective->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSComponentModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSComponentModule->NgxEditorJSDirective \n\n\n\n\n\nEDITORJS_FORM_VALUE_ACCESSOR\n\nEDITORJS_FORM_VALUE_ACCESSOR\n\nNgxEditorJSComponent -->\n\nEDITORJS_FORM_VALUE_ACCESSOR->NgxEditorJSComponent\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSService->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSDemoMaterialModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorjsPluginsModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginEmbedModule \n\nPluginEmbedModule \n\nPluginEmbedModule  -->\n\nNgxEditorjsPluginsModule->PluginEmbedModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginQuoteModule \n\nPluginQuoteModule \n\nPluginQuoteModule  -->\n\nNgxEditorjsPluginsModule->PluginQuoteModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPluginWarningModule \n\nPluginWarningModule \n\nPluginWarningModule  -->\n\nNgxEditorjsPluginsModule->PluginWarningModule \n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorjsPluginsModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPageStoreModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\n\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSMatFieldModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSMatFieldModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldModule->NgxEditorJSModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSMatFieldModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nEDITORJS_MATERIAL_FIELD_CONTROL\n\nEDITORJS_MATERIAL_FIELD_CONTROL\n\nNgxEditorJSMatFieldComponent -->\n\nEDITORJS_MATERIAL_FIELD_CONTROL->NgxEditorJSMatFieldComponent\n\n\n\n\n\nNgxEditorJSMatFieldModule \n\nNgxEditorJSMatFieldModule \n\nNgxEditorJSMatFieldModule  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldModule \n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginEmbedModule\n\nPluginEmbedModule\n\nNgxEditorjsPluginsModule -->\n\nPluginEmbedModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginQuoteModule\n\nPluginQuoteModule\n\nNgxEditorjsPluginsModule -->\n\nPluginQuoteModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginWarningModule\n\nPluginWarningModule\n\nNgxEditorjsPluginsModule -->\n\nPluginWarningModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxTinynodesMaterialFormFieldDemoComponent->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        26 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n ~~Provide peer-dependency ngrx/effects via library to control service~~\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            EditorJSPlugin   (libs/.../plugins.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            PluginProperty   (libs/.../plugins.ts)\n                        \n                        \n                            PluginType   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n    \n        \n            \n                \n                    \n                    EditorJSPlugin\n                \n            \n            \n                \n                    The EditorJS tool settings for this plugin\n\n                \n            \n            \n                \n                        ToolConstructable | ToolSettings\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginProperty\n                \n            \n            \n                \n                    A plugin property\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginType\n                \n            \n            \n                \n                    The types of plugins supported via the plugin type property\n\n                \n            \n            \n                \n                            PluginTypes.Block | PluginTypes.Inline | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (libs/.../test.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITOR_JS_TOOL_INJECTOR   (libs/.../plugins.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../editorjs.component.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../injector.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            PLUGIN_CONFIG   (libs/.../plugins.ts)\n                        \n                        \n                            PluginClasses   (libs/.../plugins.ts)\n                        \n                        \n                            require   (libs/.../test.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../mat-tag-input.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../mat-tag-input.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-components/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITOR_JS_TOOL_INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITOR_JS_TOOL_INJECTOR')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLUGIN_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PLUGIN_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token for a plugin config\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PluginClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PluginClasses')\n                        \n                    \n\n                \n                    \n                        Injection token for the plugin config map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        The NgxEditorJSBaseComponent Provider for NG_VALUE_ACCESSOR\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n                \n                    \n                        The EditorJS class injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    component: NgxEditorJSDemoHomeComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-component',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-form',\n    loadChildren: () =>\n      import('./demos/material-form-field/material-form-field.module').then(m => m.NgxTinynodesMaterialFormFieldDemo)\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Tag Value Accessor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
