var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.376,1,1.772]],["body/components/AppComponent.html",[0,2.213,1,3.045,2,2.67,3,0.165,4,0.165,5,2.4,6,1.394,7,2.4,8,2.4,9,0.144,10,3.22,11,4.604,12,3.432,13,2.246,14,4.102,15,3.358,16,3.753,17,3.22,18,6.031,19,3.22,20,5.344,21,0.567,22,1.421,23,5.196,24,0.804,25,0.017,26,0.967,27,1.784,28,2.246,29,2.858,30,0.924,31,3.984,32,0.372,33,0.424,34,0.165,35,0.629,36,1.214,37,3.013,38,2.525,39,1.784,40,3.883,41,2.4,42,2.014,43,2.4,44,1.784,45,1.611,46,2.4,47,1.882,48,2.4,49,2.4,50,1.882,51,2.4,52,1.784,53,1.462,54,2.4,55,1.882,56,2.4,57,2.246,58,1.784,59,2.246,60,2.4,61,0.009,62,0.012,63,0.009]],["title/modules/AppModule.html",[64,0.793,65,2.634]],["body/modules/AppModule.html",[1,3.454,3,0.145,4,0.145,9,0.127,10,2.107,25,0.018,29,1.414,32,0.689,33,0.373,34,0.145,35,0.552,36,1.065,47,3.143,55,3.143,61,0.008,62,0.011,63,0.008,64,0.739,65,5.237,66,1.283,67,1.283,68,2.278,69,2.278,70,1.414,71,1.414,72,3.012,73,3.012,74,3.012,75,3.012,76,3.868,77,4.308,78,1.976,79,1.414,80,1.414,81,3.497,82,3.765,83,4.887,84,4.887,85,3.497,86,2.078,87,4.887,88,3.012,89,2.693,90,3.012,91,2.693,92,3.012,93,2.693,94,3.012,95,2.693,96,3.012,97,3.012,98,1.346,99,1.882,100,0.457,101,2.265,102,3.012,103,2.693,104,3.497,105,3.497,106,3.497,107,2.693,108,3.497,109,3.497,110,3.497,111,3.497,112,3.012,113,3.497,114,3.497]],["title/interfaces/BasePlugin.html",[115,0.375,116,1.444]],["body/interfaces/BasePlugin.html",[3,0.159,4,0.159,9,0.139,21,0.547,22,1.388,24,1.053,25,0.018,26,1.438,32,0.488,33,0.41,34,0.275,61,0.009,62,0.012,63,0.009,100,0.488,115,0.664,116,2.281,117,1.12,118,0.159,119,2.492,120,0.978,121,4.021,122,4.021,123,2.744,124,3.198,125,2.122,126,3.665,127,1.665,128,4.294,129,4.894,130,3.145,131,4.021,132,2.318,133,2.281,134,1.285,135,2.038,136,1.52,137,2.318,138,2.608,139,2.169,140,2.338,141,2.701,142,2.169,143,2.701]],["title/interfaces/Block.html",[115,0.375,144,0.831]],["body/interfaces/Block.html",[3,0.139,4,0.139,6,1.172,9,0.121,21,0.476,22,1.261,24,1.504,25,0.018,26,1.673,34,0.29,61,0.008,62,0.011,63,0.008,98,2.304,100,0.313,115,0.731,117,0.975,118,0.139,120,0.851,136,0.975,144,1.574,145,1.499,146,3.348,147,2.525,148,2.99,149,1.354,150,2.318,151,2.24,152,1.582,153,1.582,154,1.673,155,1.673,156,1.673,157,2.016,158,2.196,159,1.999,160,2.24,161,2.016,162,2.304,163,1.673,164,1.673,165,1.583,166,2.016,167,1.673,168,2.016,169,1.582]],["title/modules/CodeModule.html",[64,0.793,170,2.43]],["body/modules/CodeModule.html",[3,0.206,4,0.206,9,0.18,25,0.017,32,0.576,33,0.53,34,0.206,35,0.785,36,1.515,61,0.011,62,0.014,63,0.011,64,1.051,66,1.824,67,1.824,68,2.01,69,2.01,70,2.71,71,2.01,78,2.493,79,2.01,80,2.01,86,2.622,100,0.465,118,0.206,170,4.756,171,4.283,172,4.283,173,4.756,174,4.972,175,4.972]],["title/interfaces/EditorJSConfig.html",[115,0.375,176,2.43]],["body/interfaces/EditorJSConfig.html",[3,0.15,4,0.15,9,0.131,21,0.516,22,1.333,24,1.251,25,0.018,26,1.675,27,2.776,32,0.469,33,0.387,34,0.257,38,2.37,42,1.675,61,0.008,62,0.011,63,0.008,100,0.608,115,0.574,117,1.056,118,0.15,120,0.922,123,2.706,132,2.186,133,1.931,134,1.212,136,1.056,138,1.813,140,1.625,144,1.111,147,2.591,159,1.675,176,3.723,177,2.351,178,3.863,179,2.827,180,4.353,181,3.735,182,4.353,183,4.427,184,3.863,185,3.863,186,3.249,187,4.353,188,3.735,189,3.522,190,2.827,191,2.37,192,3.522,193,2.827,194,2.186,195,1.922,196,2.046,197,2.548]],["title/components/EditorPageComponent.html",[0,1.376,44,1.68]],["body/components/EditorPageComponent.html",[0,1.729,1,1.211,2,1.946,3,0.106,4,0.106,5,1.544,6,0.897,7,1.544,8,1.544,9,0.093,13,1.445,14,3.687,15,1.28,17,2.347,19,2.347,21,0.365,22,1.036,23,3.356,24,0.786,25,0.018,27,1.148,28,1.445,29,2.506,30,1.383,32,0.529,33,0.273,34,0.106,35,0.405,36,0.781,37,2.196,38,1.84,39,1.148,40,3.172,41,1.544,42,1.758,43,1.544,44,2.357,45,2.742,46,1.544,47,1.211,48,1.544,49,1.544,50,1.211,51,1.544,52,1.148,53,2.447,54,1.544,55,1.211,56,1.544,57,1.445,58,1.148,59,1.445,60,1.544,61,0.006,62,0.009,63,0.006,99,0.987,100,0.597,118,0.257,123,0.987,125,1.301,127,1.242,144,0.568,165,0.856,198,5.339,199,4.774,200,2.208,201,1.84,202,4.712,203,4.712,204,3.895,205,4.352,206,5.962,207,4.712,208,5.264,209,2.354,210,5.264,211,2.523,212,1.036,213,2.563,214,5.264,215,2.789,216,2.563,217,1.28,218,3.895,219,2.563,220,1.429,221,2.523,222,2.563,223,3.895,224,2.523,225,3.895,226,2.523,227,3.895,228,2.563,229,3.309,230,2.563,231,2.563,232,2.563,233,3.895,234,2.563,235,1.974,236,2.563,237,1.66,238,2.563,239,2.563,240,2.563,241,1.974,242,2.347,243,2.563,244,2.563,245,2.563,246,2.563,247,2.563,248,2.563,249,3.895,250,3.001,251,1.974,252,3.001,253,2.735,254,1.974,255,1.974]],["title/interfaces/Header.html",[115,0.375,162,1.444]],["body/interfaces/Header.html",[3,0.139,4,0.139,6,1.175,9,0.122,21,0.478,22,1.263,24,1.477,25,0.018,26,1.674,34,0.29,61,0.008,62,0.011,63,0.008,98,2.307,115,0.731,117,0.977,118,0.139,120,0.853,136,0.977,144,1.527,145,1.503,147,2.307,148,2.373,149,1.357,150,2.32,151,2.244,152,1.586,153,1.586,154,1.677,155,1.677,156,1.677,157,2.019,158,2.199,159,2.001,160,2.987,161,2.019,162,2.527,163,2.994,164,2.754,165,1.586,166,2.019,167,1.677,168,2.019,169,1.586]],["title/interfaces/HeaderBlock.html",[115,0.375,166,1.595]],["body/interfaces/HeaderBlock.html",[3,0.143,4,0.143,6,1.205,9,0.125,21,0.49,22,1.285,24,1.483,25,0.018,26,1.607,34,0.292,61,0.008,62,0.011,63,0.008,98,2.333,115,0.734,117,1.002,118,0.143,120,0.875,136,1.002,144,1.562,145,1.542,147,2.151,148,2.415,149,1.392,150,2.342,151,2.284,152,1.627,153,1.627,154,1.72,155,1.72,156,1.72,157,2.056,158,2.342,159,2.024,160,2.284,161,2.056,162,2.457,163,1.72,164,1.72,165,1.866,166,2.376,167,1.72,168,2.056,169,1.627]],["title/interfaces/Image.html",[98,1.444,115,0.375]],["body/interfaces/Image.html",[3,0.14,4,0.14,6,1.181,9,0.122,21,0.48,22,1.267,24,1.452,25,0.018,26,1.704,30,0.783,34,0.291,61,0.008,62,0.011,63,0.008,98,2.531,115,0.732,117,0.982,118,0.197,120,0.857,136,1.387,144,1.529,145,1.511,147,2.312,148,2.381,149,1.364,150,2.324,151,2.252,152,1.594,153,1.594,154,1.686,155,1.686,156,1.686,157,2.027,158,2.203,159,2.006,160,2.252,161,2.027,162,2.312,163,1.686,164,1.686,165,1.592,166,2.027,167,3,168,2.027,169,1.594,256,2.369,257,3.374]],["title/interfaces/ImageBlock.html",[115,0.375,168,1.595]],["body/interfaces/ImageBlock.html",[3,0.143,4,0.143,6,1.205,9,0.125,21,0.49,22,1.285,24,1.483,25,0.018,26,1.607,34,0.292,61,0.008,62,0.011,63,0.008,98,2.457,115,0.734,117,1.002,118,0.143,120,0.875,136,1.002,144,1.562,145,1.542,147,2.151,148,2.415,149,1.392,150,2.342,151,2.284,152,1.627,153,1.627,154,1.72,155,1.72,156,1.72,157,2.056,158,2.342,159,2.024,160,2.284,161,2.056,162,2.333,163,1.72,164,1.72,165,1.866,166,2.056,167,1.72,168,2.376,169,1.627]],["title/modules/ImageModule.html",[64,0.793,258,2.634]],["body/modules/ImageModule.html",[3,0.206,4,0.206,9,0.18,25,0.017,32,0.576,33,0.53,34,0.206,35,0.785,36,1.515,61,0.011,62,0.014,63,0.011,64,1.051,66,1.824,67,1.824,68,2.01,69,2.01,70,2.71,71,2.01,78,2.493,79,2.01,80,2.01,86,2.622,100,0.465,118,0.206,258,5.155,259,4.283,260,4.283,261,4.756,262,4.972,263,4.283]],["title/modules/LinkModule.html",[64,0.793,264,2.43]],["body/modules/LinkModule.html",[3,0.206,4,0.206,9,0.18,25,0.017,32,0.576,33,0.53,34,0.206,35,0.785,36,1.515,61,0.011,62,0.014,63,0.011,64,1.051,66,1.824,67,1.824,68,2.01,69,2.01,70,2.71,71,2.01,78,2.493,79,2.01,80,2.01,86,2.622,100,0.465,118,0.206,264,4.756,265,4.283,266,4.283,267,4.756,268,4.972,269,4.972]],["title/interfaces/List.html",[115,0.375,150,1.376]],["body/interfaces/List.html",[3,0.139,4,0.139,6,1.175,9,0.122,21,0.478,22,1.263,24,1.477,25,0.018,26,1.594,34,0.29,61,0.008,62,0.011,63,0.008,98,2.307,115,0.736,117,0.977,118,0.139,120,0.853,136,0.977,144,1.527,145,1.503,147,2.122,148,2.994,149,1.357,150,2.476,151,2.831,152,1.586,153,1.586,154,2.994,155,2.994,156,1.677,157,2.019,158,2.199,159,2.001,160,2.244,161,2.019,162,2.307,163,1.677,164,1.677,165,1.586,166,2.019,167,1.677,168,2.019,169,1.586]],["title/interfaces/ListBlock.html",[115,0.375,157,1.595]],["body/interfaces/ListBlock.html",[3,0.142,4,0.142,6,1.199,9,0.124,21,0.487,22,1.281,24,1.482,25,0.018,26,1.604,34,0.292,61,0.008,62,0.011,63,0.008,98,2.328,115,0.739,117,0.997,118,0.142,120,0.87,136,0.997,144,1.581,145,1.534,147,2.145,148,2.407,149,1.385,150,2.424,151,2.276,152,1.618,153,1.618,154,1.711,155,1.711,156,2.407,157,2.369,158,2.338,159,2.019,160,2.276,161,2.048,162,2.328,163,1.711,164,1.711,165,1.609,166,2.048,167,1.711,168,2.048,169,1.618]],["title/modules/MarkerModule.html",[64,0.793,270,2.43]],["body/modules/MarkerModule.html",[3,0.206,4,0.206,9,0.18,25,0.017,32,0.576,33,0.53,34,0.206,35,0.785,36,1.515,61,0.011,62,0.014,63,0.011,64,1.051,66,1.824,67,1.824,68,2.01,69,2.01,70,2.71,71,2.01,78,2.493,79,2.01,80,2.01,86,2.622,100,0.465,118,0.206,270,4.756,271,4.283,272,4.283,273,4.756,274,4.972,275,4.972]],["title/components/NavBarComponent.html",[0,1.376,47,1.772]],["body/components/NavBarComponent.html",[0,2.193,1,1.849,2,2.639,3,0.162,4,0.162,5,2.358,6,1.37,7,2.358,8,2.358,9,0.142,10,3.182,13,2.206,14,4.087,15,1.956,17,3.182,19,3.182,25,0.017,29,2.845,30,0.908,32,0.366,33,0.417,34,0.162,35,0.618,36,1.193,37,2.977,38,2.495,39,1.753,40,3.855,41,2.358,42,1.996,43,2.358,44,1.753,45,1.583,46,2.358,47,3.023,48,4.311,49,2.358,50,1.849,51,2.358,52,1.753,53,1.436,54,2.358,55,1.849,56,2.358,57,2.206,58,1.753,59,2.206,60,2.358,61,0.009,62,0.012,63,0.009,107,4.068,212,2.417,276,4.55,277,3.372,278,5.281,279,5.977,280,5.281,281,3.914,282,5.281,283,3.708,284,5.281,285,5.281,286,5.281]],["title/components/NgxEditorJSComponent.html",[0,1.376,50,1.772]],["body/components/NgxEditorJSComponent.html",[0,2.384,1,1.184,2,1.913,3,0.104,4,0.104,5,1.509,6,0.877,7,2.8,8,1.509,9,0.091,13,1.412,14,3.663,15,1.252,17,2.307,19,2.307,21,0.356,22,1.018,24,1.131,25,0.018,26,0.93,27,1.715,29,2.486,30,1.3,32,0.486,33,0.267,34,0.104,35,0.396,36,0.763,37,2.158,38,2.458,39,2.081,40,3.135,41,1.509,42,1.738,43,1.509,44,1.122,45,2.766,46,1.509,47,1.184,48,1.509,49,1.509,50,2.458,51,1.509,52,1.122,53,0.919,54,1.509,55,1.184,56,1.509,57,1.412,58,2.33,59,1.412,60,1.509,61,0.006,62,0.009,63,0.006,100,0.486,115,0.383,118,0.245,120,0.973,123,1.789,128,2.307,144,1.029,149,1.548,160,1.184,165,1.872,179,2.158,181,2.8,188,2.307,190,2.158,191,1.809,192,2.688,209,3.247,212,1.013,215,2.969,217,1.252,242,2.8,251,1.93,252,2.949,253,2.688,254,2.949,255,2.949,287,5.091,288,2.158,289,3.829,290,2.949,291,2.48,292,3.829,293,3.829,294,4.008,295,3.298,296,4.647,297,3.829,298,3.995,299,3.298,300,2.505,301,3.829,302,2.949,303,2.505,304,2.505,305,3.829,306,2.505,307,3.829,308,3.829,309,2.505,310,4.003,311,2.505,312,2.158,313,2.158,314,1.93,315,1.93,316,1.759,317,2.158,318,3.829,319,2.505,320,2.505,321,2.505,322,2.505,323,2.505,324,2.505,325,2.505]],["title/interfaces/NgxEditorJSConfig.html",[115,0.375,195,1.987]],["body/interfaces/NgxEditorJSConfig.html",[3,0.173,4,0.173,9,0.151,21,0.595,22,1.468,24,0.844,25,0.018,26,1.5,27,2.472,32,0.516,33,0.446,34,0.272,38,1.976,42,1.397,61,0.009,62,0.013,63,0.009,100,0.656,115,0.617,117,1.218,118,0.173,123,2.125,132,2.52,133,2.125,134,1.397,136,1.218,138,2.09,140,1.873,144,0.927,147,2.125,159,1.397,176,4.256,177,2.709,178,3.222,179,2.358,180,2.937,181,2.52,182,2.937,183,3.222,184,3.222,185,3.222,186,2.709,187,3.876,188,3.326,189,2.937,190,2.358,191,1.976,192,2.937,193,2.358,194,2.52,195,2.924,196,2.358,197,2.937]],["title/directives/NgxEditorJSDirective.html",[39,1.68,58,1.68]],["body/directives/NgxEditorJSDirective.html",[2,1.972,3,0.108,4,0.108,9,0.094,13,1.47,14,2.225,21,0.371,22,1.049,24,1.072,25,0.018,27,1.168,28,1.47,29,1.596,30,1.489,32,0.496,33,0.278,34,0.108,35,0.412,37,2.225,38,2.509,39,2.688,42,1.318,45,2.307,57,1.47,58,1.767,59,2.225,61,0.006,62,0.009,63,0.006,100,0.614,118,0.272,120,0.663,123,1.519,125,1.318,127,1.259,134,0.871,144,1.055,165,1.906,179,3.384,190,2.225,191,1.865,201,1.865,209,2.379,211,2.557,212,1.054,215,3.18,217,1.972,220,1.949,221,3.44,241,2.009,242,3.2,283,2.771,294,3.04,295,3.4,298,2.869,299,3.4,310,3.4,314,2.009,315,2.009,326,5.663,327,2.246,328,3.947,329,2.378,330,3.4,331,5.311,332,3.04,333,3.4,334,3.947,335,3.4,336,3.947,337,4.762,338,4.762,339,4.762,340,5.705,341,5.311,342,3.947,343,5.311,344,2.607,345,5.311,346,3.947,347,3.947,348,2.378,349,3.04,350,2.607,351,3.947,352,5.311,353,2.607,354,2.607,355,2.607,356,2.607,357,2.246,358,2.607,359,2.607,360,2.607,361,2.607,362,2.607,363,2.607,364,2.607,365,2.607,366,2.607,367,2.607,368,2.607,369,2.607]],["title/modules/NgxEditorJSModule.html",[64,0.793,76,2.26]],["body/modules/NgxEditorJSModule.html",[3,0.089,4,0.089,9,0.078,16,2.389,24,0.434,25,0.018,27,1.889,28,1.213,29,1.376,30,0.499,32,0.657,33,0.229,34,0.175,35,0.34,36,0.656,42,0.719,45,0.87,50,3.115,58,2.953,61,0.005,62,0.008,63,0.005,64,1.104,66,1.548,67,0.79,68,1.706,69,0.87,70,1.939,71,1.706,76,4.434,78,1.376,79,0.87,80,0.87,82,2.621,86,1.794,100,0.488,112,2.931,118,0.141,120,0.547,123,1.624,125,0.719,126,2.389,127,1.346,129,2.621,135,1.802,138,1.075,139,1.918,140,1.889,147,0.829,150,0.79,159,1.136,162,0.829,179,2.703,180,2.389,181,2.05,182,2.389,186,1.394,193,2.378,194,2.889,195,2.766,196,1.918,212,0.87,215,2.941,217,1.075,220,0.79,283,2.389,291,2.204,312,1.854,313,1.854,314,1.658,329,2.05,332,2.621,335,4.13,348,2.889,370,1.854,371,1.854,372,1.854,373,1.854,374,1.854,375,4.333,376,4.481,377,3.596,378,3.345,379,2.389,380,1.511,381,2.931,382,2.931,383,3.402,384,2.931,385,3.402,386,2.152,387,3.402,388,2.152,389,1.658,390,1.658,391,3.25,392,4.219,393,2.931,394,1.658,395,3.402,396,2.152,397,2.152,398,2.152,399,2.152,400,2.152,401,1.854,402,1.394,403,2.05,404,2.152,405,2.05,406,2.152,407,2.152,408,2.05,409,2.152,410,2.389,411,1.854,412,2.389,413,2.152,414,1.854,415,2.152,416,2.152,417,2.152,418,2.152,419,2.152,420,2.152,421,2.152,422,2.152,423,2.152]],["title/injectables/NgxEditorJSService.html",[215,1.987,424,0.757]],["body/injectables/NgxEditorJSService.html",[3,0.07,4,0.07,9,0.061,16,1.179,21,0.239,22,0.74,24,1.058,25,0.018,26,1.678,27,1.246,28,1.568,30,1.32,32,0.463,33,0.179,34,0.07,35,0.265,42,1.751,45,2.12,61,0.004,62,0.006,63,0.004,100,0.586,118,0.243,120,1.332,123,2.191,125,1.384,127,0.887,134,0.561,136,0.81,138,1.39,140,2.057,144,1.261,147,1.595,165,2.292,179,3.945,181,4.282,187,1.179,188,1.676,189,1.953,190,2.336,191,2.906,193,1.568,195,2.195,196,0.946,205,3.996,209,3.343,212,1.125,215,2.195,217,2.62,220,1.817,221,3.207,229,3.225,237,1.087,242,1.011,250,2.143,290,2.143,291,1.802,298,1.676,302,2.143,315,1.293,316,3.996,329,1.676,332,2.143,349,3.192,357,2.397,378,2.496,389,1.293,390,2.143,401,1.446,424,0.561,425,0.646,426,1.446,427,2.782,428,3.562,429,3.562,430,2.782,431,4.144,432,2.782,433,1.679,434,3.069,435,3.562,436,4.144,437,2.782,438,2.782,439,1.679,440,2.782,441,3.562,442,1.679,443,4.144,444,2.397,445,2.782,446,4.266,447,2.397,448,2.782,449,1.679,450,2.782,451,1.679,452,2.782,453,1.679,454,2.782,455,2.782,456,2.782,457,2.782,458,2.782,459,1.679,460,2.782,461,3.57,462,2.782,463,2.782,464,1.679,465,3.069,466,1.679,467,1.446,468,2.782,469,1.679,470,1.679,471,1.446,472,1.679,473,1.446,474,1.446,475,1.679,476,2.782,477,1.679,478,3.562,479,1.679,480,1.679,481,1.679,482,1.679,483,2.782,484,2.782,485,2.782,486,2.782,487,1.679,488,1.679,489,1.679,490,1.679,491,1.679,492,1.679,493,1.679,494,1.679,495,1.679,496,1.679,497,1.679,498,1.679,499,1.679]],["title/interfaces/NgxEditorJSTools.html",[115,0.375,194,2.26]],["body/interfaces/NgxEditorJSTools.html",[3,0.176,4,0.176,9,0.154,25,0.018,26,1.605,27,2.498,30,0.985,32,0.521,33,0.453,34,0.274,38,2.007,42,1.419,61,0.01,62,0.013,63,0.01,100,0.582,115,0.622,117,1.237,118,0.231,132,2.56,133,2.397,134,1.419,136,1.624,138,2.123,140,1.903,144,0.941,147,2.147,159,1.419,176,3.613,177,2.752,178,3.273,179,2.395,180,2.983,181,2.56,182,2.983,183,3.273,184,3.273,185,3.273,186,2.752,187,3.916,188,3.36,189,2.983,190,2.395,191,2.007,192,2.983,193,2.395,194,3.36,195,2.251,196,2.395,197,2.983,256,2.983,500,4.249]],["title/modules/NgxEditorjsDemoModule.html",[64,0.793,77,2.43]],["body/modules/NgxEditorjsDemoModule.html",[3,0.12,4,0.12,9,0.105,25,0.018,29,1.722,32,0.693,33,0.308,34,0.12,35,0.456,36,0.88,44,3.158,52,3.218,61,0.007,62,0.01,63,0.007,64,0.611,66,1.06,67,1.06,68,2.047,69,1.168,70,1.722,71,2.047,76,3.756,77,4.874,78,1.722,79,1.168,80,1.168,82,3.281,86,1.811,90,2.488,91,2.224,93,2.224,95,2.224,99,1.112,100,0.522,102,2.488,103,2.224,118,0.12,142,2.401,170,4.039,193,1.628,199,2.224,235,2.224,264,4.039,270,4.039,348,1.74,393,3.67,394,2.224,412,2.991,414,2.488,501,2.488,502,2.488,503,2.488,504,2.488,505,4.568,506,4.039,507,2.224,508,2.888,509,4.26,510,4.26,511,2.888,512,2.888,513,2.488,514,2.888,515,2.224,516,2.888,517,2.888,518,2.888,519,2.888,520,2.224,521,2.888,522,2.224,523,2.888,524,2.888,525,2.888,526,2.888,527,2.028,528,2.888,529,2.888,530,2.888,531,2.888,532,2.888]],["title/interfaces/Page.html",[53,1.376,115,0.375]],["body/interfaces/Page.html",[3,0.185,4,0.185,9,0.162,21,0.637,22,1.534,24,1.361,25,0.018,26,1.637,32,0.539,34,0.264,53,2.117,61,0.01,62,0.013,63,0.01,99,1.723,100,0.539,115,0.638,117,1.303,118,0.185,136,1.303,144,1.278,158,1.642,165,2.253,191,3.546,224,4.369,226,4.369,533,3.142,534,4.063,535,4.369,536,2.523]],["title/interfaces/PageBlock.html",[115,0.375,534,2.26]],["body/interfaces/PageBlock.html",[3,0.198,4,0.198,9,0.173,21,0.68,22,1.599,24,0.964,25,0.017,26,1.46,32,0.562,34,0.273,53,1.753,61,0.011,62,0.014,63,0.011,99,1.839,100,0.562,115,0.658,117,1.391,118,0.198,136,1.391,144,1.458,158,2.207,165,1.596,191,3.584,224,3.095,226,3.095,533,3.355,534,3.966,535,3.896,536,2.693]],["title/components/PageContainerComponent.html",[0,1.376,52,1.68]],["body/components/PageContainerComponent.html",[0,1.922,1,1.448,2,2.223,3,0.127,4,0.127,5,1.847,6,1.073,7,1.847,8,1.847,9,0.111,13,1.728,14,3.867,15,1.532,17,2.681,19,2.681,21,0.436,24,0.619,25,0.017,29,2.774,30,1.032,32,0.537,33,0.327,34,0.127,35,0.484,36,0.934,37,2.509,38,2.103,39,1.373,40,3.463,41,1.847,42,1.92,43,1.847,44,1.373,45,1.24,46,1.847,47,1.448,48,1.847,49,1.847,50,1.448,51,1.847,52,2.574,53,2.517,54,1.847,55,1.448,56,1.847,57,1.728,58,1.373,59,1.728,60,1.847,61,0.007,62,0.01,63,0.007,64,0.941,99,1.713,100,0.614,101,3.724,118,0.217,123,1.18,127,0.978,211,2.883,212,1.24,217,1.532,229,3.125,237,1.986,241,2.361,242,1.847,251,2.361,252,2.361,253,2.153,254,2.361,255,2.361,384,3.834,520,4.036,537,4.513,538,2.641,539,4.45,540,5.239,541,4.45,542,4.613,543,3.066,544,3.836,545,3.066,546,2.641,547,3.066,548,3.066,549,3.066,550,3.066,551,4.45,552,4.45,553,4.45,554,3.066,555,4.45,556,4.45,557,4.45,558,4.45,559,4.45,560,4.45,561,4.45,562,3.834,563,4.45,564,4.45,565,4.45,566,3.834]],["title/modules/PageStoreModule.html",[64,0.793,505,2.43]],["body/modules/PageStoreModule.html",[3,0.188,4,0.188,9,0.164,25,0.017,32,0.634,33,0.483,34,0.188,35,0.717,36,1.382,61,0.01,62,0.013,63,0.01,64,0.959,66,1.664,67,1.664,68,1.834,69,1.834,70,2.598,71,1.834,78,2.353,79,1.834,80,1.834,86,2.474,100,0.424,118,0.188,505,4.872,544,4.321,567,3.907,568,3.907,569,4.321,570,3.8,571,4.535,572,3.907,573,4.535,574,3.494]],["title/injectables/PagesQuery.html",[424,0.757,569,2.26]],["body/injectables/PagesQuery.html",[3,0.199,4,0.199,9,0.174,24,0.968,25,0.018,30,1.112,32,0.647,33,0.511,34,0.199,35,0.757,42,1.601,53,1.759,61,0.011,62,0.014,63,0.011,100,0.563,118,0.25,123,1.846,158,2.212,212,1.939,217,2.395,424,1.216,425,1.846,536,2.703,569,3.632,570,3.665,574,3.693,575,4.13,576,6.593,577,4.794,578,4.794,579,4.643,580,3.367,581,3.106,582,4.794,583,4.794]],["title/injectables/PagesService.html",[424,0.757,544,2.26]],["body/injectables/PagesService.html",[3,0.084,4,0.084,9,0.073,21,0.289,22,0.863,24,1.26,25,0.018,30,1.479,32,0.531,33,0.216,34,0.084,35,0.32,42,1.897,53,2.715,61,0.005,62,0.007,63,0.005,99,0.781,100,0.616,118,0.269,120,1.178,123,2.343,125,1.084,127,0.647,138,1.014,140,0.908,144,1.413,149,1.312,165,1.897,190,1.83,191,3.259,205,2.849,209,2.534,211,2.103,212,0.82,217,2.838,220,2.084,221,3.505,224,1.314,226,1.314,229,3.989,237,1.314,242,3.26,250,2.5,294,2.5,298,1.956,316,2.849,317,1.748,329,1.956,330,2.796,333,2.796,390,1.563,424,0.655,425,0.781,444,2.796,461,2.796,534,3.423,536,1.144,542,4.383,544,1.956,546,1.748,562,2.796,566,2.796,569,3.056,570,2.687,572,1.748,574,1.563,579,4.912,580,1.424,584,1.748,585,4.637,586,3.995,587,3.246,588,2.796,589,3.246,590,3.246,591,3.246,592,2.029,593,3.246,594,3.246,595,2.029,596,3.246,597,2.029,598,5.072,599,3.246,600,2.029,601,3.246,602,3.246,603,2.029,604,3.246,605,2.029,606,3.246,607,2.029,608,3.246,609,3.246,610,2.029,611,2.029,612,2.029,613,4.637,614,3.246,615,2.029,616,2.029,617,2.029,618,3.246,619,2.029,620,2.029,621,4.057,622,3.246,623,2.029,624,2.029,625,2.029]],["title/interfaces/PagesState.html",[115,0.375,581,2.43]],["body/interfaces/PagesState.html",[3,0.206,4,0.206,9,0.18,25,0.018,32,0.627,33,0.53,34,0.255,35,0.785,42,1.661,53,1.824,61,0.011,62,0.014,63,0.011,100,0.465,115,0.497,117,1.447,118,0.206,158,2.459,212,2.01,424,1.244,536,2.803,542,3.491,570,2.634,580,3.491,581,3.994,626,3.83,627,5.775,628,5.312,629,5.312,630,4.283]],["title/injectables/PagesStore.html",[424,0.757,570,1.987]],["body/injectables/PagesStore.html",[3,0.201,4,0.201,9,0.176,25,0.018,30,1.128,32,0.62,33,0.518,34,0.252,35,0.768,42,1.625,53,1.785,61,0.011,62,0.014,63,0.011,100,0.569,115,0.486,118,0.252,158,2.435,212,2.684,424,1.227,425,1.873,536,2.742,542,3.415,570,3.222,580,3.415,581,3.151,626,3.747,627,5.24,628,5.718,629,5.24,630,4.19,631,4.864]],["title/interfaces/Paragraph.html",[115,0.375,159,1.253]],["body/interfaces/Paragraph.html",[3,0.141,4,0.141,6,1.196,9,0.124,21,0.486,22,1.279,24,1.469,25,0.018,26,1.681,34,0.292,61,0.008,62,0.011,63,0.008,98,2.325,115,0.738,117,0.995,118,0.141,120,0.868,136,0.995,144,1.534,145,1.53,147,2.142,148,2.403,149,1.382,150,2.335,151,2.272,152,1.614,153,1.614,154,1.707,155,1.707,156,1.707,157,2.045,158,2.216,159,2.205,160,3.007,161,2.045,162,2.325,163,1.707,164,1.707,165,1.606,166,2.045,167,1.707,168,2.045,169,1.614]],["title/interfaces/ParagraphBlock.html",[115,0.375,161,1.595]],["body/interfaces/ParagraphBlock.html",[3,0.142,4,0.142,6,1.202,9,0.124,21,0.489,22,1.283,24,1.482,25,0.018,26,1.606,34,0.292,61,0.008,62,0.011,63,0.008,98,2.33,115,0.739,117,1,118,0.142,120,0.873,136,1,144,1.582,145,1.538,147,2.148,148,2.411,149,1.389,150,2.34,151,2.28,152,1.623,153,1.623,154,1.716,155,1.716,156,1.716,157,2.052,158,2.34,159,2.13,160,2.28,161,2.373,162,2.33,163,1.716,164,1.716,165,1.612,166,2.052,167,1.716,168,2.052,169,1.623]],["title/injectables/PluginCode.html",[173,2.43,424,0.757]],["body/injectables/PluginCode.html",[3,0.202,4,0.202,9,0.177,21,0.694,25,0.018,30,1.132,32,0.651,33,0.52,34,0.202,35,0.771,61,0.011,62,0.014,63,0.011,92,5.252,93,3.76,99,1.879,100,0.621,116,2.347,118,0.252,124,2.961,125,2.036,127,1.557,133,2.559,134,1.631,173,3.949,201,2.306,220,1.791,424,1.23,425,1.879,632,4.206,633,4.882]],["title/interfaces/PluginConfig.html",[115,0.375,135,1.987]],["body/interfaces/PluginConfig.html",[3,0.176,4,0.176,9,0.154,25,0.018,26,1.605,30,0.985,32,0.521,33,0.453,34,0.284,61,0.01,62,0.013,63,0.01,100,0.397,115,0.661,116,2.397,117,1.237,118,0.231,119,2.752,121,3.273,122,3.273,123,2.397,124,2.996,125,1.863,126,2.983,127,1.355,128,3.751,130,2.56,131,3.273,132,2.56,133,2.397,134,1.419,135,2.955,136,1.813,137,2.56,138,2.787,139,2.395,140,2.498,141,2.983,142,2.395,143,2.983,256,2.983,634,4.249]],["title/injectables/PluginHeader.html",[403,2.26,424,0.757]],["body/injectables/PluginHeader.html",[3,0.187,4,0.187,9,0.163,21,0.641,25,0.018,30,1.045,32,0.632,33,0.48,34,0.187,35,1.012,61,0.01,62,0.013,63,0.01,100,0.542,116,2.231,118,0.24,120,1.145,124,3.195,125,1.935,127,2.043,130,3.491,133,2.466,134,1.505,162,2.231,201,2.129,209,3.2,220,2.35,402,2.918,403,3.491,424,1.169,425,1.734,635,3.881,636,4.505,637,3.881]],["title/modules/PluginHeaderModule.html",[64,0.793,375,2.43]],["body/modules/PluginHeaderModule.html",[3,0.195,4,0.195,9,0.171,25,0.017,32,0.557,33,0.502,34,0.195,35,0.744,36,1.435,45,2.41,61,0.011,62,0.014,63,0.011,64,1.383,66,1.728,67,1.728,68,1.905,69,1.905,70,2.644,71,1.905,78,2.41,79,1.905,80,1.905,86,2.535,118,0.195,120,1.197,144,1.321,162,2.295,348,3.591,375,4.692,403,4.364,638,4.058,639,4.058,640,4.71,641,4.592,642,4.71]],["title/injectables/PluginImage.html",[261,2.43,424,0.757]],["body/injectables/PluginImage.html",[3,0.202,4,0.202,9,0.177,21,0.694,25,0.018,30,1.132,32,0.651,33,0.52,34,0.202,35,0.771,61,0.011,62,0.014,63,0.011,98,2.347,99,1.879,100,0.621,116,2.347,118,0.252,124,2.961,125,2.036,127,1.557,133,2.559,134,1.631,201,2.306,220,1.791,261,3.949,424,1.23,425,1.879,513,4.206,643,4.206,644,4.882]],["title/injectables/PluginLink.html",[267,2.43,424,0.757]],["body/injectables/PluginLink.html",[3,0.202,4,0.202,9,0.177,21,0.694,25,0.018,30,1.132,32,0.651,33,0.52,34,0.202,35,0.771,61,0.011,62,0.014,63,0.011,99,1.879,100,0.621,116,2.347,118,0.252,124,2.961,125,2.036,127,1.557,133,2.559,134,1.631,201,2.306,220,1.791,267,3.949,424,1.23,425,1.879,645,4.206,646,4.882,647,6.096,648,4.882]],["title/injectables/PluginList.html",[405,2.26,424,0.757]],["body/injectables/PluginList.html",[3,0.187,4,0.187,9,0.163,21,0.641,25,0.018,30,1.045,32,0.632,33,0.48,34,0.187,35,1.012,61,0.01,62,0.013,63,0.01,100,0.542,116,2.231,118,0.24,120,1.145,124,3.195,125,1.935,127,2.043,130,3.491,133,2.466,134,1.505,150,2.126,201,2.129,209,3.2,220,2.35,402,2.918,405,3.491,424,1.169,425,1.734,515,3.47,649,3.881,650,4.505]],["title/modules/PluginListModule.html",[64,0.793,377,2.43]],["body/modules/PluginListModule.html",[3,0.195,4,0.195,9,0.171,25,0.017,32,0.557,33,0.502,34,0.195,35,0.744,36,1.435,45,2.41,61,0.011,62,0.014,63,0.011,64,1.383,66,1.728,67,1.728,68,1.905,69,1.905,70,2.644,71,1.905,78,2.41,79,1.905,80,1.905,86,2.535,118,0.195,120,1.197,144,1.321,150,2.187,348,3.591,377,4.692,405,4.364,641,4.592,651,4.058,652,4.058,653,4.71,654,4.71]],["title/interfaces/PluginMap.html",[115,0.375,137,2.26]],["body/interfaces/PluginMap.html",[3,0.176,4,0.176,9,0.154,25,0.018,26,1.605,30,0.985,32,0.521,33,0.453,34,0.284,61,0.01,62,0.013,63,0.01,100,0.397,115,0.661,116,2.147,117,1.237,118,0.231,119,2.752,121,3.273,122,3.273,123,2.397,124,2.996,125,1.863,126,2.983,127,1.355,128,3.751,130,2.56,131,3.273,132,2.56,133,2.545,134,1.419,135,2.251,136,1.813,137,3.36,138,2.787,139,2.395,140,2.498,141,2.983,142,2.395,143,2.983,256,2.983,655,4.249]],["title/injectables/PluginMarker.html",[273,2.43,424,0.757]],["body/injectables/PluginMarker.html",[3,0.192,4,0.192,9,0.168,21,0.659,25,0.018,26,1.124,30,1.368,32,0.638,33,0.493,34,0.192,35,0.731,61,0.011,62,0.013,63,0.011,94,5.079,95,3.566,99,1.782,100,0.638,116,2.27,118,0.269,124,2.904,125,1.969,127,1.88,128,4.115,133,2.497,134,1.546,201,2.187,220,2.163,273,3.819,424,1.19,425,1.782,656,3.988,657,4.629,658,4.629,659,4.629]],["title/injectables/PluginParagraph.html",[408,2.26,424,0.757]],["body/injectables/PluginParagraph.html",[3,0.187,4,0.187,9,0.163,21,0.641,25,0.018,30,1.045,32,0.632,33,0.48,34,0.187,35,1.012,61,0.01,62,0.013,63,0.01,100,0.542,116,2.231,118,0.24,120,1.145,124,3.195,125,1.935,127,2.043,130,3.491,133,2.466,134,1.505,159,1.935,201,2.129,209,3.2,220,2.35,402,2.918,408,3.491,424,1.169,425,1.734,660,3.881,661,4.505,662,3.881]],["title/modules/PluginParagraphModule.html",[64,0.793,376,2.43]],["body/modules/PluginParagraphModule.html",[3,0.195,4,0.195,9,0.171,25,0.017,32,0.557,33,0.502,34,0.195,35,0.744,36,1.435,45,2.41,61,0.011,62,0.014,63,0.011,64,1.383,66,1.728,67,1.728,68,1.905,69,1.905,70,2.644,71,1.905,78,2.41,79,1.905,80,1.905,86,2.535,118,0.195,120,1.197,144,1.321,159,1.991,348,3.591,376,4.692,408,4.364,641,4.592,663,4.058,664,4.058,665,4.71,666,4.71]],["title/injectables/PluginService.html",[378,2.26,424,0.757]],["body/injectables/PluginService.html",[3,0.085,4,0.085,9,0.074,16,1.435,21,0.291,22,0.868,24,1.095,25,0.018,26,1.579,27,2.086,28,1.841,30,1.322,32,0.305,33,0.218,34,0.085,35,0.736,42,2.134,45,1.32,61,0.005,62,0.007,63,0.005,64,0.691,100,0.305,116,1.793,118,0.245,120,1.036,123,2.349,124,2.717,125,1.091,127,1.485,128,1.232,135,3.385,136,1.187,137,2.457,139,2.87,142,3.06,149,1.32,188,1.967,193,1.841,205,2.863,209,3.301,211,2.115,212,1.32,217,2.544,220,2.239,221,2.642,291,3.017,298,1.967,316,4.001,329,1.967,378,1.967,389,2.515,402,1.324,424,0.659,425,0.787,434,5.836,446,5.604,447,2.813,465,2.813,467,1.761,471,1.761,473,4.012,474,2.813,579,4.181,586,4.012,588,1.761,667,1.761,668,3.266,669,4.657,670,3.266,671,4.078,672,3.266,673,4.657,674,2.044,675,3.266,676,4.657,677,4.657,678,3.266,679,3.266,680,3.266,681,3.266,682,3.266,683,5.698,684,2.044,685,3.266,686,2.044,687,3.266,688,3.266,689,2.044,690,3.266,691,2.044,692,2.813,693,3.266,694,2.044,695,2.044,696,3.266,697,3.266,698,2.044,699,2.044,700,2.044,701,2.044,702,2.044,703,4.657,704,2.044,705,2.044,706,2.044,707,2.044,708,2.044,709,2.044,710,4.657,711,3.266,712,3.266,713,2.044]],["title/injectables/PluginSimpleImage.html",[424,0.757,714,2.43]],["body/injectables/PluginSimpleImage.html",[3,0.199,4,0.199,9,0.174,21,0.682,25,0.017,30,1.112,32,0.647,33,0.511,34,0.199,35,0.757,61,0.011,62,0.014,63,0.011,96,5.193,97,4.13,98,1.846,99,1.846,100,0.616,116,2.321,118,0.25,124,2.942,125,2.013,127,1.529,133,2.538,134,1.601,201,2.265,220,1.759,424,1.216,425,1.846,527,4.233,714,3.905,715,4.643,716,4.13,717,4.794]],["title/components/SidebarComponent.html",[0,1.376,55,1.772]],["body/components/SidebarComponent.html",[0,2.236,1,1.922,2,2.708,3,0.168,4,0.168,5,2.451,6,1.424,7,2.451,8,2.451,9,0.147,10,3.265,13,2.293,14,4.119,15,2.033,17,3.265,19,3.265,25,0.017,29,2.955,30,0.944,32,0.38,33,0.433,34,0.168,35,0.643,36,1.24,37,3.055,38,2.561,39,1.822,40,3.916,41,2.451,42,2.036,43,2.451,44,1.822,45,1.645,46,2.451,47,1.922,48,2.451,49,2.451,50,1.922,51,2.451,52,1.822,53,1.493,54,2.451,55,3.071,56,3.672,57,2.293,58,1.822,59,2.293,60,2.451,61,0.009,62,0.012,63,0.009,100,0.507,101,3.511,212,2.464,718,4.669,719,3.505,720,6.095,721,5.42,722,4.068]],["title/modules/SimpleImageModule.html",[64,0.793,506,2.43]],["body/modules/SimpleImageModule.html",[3,0.204,4,0.204,9,0.178,25,0.017,32,0.572,33,0.524,34,0.204,35,0.777,36,1.498,61,0.011,62,0.014,63,0.011,64,1.04,66,1.804,67,1.804,68,1.988,69,1.988,70,2.697,71,1.988,78,2.476,79,1.988,80,1.988,86,2.604,100,0.46,118,0.204,263,4.236,506,4.743,527,3.453,714,4.743,715,3.788,723,4.236,724,4.236,725,4.917,726,4.917]],["title/interfaces/Tag.html",[115,0.375,535,2.43]],["body/interfaces/Tag.html",[3,0.199,4,0.199,9,0.174,21,0.685,22,1.606,24,0.971,25,0.017,26,1.682,32,0.565,34,0.273,53,1.765,61,0.011,62,0.014,63,0.011,99,1.852,100,0.565,115,0.66,117,1.401,118,0.199,136,2.016,144,1.338,158,1.765,165,1.607,191,3.372,224,3.117,226,3.117,533,3.379,534,3.64,535,4.278,536,2.712]],["title/coverage.html",[727,4.42]],["body/coverage.html",[0,2.041,1,1.022,9,0.078,10,3.509,11,1.863,12,1.863,15,1.08,24,0.436,25,0.018,39,0.968,44,0.968,47,1.022,50,1.022,52,0.968,53,0.793,55,1.022,58,0.968,61,0.005,62,0.008,63,0.005,98,0.833,100,0.653,107,1.666,115,0.708,116,0.833,118,0.316,119,3.39,129,3.26,135,1.146,137,1.303,139,1.219,140,0.968,142,1.219,144,0.479,145,2.783,150,0.793,157,0.92,159,0.722,161,0.92,162,0.833,166,0.92,168,0.92,173,1.401,176,1.401,177,3.114,194,1.303,195,1.146,196,1.219,198,1.863,199,1.666,200,1.863,215,1.146,253,4.09,261,1.401,267,1.401,273,1.401,276,1.863,277,1.863,287,1.863,288,1.863,326,1.863,327,1.863,378,1.303,379,2.972,380,2.972,391,1.666,403,1.303,405,1.303,408,1.303,410,1.518,412,2.398,424,1.352,426,1.863,507,1.666,520,1.666,522,1.666,527,1.518,533,2.972,534,1.303,535,1.401,537,1.863,538,1.863,544,1.303,569,1.303,570,1.146,575,1.863,581,1.401,584,1.863,626,2.631,632,1.863,635,1.863,643,1.863,645,1.863,649,1.863,656,1.863,660,1.863,667,1.863,714,1.401,715,1.666,716,1.863,718,1.863,719,1.863,727,1.863,728,2.162,729,2.162,730,2.162,731,1.863,732,6.215,733,1.863,734,7.473,735,6.924,736,1.863,737,1.863,738,6.697,739,1.863,740,2.942,741,1.863,742,1.863,743,2.162,744,1.863,745,2.162,746,2.162,747,2.162,748,2.162,749,2.162,750,2.162,751,2.162,752,4.232,753,2.162,754,2.162,755,2.162,756,4.232,757,4.232,758,5.563,759,5.563,760,2.162,761,2.162,762,2.162,763,2.162]],["title/dependencies.html",[67,1.657,764,3.127]],["body/dependencies.html",[25,0.018,29,1.974,33,0.52,61,0.011,62,0.014,63,0.011,67,1.791,88,5.252,89,4.696,91,3.76,103,3.76,134,1.631,235,3.76,237,3.162,394,3.76,411,4.206,515,3.76,637,4.206,662,4.206,765,4.882,766,7.495,767,4.882,768,4.882,769,4.882,770,4.882,771,4.882,772,4.882,773,4.882,774,4.882,775,4.882,776,4.882,777,4.882,778,4.882]],["title/miscellaneous/functions.html",[779,1.884,780,3.89]],["body/miscellaneous/functions.html",[21,0.764,25,0.016,61,0.012,62,0.015,63,0.012,100,0.502,118,0.268,135,3.424,220,2.371,379,3.77,380,4.869,410,4.869,412,5.251,742,4.626,779,3.235,780,4.626,781,5.568,782,5.369]],["title/index.html",[21,0.445,783,3.127,784,3.127]],["body/index.html",[0,1.894,2,2.58,15,2.58,25,0.014,29,2.088,39,2.312,61,0.012,62,0.014,63,0.012,99,1.988,100,0.59,101,3.344,283,4.431,290,4.861,291,3.344,298,3.111,302,3.977,329,3.111,349,3.977,381,4.448,382,4.448,785,6.311,786,5.163,787,5.163,788,5.163,789,5.163,790,5.163,791,5.163,792,5.163,793,6.816,794,5.163,795,5.163,796,5.163,797,5.163,798,5.163,799,5.163,800,5.163]],["title/modules.html",[66,1.883]],["body/modules.html",[25,0.014,61,0.011,62,0.014,63,0.011,65,3.343,66,1.747,76,2.868,77,3.084,89,5.905,170,3.084,258,3.343,264,3.084,270,3.084,375,3.084,376,3.084,377,3.084,505,3.084,506,3.084,801,7.665,802,7.665,803,7.665]],["title/overview.html",[804,4.42]],["body/overview.html",[1,2.948,2,1.305,25,0.018,36,0.796,39,1.17,44,2.794,47,2.253,50,2.948,52,2.794,55,2.253,58,2.794,61,0.006,62,0.009,63,0.006,64,0.553,65,4.904,66,0.959,67,0.959,68,1.056,69,1.056,70,1.056,71,1.056,72,2.251,73,2.251,74,2.251,75,2.251,76,4.479,77,4.798,78,1.598,79,1.056,80,1.056,117,0.761,170,3.699,171,2.251,172,2.251,173,3.089,215,2.526,258,3.733,259,2.251,260,2.251,261,3.089,264,3.699,265,2.251,266,2.251,267,3.089,270,3.699,271,2.251,272,2.251,273,3.089,370,2.251,371,2.251,372,2.251,373,2.251,374,2.251,375,4.26,376,4.412,377,3.699,378,2.873,403,2.873,405,2.873,408,2.873,425,1.006,501,2.251,502,2.251,503,2.251,504,2.251,505,4.524,506,3.699,544,2.873,567,2.251,568,2.251,569,2.873,570,2.526,638,2.251,639,2.251,651,2.251,652,2.251,663,2.251,664,2.251,714,3.089,723,2.251,724,2.251,804,2.251,805,2.612,806,2.612,807,2.612,808,2.612,809,2.612]],["title/miscellaneous/typealiases.html",[779,1.884,810,4.515]],["body/miscellaneous/typealiases.html",[6,1.879,21,0.764,24,1.084,25,0.017,26,1.304,61,0.012,62,0.015,63,0.012,118,0.222,144,1.189,145,2.405,149,2.171,150,1.97,151,3.054,152,2.537,153,2.537,157,2.283,161,2.283,166,2.283,168,2.283,169,3.054,779,3.235,811,5.369,812,6.463]],["title/miscellaneous/variables.html",[779,1.884,813,3.89]],["body/miscellaneous/variables.html",[0,2.064,10,3.672,15,1.742,21,0.496,24,1.294,25,0.018,27,3.167,28,3.987,29,2.687,44,2.185,52,1.562,61,0.008,62,0.011,63,0.008,100,0.661,101,3.16,118,0.252,119,2.259,139,2.75,140,2.52,141,2.449,142,2.75,143,2.449,177,2.259,186,2.259,195,1.848,196,2.75,197,2.449,379,2.449,380,3.426,391,3.758,410,2.449,507,2.686,522,3.758,692,4.203,731,3.005,733,4.203,736,3.005,737,4.203,739,3.005,740,5.25,741,3.005,744,4.203,779,2.101,781,4.203,813,3.005,814,3.487,815,3.487,816,3.487,817,3.487,818,4.878,819,3.487,820,4.878,821,6.413,822,4.878,823,4.878,824,4.878,825,4.878,826,3.487,827,3.487,828,4.878,829,3.487,830,3.487]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":807,"title":{},"body":{"overview.html":{}}}],["1.3.4",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":253,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":255,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["12",{"_index":805,"title":{},"body":{"overview.html":{}}}],["13",{"_index":808,"title":{},"body":{"overview.html":{}}}],["19",{"_index":809,"title":{},"body":{"overview.html":{}}}],["1em",{"_index":323,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.13.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":319,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3/3",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["4/11",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":806,"title":{},"body":{"overview.html":{}}}],["6.3.3",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":794,"title":{},"body":{"index.html":{}}}],["7.1.5",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":307,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["accessors",{"_index":211,"title":{},"body":{"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["actual_component",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["add",{"_index":586,"title":{},"body":{"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["add(name",{"_index":682,"title":{},"body":{"injectables/PluginService.html":{}}}],["add(page",{"_index":594,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":587,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":596,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":566,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["adds",{"_index":445,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["aftercontentinit",{"_index":202,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["afterviewinit",{"_index":339,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["aliases",{"_index":811,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":324,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["allow",{"_index":126,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["angular",{"_index":283,"title":{},"body":{"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["angular/animations",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":394,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":235,"title":{},"body":{"components/EditorPageComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["api",{"_index":453,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["api](https://editorjs.io/api",{"_index":489,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":383,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["app.component.css",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":291,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"index.html":{}}}],["appmodule",{"_index":65,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":465,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["arrayadd",{"_index":611,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":623,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":612,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":624,"title":{},"body":{"injectables/PagesService.html":{}}}],["attach",{"_index":331,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["attributes",{"_index":292,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["autofocus",{"_index":180,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["autofocused",{"_index":184,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["available",{"_index":149,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{},"miscellaneous/typealiases.html":{}}}],["await",{"_index":494,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["bar",{"_index":278,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":280,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":279,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":277,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:8",{"_index":281,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":146,"title":{},"body":{"interfaces/Block.html":{}}}],["baseplugin",{"_index":116,"title":{"interfaces/BasePlugin.html":{}},"body":{"interfaces/BasePlugin.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["basic",{"_index":156,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["behaviorsubject",{"_index":469,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["between",{"_index":559,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["block",{"_index":144,"title":{"interfaces/Block.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["block.id",{"_index":625,"title":{},"body":{"injectables/PagesService.html":{}}}],["blocks",{"_index":165,"title":{},"body":{"interfaces/Block.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{}}}],["blocks(holder",{"_index":438,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["blocksmap",{"_index":428,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["blocktypes",{"_index":169,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":183,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["bootstrap",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["border",{"_index":318,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["browse",{"_index":803,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["changelog",{"_index":797,"title":{},"body":{"index.html":{}}}],["changes",{"_index":354,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks",{"_index":363,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":366,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":364,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["class",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CodeModule.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{}}}],["cluster_appmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_codemodule",{"_index":171,"title":{},"body":{"modules/CodeModule.html":{},"overview.html":{}}}],["cluster_codemodule_providers",{"_index":172,"title":{},"body":{"modules/CodeModule.html":{},"overview.html":{}}}],["cluster_imagemodule",{"_index":259,"title":{},"body":{"modules/ImageModule.html":{},"overview.html":{}}}],["cluster_imagemodule_providers",{"_index":260,"title":{},"body":{"modules/ImageModule.html":{},"overview.html":{}}}],["cluster_linkmodule",{"_index":265,"title":{},"body":{"modules/LinkModule.html":{},"overview.html":{}}}],["cluster_linkmodule_providers",{"_index":266,"title":{},"body":{"modules/LinkModule.html":{},"overview.html":{}}}],["cluster_markermodule",{"_index":271,"title":{},"body":{"modules/MarkerModule.html":{},"overview.html":{}}}],["cluster_markermodule_providers",{"_index":272,"title":{},"body":{"modules/MarkerModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":501,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":502,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":504,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":503,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":370,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":371,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":373,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_imports",{"_index":372,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":374,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":567,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":568,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":638,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":639,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":651,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":652,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":663,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":664,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_simpleimagemodule",{"_index":723,"title":{},"body":{"modules/SimpleImageModule.html":{},"overview.html":{}}}],["cluster_simpleimagemodule_providers",{"_index":724,"title":{},"body":{"modules/SimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":659,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/PluginCode.html":{}}}],["code.plugin",{"_index":175,"title":{},"body":{"modules/CodeModule.html":{}}}],["codemodule",{"_index":170,"title":{"modules/CodeModule.html":{}},"body":{"modules/CodeModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["collection",{"_index":381,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["combinelatest",{"_index":236,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["combinelatest([this.form",{"_index":245,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["commonmodule",{"_index":393,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component/app.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["component/app.component.ts",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["component/app.component.ts:9",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["component/editorjs.component",{"_index":397,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["component/editorjs.component.ts",{"_index":288,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["component/editorjs.component.ts:23",{"_index":306,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:29",{"_index":303,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:35",{"_index":301,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:42",{"_index":309,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/sidebar.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":719,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["component/sidebar.component.ts:8",{"_index":722,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component_template",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{}}}],["components/app",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["components/nav",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["config",{"_index":193,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginService.html":{}}}],["config.editorjs.autofocus",{"_index":417,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.data",{"_index":423,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.holder",{"_index":419,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.initialblock",{"_index":421,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":178,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["configurations",{"_index":693,"title":{},"body":{"injectables/PluginService.html":{}}}],["const",{"_index":138,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["constructor",{"_index":212,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{}}}],["constructor(config",{"_index":433,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":344,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(fb",{"_index":213,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["constructor(initialplugins",{"_index":674,"title":{},"body":{"injectables/PluginService.html":{}}}],["constructor(pagesservice",{"_index":543,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["constructor(private",{"_index":241,"title":{},"body":{"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["constructor(protected",{"_index":582,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":317,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"injectables/PagesService.html":{}}}],["constructor(query",{"_index":592,"title":{},"body":{"injectables/PagesService.html":{}}}],["constructor(service",{"_index":300,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":577,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["container",{"_index":539,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":521,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":541,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":540,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":538,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:11",{"_index":545,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:14",{"_index":547,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/page",{"_index":520,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["containers/editor",{"_index":517,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/editorjs",{"_index":396,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/page",{"_index":519,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["control",{"_index":332,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["core",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":727,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":294,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{}}}],["createeditor",{"_index":430,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createeditor(holder",{"_index":440,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["creates",{"_index":444,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["createtools",{"_index":412,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creation",{"_index":185,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["cy.get('h1",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darkgray",{"_index":321,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":147,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["date.now",{"_index":484,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["datorama/akita",{"_index":536,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{}}}],["declarations",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["decorators",{"_index":304,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["default",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PluginService.html":{},"miscellaneous/variables.html":{}}}],["default_config",{"_index":391,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_config.editorjs.autofocus",{"_index":418,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["default_config.editorjs.holder",{"_index":420,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["default_config.editorjs.initialblock",{"_index":422,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["defaultconfig",{"_index":410,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"interfaces/Image.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{}}}],["defines",{"_index":121,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["delete",{"_index":588,"title":{},"body":{"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["delete(pageid",{"_index":599,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["demo.module.ts",{"_index":508,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes",{"_index":523,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/pages",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/editor",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/editor/:id",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/editor",{"_index":198,"title":{},"body":{"components/EditorPageComponent.html":{},"coverage.html":{}}}],["demo/src/lib/containers/page",{"_index":537,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["demo/src/lib/ngx",{"_index":507,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/plugins/code/code.module.ts",{"_index":174,"title":{},"body":{"modules/CodeModule.html":{}}}],["demo/src/lib/plugins/code/code.plugin.ts",{"_index":632,"title":{},"body":{"injectables/PluginCode.html":{},"coverage.html":{}}}],["demo/src/lib/plugins/code/code.plugin.ts:8",{"_index":633,"title":{},"body":{"injectables/PluginCode.html":{}}}],["demo/src/lib/plugins/image/image.module.ts",{"_index":262,"title":{},"body":{"modules/ImageModule.html":{}}}],["demo/src/lib/plugins/image/image.plugin.ts",{"_index":643,"title":{},"body":{"injectables/PluginImage.html":{},"coverage.html":{}}}],["demo/src/lib/plugins/image/image.plugin.ts:8",{"_index":644,"title":{},"body":{"injectables/PluginImage.html":{}}}],["demo/src/lib/plugins/link/link.module.ts",{"_index":268,"title":{},"body":{"modules/LinkModule.html":{}}}],["demo/src/lib/plugins/link/link.plugin.ts",{"_index":645,"title":{},"body":{"injectables/PluginLink.html":{},"coverage.html":{}}}],["demo/src/lib/plugins/link/link.plugin.ts:8",{"_index":646,"title":{},"body":{"injectables/PluginLink.html":{}}}],["demo/src/lib/plugins/marker/marker.module.ts",{"_index":274,"title":{},"body":{"modules/MarkerModule.html":{}}}],["demo/src/lib/plugins/marker/marker.plugin.ts",{"_index":656,"title":{},"body":{"injectables/PluginMarker.html":{},"coverage.html":{}}}],["demo/src/lib/plugins/marker/marker.plugin.ts:12",{"_index":658,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["demo/src/lib/plugins/marker/marker.plugin.ts:8",{"_index":657,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["demo/src/lib/plugins/simple",{"_index":715,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/SimpleImageModule.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":533,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":571,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":575,"title":{},"body":{"injectables/PagesQuery.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":578,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":584,"title":{},"body":{"injectables/PagesService.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":593,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":609,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":610,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":595,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":607,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":600,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":605,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":597,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":603,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":626,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":631,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demos",{"_index":284,"title":{},"body":{"components/NavBarComponent.html":{}}}],["dependencies",{"_index":67,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":120,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{}}}],["destroy",{"_index":431,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroy(holder",{"_index":448,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["details",{"_index":456,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["developed",{"_index":786,"title":{},"body":{"index.html":{}}}],["directive",{"_index":39,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":312,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["docs",{"_index":454,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["documentation",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["dynamic",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/support/app.po.ts",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":561,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["editor",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{}}}],["editorconfig",{"_index":468,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["editorjs'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs(options",{"_index":488,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs.component.html",{"_index":297,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":296,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":313,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":327,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs.directive.ts:26",{"_index":346,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:28",{"_index":356,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:33",{"_index":358,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:37",{"_index":360,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:41",{"_index":353,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:47",{"_index":350,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:51",{"_index":355,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.module.ts",{"_index":380,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs.module.ts:63",{"_index":388,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":486,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/code",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":134,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"dependencies.html":{}}}],["editorjs/header",{"_index":637,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{}}}],["editorjs/image",{"_index":513,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":648,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":515,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginMarker.html":{}}}],["editorjs/paragraph",{"_index":662,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{}}}],["editorjs/simple",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/PluginSimpleImage.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":287,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":326,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs/src/lib/ngx",{"_index":379,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/plugins/header/header.module.ts",{"_index":640,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["editorjs/src/lib/plugins/header/header.plugin.ts",{"_index":635,"title":{},"body":{"injectables/PluginHeader.html":{},"coverage.html":{}}}],["editorjs/src/lib/plugins/header/header.plugin.ts:14",{"_index":636,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["editorjs/src/lib/plugins/list/list.module.ts",{"_index":653,"title":{},"body":{"modules/PluginListModule.html":{}}}],["editorjs/src/lib/plugins/list/list.plugin.ts",{"_index":649,"title":{},"body":{"injectables/PluginList.html":{},"coverage.html":{}}}],["editorjs/src/lib/plugins/list/list.plugin.ts:14",{"_index":650,"title":{},"body":{"injectables/PluginList.html":{}}}],["editorjs/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":665,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":660,"title":{},"body":{"injectables/PluginParagraph.html":{},"coverage.html":{}}}],["editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":661,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":426,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:102",{"_index":449,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:15",{"_index":466,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:16",{"_index":437,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:31",{"_index":442,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:58",{"_index":451,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:67",{"_index":464,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:83",{"_index":459,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:94",{"_index":439,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":667,"title":{},"body":{"injectables/PluginService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:15",{"_index":675,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:35",{"_index":684,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:43",{"_index":691,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:52",{"_index":686,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:59",{"_index":695,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:67",{"_index":689,"title":{},"body":{"injectables/PluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":145,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:62",{"_index":257,"title":{},"body":{"interfaces/Image.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":177,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/config.ts:4",{"_index":500,"title":{},"body":{"interfaces/NgxEditorJSTools.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":119,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:4",{"_index":634,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs/src/lib/types/plugins.ts:8",{"_index":655,"title":{},"body":{"interfaces/PluginMap.html":{}}}],["editorjs](http://editorjs.io",{"_index":413,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjscode",{"_index":511,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["editorjsconfig",{"_index":176,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{}}}],["editorjsimage",{"_index":512,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["editorjslist",{"_index":514,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["editorjsmarker",{"_index":516,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["editormap",{"_index":429,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorpagecomponent",{"_index":44,"title":{"components/EditorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["editorservice",{"_index":340,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["el",{"_index":347,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSTools.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["elementref",{"_index":345,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["entity",{"_index":622,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":627,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":628,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":509,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["environment",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":295,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["exclude",{"_index":473,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["exclude.includes(key",{"_index":708,"title":{},"body":{"injectables/PluginService.html":{}}}],["excludetools",{"_index":441,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{}}}],["exports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["extends",{"_index":158,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{}}}],["false",{"_index":186,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":218,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["feature",{"_index":384,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{}}}],["features",{"_index":382,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["filter(([key",{"_index":707,"title":{},"body":{"injectables/PluginService.html":{}}}],["finaltools",{"_index":713,"title":{},"body":{"injectables/PluginService.html":{}}}],["folder",{"_index":798,"title":{},"body":{"index.html":{}}}],["foreach(([key",{"_index":701,"title":{},"body":{"injectables/PluginService.html":{}}}],["form",{"_index":206,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["formbuilder",{"_index":214,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["formgroup",{"_index":233,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["forroot",{"_index":386,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(tools",{"_index":387,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["full",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":129,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{}}}],["functions",{"_index":780,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":564,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["generated",{"_index":799,"title":{},"body":{"index.html":{}}}],["get(name",{"_index":685,"title":{},"body":{"injectables/PluginService.html":{}}}],["geteditor",{"_index":357,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(holder",{"_index":450,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getform",{"_index":231,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["getgreeting",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getpages",{"_index":546,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getplugins",{"_index":694,"title":{},"body":{"injectables/PluginService.html":{}}}],["gets",{"_index":460,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getservice",{"_index":359,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getting",{"_index":783,"title":{"index.html":{}},"body":{}}],["gettools",{"_index":672,"title":{},"body":{"injectables/PluginService.html":{}}}],["gettools(exclude",{"_index":688,"title":{},"body":{"injectables/PluginService.html":{}}}],["github",{"_index":285,"title":{},"body":{"components/NavBarComponent.html":{}}}],["go",{"_index":553,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["gt",{"_index":554,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["guid",{"_index":613,"title":{},"body":{"injectables/PagesService.html":{}}}],["header",{"_index":162,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{}}}],["header.plugin",{"_index":642,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":166,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":254,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["hold",{"_index":192,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["holder",{"_index":181,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["host",{"_index":251,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["httpclient",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["https://tinynodes",{"_index":790,"title":{},"body":{"index.html":{}}}],["id",{"_index":191,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["identifier",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":98,"title":{"interfaces/Image.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["image.module",{"_index":528,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["image.module.ts",{"_index":725,"title":{},"body":{"modules/SimpleImageModule.html":{}}}],["image.plugin",{"_index":263,"title":{},"body":{"modules/ImageModule.html":{},"modules/SimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":716,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["image.plugin.ts:8",{"_index":717,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":527,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/SimpleImageModule.html":{},"coverage.html":{}}}],["imageblock",{"_index":168,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imagemodule",{"_index":258,"title":{"modules/ImageModule.html":{}},"body":{"modules/ImageModule.html":{},"modules.html":{},"overview.html":{}}}],["implements",{"_index":201,"title":{},"body":{"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{}}}],["imports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["include",{"_index":475,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["including",{"_index":795,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":256,"title":{},"body":{"interfaces/Image.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{}}}],["information",{"_index":249,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["initial",{"_index":188,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PluginService.html":{}}}],["initialblock",{"_index":182,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["initialized",{"_index":676,"title":{},"body":{"injectables/PluginService.html":{}}}],["initialplugins",{"_index":139,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":467,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["inject(initialplugins",{"_index":698,"title":{},"body":{"injectables/PluginService.html":{}}}],["inject(ngx_editorjs_config",{"_index":472,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(userplugins",{"_index":699,"title":{},"body":{"injectables/PluginService.html":{}}}],["injectable",{"_index":424,"title":{"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["injectables",{"_index":425,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":669,"title":{},"body":{"injectables/PluginService.html":{}}}],["injectiontoken",{"_index":132,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["injectiontoken('initialplugins",{"_index":141,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":197,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":143,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":310,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["inputs",{"_index":299,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["instance",{"_index":179,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["instances",{"_index":447,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["interface",{"_index":115,"title":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"interfaces/Tag.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["interfaces",{"_index":117,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"interfaces/Tag.html":{},"overview.html":{}}}],["internal",{"_index":641,"title":{},"body":{"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{}}}],["items",{"_index":155,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":411,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"dependencies.html":{}}}],["key",{"_index":136,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"interfaces/Tag.html":{}}}],["keys",{"_index":474,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["left",{"_index":325,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CodeModule.html":{},"components/EditorPageComponent.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["level",{"_index":163,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["libraries",{"_index":792,"title":{},"body":{"index.html":{}}}],["libs/.../blocks.ts",{"_index":812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../index.ts",{"_index":782,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":781,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":118,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":647,"title":{},"body":{"injectables/PluginLink.html":{}}}],["link.plugin",{"_index":269,"title":{},"body":{"modules/LinkModule.html":{}}}],["linkmodule",{"_index":264,"title":{"modules/LinkModule.html":{}},"body":{"modules/LinkModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["list",{"_index":150,"title":{"interfaces/List.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["list.plugin",{"_index":654,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":157,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["liststyle",{"_index":151,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["loader",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":563,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["main",{"_index":328,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["makes",{"_index":670,"title":{},"body":{"injectables/PluginService.html":{}}}],["manager",{"_index":551,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map",{"_index":446,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["markdown",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":532,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/PluginMarker.html":{}}}],["marker.plugin",{"_index":275,"title":{},"body":{"modules/MarkerModule.html":{}}}],["markermodule",{"_index":270,"title":{"modules/MarkerModule.html":{}},"body":{"modules/MarkerModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["matching",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merged",{"_index":679,"title":{},"body":{"injectables/PluginService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":443,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methods",{"_index":125,"title":{},"body":{"interfaces/BasePlugin.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{}}}],["miscellaneous",{"_index":779,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":64,"title":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["modules",{"_index":66,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":392,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["more",{"_index":455,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginService.html":{},"components/SidebarComponent.html":{}}}],["nav",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbarcomponent",{"_index":47,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["new",{"_index":140,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpage",{"_index":616,"title":{},"body":{"injectables/PagesService.html":{}}}],["ngaftercontentinit",{"_index":208,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["ngafterviewinit",{"_index":341,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{}}}],["ngonchanges",{"_index":342,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":351,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":343,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngx",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngx.firebaseapp.com",{"_index":791,"title":{},"body":{"index.html":{}}}],["ngx_editorjs_config",{"_index":196,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["ngxeditorjscomponent",{"_index":50,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxeditorjsconfig",{"_index":195,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemomodule",{"_index":77,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":522,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":58,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxeditorjsmodule",{"_index":76,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["ngxeditorjsservice",{"_index":215,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{}}}],["ngxeditorjstools",{"_index":194,"title":{"interfaces/NgxEditorJSTools.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{},"coverage.html":{}}}],["ngzone",{"_index":436,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["note",{"_index":557,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["npm",{"_index":286,"title":{},"body":{"components/NavBarComponent.html":{}}}],["null",{"_index":704,"title":{},"body":{"injectables/PluginService.html":{}}}],["number",{"_index":164,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["nx",{"_index":800,"title":{},"body":{"index.html":{}}}],["object",{"_index":692,"title":{},"body":{"injectables/PluginService.html":{},"miscellaneous/variables.html":{}}}],["object.entries",{"_index":700,"title":{},"body":{"injectables/PluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":706,"title":{},"body":{"injectables/PluginService.html":{}}}],["observable",{"_index":229,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["onchanges",{"_index":338,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ondestroy",{"_index":337,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["onsubmit",{"_index":210,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["optional",{"_index":123,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{}}}],["options",{"_index":479,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data",{"_index":482,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":152,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["output",{"_index":189,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["outputdata",{"_index":187,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{}}}],["over",{"_index":427,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["overview",{"_index":804,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":710,"title":{},"body":{"injectables/PluginService.html":{}}}],["package",{"_index":764,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":53,"title":{"interfaces/Page.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["page'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":518,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["page.component.html",{"_index":204,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.scss",{"_index":203,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts",{"_index":200,"title":{},"body":{"components/EditorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":216,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:15",{"_index":228,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:20",{"_index":230,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:22",{"_index":232,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:26",{"_index":219,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:30",{"_index":222,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.id",{"_index":618,"title":{},"body":{"injectables/PagesService.html":{}}}],["page/editor",{"_index":199,"title":{},"body":{"components/EditorPageComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{}}}],["pageblock",{"_index":534,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["pagecontainercomponent",{"_index":52,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pagedata",{"_index":207,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["pageid",{"_index":598,"title":{},"body":{"injectables/PagesService.html":{}}}],["pages",{"_index":542,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":580,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":572,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":573,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":574,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pagesquery",{"_index":569,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesservice",{"_index":544,"title":{"injectables/PagesService.html":{}},"body":{"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesstate",{"_index":581,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["pagesstore",{"_index":570,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":505,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":226,"title":{},"body":{"components/EditorPageComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":224,"title":{},"body":{"components/EditorPageComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["paragraph",{"_index":159,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{}}}],["paragraph.plugin",{"_index":666,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":161,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":316,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["parameters",{"_index":217,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["parentmodule",{"_index":415,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["passed",{"_index":678,"title":{},"body":{"injectables/PluginService.html":{}}}],["path",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["persist",{"_index":558,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["piper",{"_index":788,"title":{},"body":{"index.html":{}}}],["please",{"_index":556,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["plugin",{"_index":124,"title":{},"body":{"interfaces/BasePlugin.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{}}}],["plugin.plugin",{"_index":712,"title":{},"body":{"injectables/PluginService.html":{}}}],["plugin.shortcut",{"_index":711,"title":{},"body":{"injectables/PluginService.html":{}}}],["plugincode",{"_index":173,"title":{"injectables/PluginCode.html":{}},"body":{"modules/CodeModule.html":{},"injectables/PluginCode.html":{},"coverage.html":{},"overview.html":{}}}],["pluginconfig",{"_index":135,"title":{"interfaces/PluginConfig.html":{}},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluginheader",{"_index":403,"title":{"injectables/PluginHeader.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginheadermodule",{"_index":375,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginimage",{"_index":261,"title":{"injectables/PluginImage.html":{}},"body":{"modules/ImageModule.html":{},"injectables/PluginImage.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlink",{"_index":267,"title":{"injectables/PluginLink.html":{}},"body":{"modules/LinkModule.html":{},"injectables/PluginLink.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlist",{"_index":405,"title":{"injectables/PluginList.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlistmodule",{"_index":377,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginmap",{"_index":137,"title":{"interfaces/PluginMap.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"coverage.html":{}}}],["pluginmarker",{"_index":273,"title":{"injectables/PluginMarker.html":{}},"body":{"modules/MarkerModule.html":{},"injectables/PluginMarker.html":{},"coverage.html":{},"overview.html":{}}}],["pluginparagraph",{"_index":408,"title":{"injectables/PluginParagraph.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginparagraphmodule",{"_index":376,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{}}}],["plugins",{"_index":434,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["plugins.service",{"_index":470,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugins/code/code.module",{"_index":525,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["plugins/header/header.module",{"_index":398,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/header/header.plugin",{"_index":404,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/link/link.module",{"_index":529,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["plugins/list/list.module",{"_index":399,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/list/list.plugin",{"_index":406,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/marker/marker.module",{"_index":530,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":407,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/paragraph/paragraph.plugin",{"_index":409,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["plugins/simple",{"_index":526,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["pluginservice",{"_index":378,"title":{"injectables/PluginService.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"coverage.html":{},"overview.html":{}}}],["pluginsimpleimage",{"_index":714,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/SimpleImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginsmap",{"_index":671,"title":{},"body":{"injectables/PluginService.html":{}}}],["private",{"_index":205,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["produced",{"_index":681,"title":{},"body":{"injectables/PluginService.html":{}}}],["production",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":793,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{},"interfaces/Tag.html":{}}}],["property",{"_index":336,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":348,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{}}}],["provided",{"_index":289,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["providedin",{"_index":471,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["providers",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["provides",{"_index":329,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{},"index.html":{}}}],["public",{"_index":209,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{}}}],["query",{"_index":585,"title":{},"body":{"injectables/PagesService.html":{}}}],["queryentity",{"_index":576,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["radius",{"_index":322,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactiveformsmodule",{"_index":510,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["readme",{"_index":796,"title":{},"body":{"index.html":{}}}],["readme.md",{"_index":555,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["readonly",{"_index":242,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["redirectto",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":709,"title":{},"body":{"injectables/PluginService.html":{}}}],["refresh",{"_index":560,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["registered",{"_index":696,"title":{},"body":{"injectables/PluginService.html":{}}}],["remove",{"_index":673,"title":{},"body":{"injectables/PluginService.html":{}}}],["remove(name",{"_index":690,"title":{},"body":{"injectables/PluginService.html":{}}}],["removeblock",{"_index":589,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":602,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":562,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["removes",{"_index":601,"title":{},"body":{"injectables/PagesService.html":{}}}],["render",{"_index":190,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PagesService.html":{}}}],["repo",{"_index":785,"title":{},"body":{"index.html":{}}}],["required",{"_index":122,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["reset",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}],["result",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"interfaces/BasePlugin.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{}}}],["returned",{"_index":131,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{}}}],["returns",{"_index":220,"title":{},"body":{"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["root'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["route",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":531,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["runs",{"_index":789,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":237,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":240,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["save",{"_index":250,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["save(holder",{"_index":458,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["see",{"_index":452,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["service",{"_index":298,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{},"index.html":{}}}],["services",{"_index":334,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["services/editorjs.service",{"_index":314,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":400,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["servuce",{"_index":697,"title":{},"body":{"injectables/PluginService.html":{}}}],["set",{"_index":302,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["setblocks",{"_index":590,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":604,"title":{},"body":{"injectables/PagesService.html":{}}}],["settings",{"_index":130,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginParagraph.html":{}}}],["shortcut",{"_index":128,"title":{},"body":{"interfaces/BasePlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginService.html":{}}}],["sidebar",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":721,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":720,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":55,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simple",{"_index":726,"title":{},"body":{"modules/SimpleImageModule.html":{}}}],["simplechanges",{"_index":352,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/PluginSimpleImage.html":{}}}],["simpleimagemodule",{"_index":506,"title":{"modules/SimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/SimpleImageModule.html":{},"modules.html":{},"overview.html":{}}}],["single",{"_index":687,"title":{},"body":{"injectables/PluginService.html":{}}}],["singleton",{"_index":668,"title":{},"body":{"injectables/PluginService.html":{}}}],["skipself",{"_index":395,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["solid",{"_index":320,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"modules/CodeModule.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MarkerModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginService.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"modules/SimpleImageModule.html":{},"interfaces/Tag.html":{}}}],["started",{"_index":784,"title":{"index.html":{}},"body":{}}],["statements",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":385,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["store",{"_index":579,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["store/pages/pages.models",{"_index":548,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":524,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":549,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":629,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":680,"title":{},"body":{"injectables/PluginService.html":{}}}],["string",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxEditorJSTools.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginService.html":{},"interfaces/Tag.html":{},"miscellaneous/typealiases.html":{}}}],["style",{"_index":154,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subject",{"_index":462,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["super",{"_index":630,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(store",{"_index":583,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["support",{"_index":801,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":802,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":565,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["switchmap",{"_index":238,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["switchmap(([form",{"_index":248,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["t",{"_index":148,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["table",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":535,"title":{"interfaces/Tag.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["tane",{"_index":787,"title":{},"body":{"index.html":{}}}],["tap",{"_index":239,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["text",{"_index":160,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["this.add(key",{"_index":702,"title":{},"body":{"injectables/PluginService.html":{}}}],["this.blocks",{"_index":368,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocksmap.get(holder).asobservable",{"_index":497,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.blocksmap.get(holder).next(outputdata.blocks",{"_index":496,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":480,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.destroy(holder",{"_index":477,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editor.blocks",{"_index":246,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.editormap.delete(holder",{"_index":499,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder",{"_index":490,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder).blocks.clear",{"_index":491,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder).blocks.render",{"_index":492,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder).destroy",{"_index":498,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.get(holder).saver.save",{"_index":495,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.has(holder",{"_index":476,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap.set(holder",{"_index":487,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":362,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.createeditor(this.el.nativeelement.id",{"_index":367,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.destroy(this.el.nativeelement.id",{"_index":369,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.geteditor(this.el.nativeelement.id",{"_index":361,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.update(this.el.nativeelement.id",{"_index":365,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.fb.array",{"_index":227,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.fb.group",{"_index":223,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.form",{"_index":243,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.pagedata",{"_index":244,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.pagedata$.pipe",{"_index":247,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.pages",{"_index":614,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":550,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.plugins.gettools(excludetools",{"_index":481,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":705,"title":{},"body":{"injectables/PluginService.html":{}}}],["this.pluginsmap[name",{"_index":703,"title":{},"body":{"injectables/PluginService.html":{}}}],["this.query.selectall",{"_index":615,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.add(newpage",{"_index":617,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":620,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update(pageid",{"_index":621,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":619,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.zone.run",{"_index":478,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":493,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["time",{"_index":483,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["tinynode",{"_index":282,"title":{},"body":{"components/NavBarComponent.html":{}}}],["tinynodes",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/ngx",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginMarker.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/app.routes.ts",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/components/app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/nav",{"_index":276,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":718,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{}}}],["tool",{"_index":683,"title":{},"body":{"injectables/PluginService.html":{}}}],["tools",{"_index":389,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{}}}],["toolsettings",{"_index":133,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSTools.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"interfaces/PluginMap.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["true",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginService.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":810,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/blocks",{"_index":315,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":401,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":402,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginHeader.html":{},"injectables/PluginList.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginService.html":{}}}],["undefined",{"_index":457,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["underlying",{"_index":308,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["unordered",{"_index":153,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["update",{"_index":432,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["update(holder",{"_index":463,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":608,"title":{},"body":{"injectables/PagesService.html":{}}}],["updates",{"_index":461,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["upsert",{"_index":591,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":606,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":167,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["use",{"_index":335,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["usefactory",{"_index":414,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["useful",{"_index":552,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["user",{"_index":677,"title":{},"body":{"injectables/PluginService.html":{}}}],["userplugins",{"_index":142,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginMap.html":{},"injectables/PluginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":416,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":290,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["validators",{"_index":234,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["validators.required",{"_index":225,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["value",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variable",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":813,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":485,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["via",{"_index":333,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{}}}],["viewchild",{"_index":311,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":305,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["void",{"_index":221,"title":{},"body":{"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginService.html":{}}}],["way",{"_index":330,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{}}}],["width",{"_index":252,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["within",{"_index":349,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["without",{"_index":293,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["yes",{"_index":390,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["zone",{"_index":435,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/CodeModule.html":{},"modules/ImageModule.html":{},"modules/LinkModule.html":{},"modules/MarkerModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/SimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/app-component/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-tinynodes'\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngx-tinynodes';\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport Code from '@editorjs/code';\nimport Marker from '@editorjs/marker';\nimport SimpleImage from '@editorjs/simple-image';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { AppComponent } from './components/app-component/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\n\n@NgModule({\n  declarations: [AppComponent, NavBarComponent, SidebarComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([]),\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient })\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\n\nexport interface PluginConfig {\n  [key: string]: BasePlugin;\n}\n\nexport interface PluginMap {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CodeModule.html":{"url":"modules/CodeModule.html","title":"module - CodeModule","body":"\n                   \n\n\n\n\n    Modules\n    CodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CodeModule\n\n\n\ncluster_CodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nCodeModule\n\nCodeModule\n\nCodeModule -->\n\nPluginCode->CodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/code/code.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n@NgModule({\n  providers: [PluginCode]\n})\nexport class CodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, ToolSettings } from '@editorjs/editorjs';\n\nexport interface NgxEditorJSTools {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n}\n\nexport interface NgxEditorJSConfig {\n  editorjs?: EditorJSConfig;\n}\n\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorPageComponent.html":{"url":"components/EditorPageComponent.html","title":"component - EditorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editor-page\n            \n\n            \n                styleUrls\n                editor-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                editor-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                form$\n                            \n                            \n                                    Private\n                                pageData$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, editor: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            form$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageTitle: ['', [Validators.required]],\n    pageTags: this.fb.array([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { combineLatest, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-editor-page',\n  templateUrl: 'editor-page.component.html',\n  styleUrls: ['editor-page.component.scss']\n})\nexport class EditorPageComponent implements AfterContentInit {\n  constructor(private readonly fb: FormBuilder, private readonly editor: NgxEditorJSService) {}\n\n  private form$ = this.fb.group({\n    pageTitle: ['', [Validators.required]],\n    pageTags: this.fb.array([])\n  });\n\n  private pageData$: Observable[]>)[]>;\n\n  get form(): FormGroup {\n    return this.form$;\n  }\n\n  ngAfterContentInit() {\n    // this.pageData$ = combineLatest([this.form$, this.editor.blocks]);\n  }\n\n  public onSubmit() {\n    this.pageData$.pipe(\n      switchMap(([form, blocks]) => {\n        return [];\n      })\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Page Information\n      \n      \n        \n          \n            Page Title\n            \n              \n            \n          \n          Save Page\n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    editor-page.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.page {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Page Information                                          Page Title                                                          Save Page                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Header data type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Header blocks\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Image data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:62\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Image blocks\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageModule.html":{"url":"modules/ImageModule.html","title":"module - ImageModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageModule\n\n\n\ncluster_ImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nImageModule\n\nImageModule\n\nImageModule -->\n\nPluginImage->ImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/image/image.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n@NgModule({\n  providers: [PluginImage]\n})\nexport class ImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LinkModule.html":{"url":"modules/LinkModule.html","title":"module - LinkModule","body":"\n                   \n\n\n\n\n    Modules\n    LinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LinkModule\n\n\n\ncluster_LinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nLinkModule\n\nLinkModule\n\nLinkModule -->\n\nPluginLink->LinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/link/link.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n@NgModule({\n  providers: [PluginLink]\n})\nexport class LinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a list type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a basic list block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MarkerModule.html":{"url":"modules/MarkerModule.html","title":"module - MarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    MarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MarkerModule\n\n\n\ncluster_MarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nMarkerModule\n\nMarkerModule\n\nMarkerModule -->\n\nPluginMarker->MarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class MarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  Tinynode Angular Demos\n\n  \n    \n      GitHub\n    \n    \n      NPM\n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tinynode Angular Demos            GitHub              NPM      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                holder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:29\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:23\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:42\n                            \n                        \n\n                \n                    \n                        The editor service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editor: NgxEditorJSDirective;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(public readonly service: NgxEditorJSService) {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.editor {\n  width: 100%;\n  height: 100vh;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:         EditorJSConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, ToolSettings } from '@editorjs/editorjs';\n\nexport interface NgxEditorJSTools {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n}\n\nexport interface NgxEditorJSConfig {\n  editorjs?: EditorJSConfig;\n}\n\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterViewInit\n            \n\n            \n                Example\n            \n            \n                        \n                            ```html\n * \n * ```\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                editorService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    service\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:26\n                            \n                        \n                \n                    \n                        Provide EditorJS blocks to render within the instance\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            editorService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:33\n                                \n                            \n                    \n                        \n                                Get the instance of the editor this directive has created\n\n\n                                \n                                    Returns :     EditorJS\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:37\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport EditorJS from '@editorjs/editorjs';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * ```html\n * \n * ```\n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterViewInit {\n  /**\n   * Provide `EditorJS` blocks to render within the instance\n   */\n  @Input()\n  blocks: Block[] = [];\n\n  constructor(private readonly el: ElementRef, public readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the instance of the editor this directive has created\n   */\n  get editor(): EditorJS {\n    return this.editorService.getEditor(this.el.nativeElement.id);\n  }\n\n  get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      this.editorService.update(this.el.nativeElement.id, changes.blocks.currentValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.editorService.createEditor(this.el.nativeElement.id, this.blocks);\n  }\n\n  ngOnDestroy() {\n    this.editorService.destroy(this.el.nativeElement.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorJSModule->PluginHeaderModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorJSModule -->\n\nPluginHeaderModule->NgxEditorJSModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorJSModule -->\n\nPluginListModule->NgxEditorJSModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorJSModule -->\n\nPluginParagraphModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginService\n\nPluginService\n\nNgxEditorJSModule -->\n\nPluginService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS\ninstance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application,\nthis will provide a default instance, import with NgxEditorJSModule in feature modules\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                        \n                            PluginService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(tools?: NgxEditorJSTools, config: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tools\n                                    \n                                                NgxEditorJSTools\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONFIG\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { NgxEditorJSComponent } from './containers/editorjs-component/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { PluginService } from './services/plugins.service';\nimport { NgxEditorJSConfig, NgxEditorJSTools, NGX_EDITORJS_CONFIG } from './types/config';\nimport { InitialPlugins, PluginConfig } from './types/plugins';\nimport { PluginHeader } from './plugins/header/header.plugin';\nimport { PluginList } from './plugins/list/list.plugin';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginParagraph } from './plugins/paragraph/paragraph.plugin';\n\nexport function defaultConfig() {\n  return {\n    editorjs: { autofocus: false, initialBlock: 'paragraph', holder: 'editor-js' }\n  };\n}\n\nexport function createTools(): PluginConfig {\n  return { header: new PluginHeader(), list: new PluginList(), paragraph: new PluginParagraph() };\n}\n\nconst DEFAULT_CONFIG: NgxEditorJSConfig = defaultConfig();\n\n/**\n * The ngx-editorjs module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io)\n * instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application,\n * this will provide a default instance, import with `NgxEditorJSModule` in feature modules\n */\n@NgModule({\n  imports: [CommonModule, PluginHeaderModule, PluginListModule, PluginParagraphModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSDirective],\n  exports: [\n    NgxEditorJSComponent,\n    NgxEditorJSDirective,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginParagraphModule\n  ],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: InitialPlugins,\n      useFactory: createTools\n    },\n    PluginService,\n    PluginHeaderModule\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  static forRoot(tools?: NgxEditorJSTools, config: NgxEditorJSConfig = DEFAULT_CONFIG): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useValue: {\n            editorjs: {\n              autofocus: config.editorjs.autofocus || DEFAULT_CONFIG.editorjs.autofocus,\n              holder: config.editorjs.holder || DEFAULT_CONFIG.editorjs.holder,\n              initialBlock: config.editorjs.initialBlock || DEFAULT_CONFIG.editorjs.initialBlock,\n              data: config.editorjs.data\n            }\n          }\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control over an editor instance within an application\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blocksMap\n                            \n                            \n                                    Private\n                                editorMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                blocks\n                            \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, plugins: PluginService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            blocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    blocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:94\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for this EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(holder: string, blocks?: Block[], excludeTools?: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:31\n                \n            \n\n\n            \n                \n                    This method creates an editor instance and adds it to a map of\ninstances using the holder as the key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional initial set of blocks to render in the editor\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:102\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:58\n                \n            \n\n\n            \n                \n                    Get the EditorJS instance\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorJS | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:83\n                \n            \n\n\n            \n                \n                    This methods gets the block data from the output data and updates\nthe service subject\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:67\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of blocks to render\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blocksMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editorMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Block } from '../types/blocks';\nimport { NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { PluginService } from './plugins.service';\n\n/**\n * The NgxEditorJSService provides control over an editor instance within an application\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  private editorMap = new Map();\n  private blocksMap = new Map>();\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly plugins: PluginService,\n    private zone: NgZone\n  ) {}\n\n  /**\n   * This method creates an editor instance and adds it to a map of\n   * instances using the holder as the key\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param exclude String array of keys to not include with this editor\n   */\n  public createEditor(holder: string, blocks?: Block[], excludeTools?: string[]) {\n    if (this.editorMap.has(holder)) {\n      this.destroy(holder);\n    }\n\n    this.zone.run(() => {\n      const options: EditorConfig = {\n        ...this.config.editorjs,\n        holder,\n        tools: this.plugins.getTools(excludeTools)\n      };\n      if (blocks) {\n        options.data = {\n          blocks,\n          time: Date.now(),\n          version: EditorJS.version\n        };\n      }\n      this.editorMap.set(holder, new EditorJS(options));\n    });\n  }\n\n  /**\n   * Get the EditorJS instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): EditorJS | undefined {\n    return this.editorMap.get(holder);\n  }\n\n  /**\n   * This method updates the blocks within the EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of blocks to render\n   */\n  public update(holder: string, blocks: Block[]) {\n    this.zone.run(() => {\n      this.editorMap.get(holder).blocks.clear();\n      this.editorMap.get(holder).blocks.render({\n        blocks,\n        time: Date.now(),\n        version: EditorJS.version\n      });\n    });\n  }\n\n  /**\n   * This methods gets the block data from the output data and updates\n   * the service subject\n   * @param holder The ID of the holder of the instance\n   */\n  public save(holder: string): void {\n    this.zone.run(async () => {\n      const outputData = await this.editorMap.get(holder).saver.save();\n      this.blocksMap.get(holder).next(outputData.blocks);\n    });\n  }\n\n  /**\n   * Get an observable of the blocks for this EditorJS instance\n   * @param holder The ID of the holder of the instance\n   */\n  public blocks(holder: string): Observable {\n    return this.blocksMap.get(holder).asObservable();\n  }\n\n  /**\n   * Destroy the EditorJS instance\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy(holder: string): void {\n    this.zone.run(() => {\n      if (this.editorMap.has(holder)) {\n        this.editorMap.get(holder).destroy();\n      }\n    });\n    this.editorMap.delete(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSTools.html":{"url":"interfaces/NgxEditorJSTools.html","title":"interface - NgxEditorJSTools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSTools\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/config.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, ToolSettings } from '@editorjs/editorjs';\n\nexport interface NgxEditorJSTools {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n}\n\nexport interface NgxEditorJSConfig {\n  editorjs?: EditorJSConfig;\n}\n\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nEditorPageComponent\n\nEditorPageComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nEditorPageComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nEditorPageComponent \n\nEditorPageComponent \n\nEditorPageComponent  -->\n\nNgxEditorjsDemoModule->EditorPageComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nCodeModule\n\nCodeModule\n\nNgxEditorjsDemoModule -->\n\nCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nLinkModule\n\nLinkModule\n\nNgxEditorjsDemoModule -->\n\nLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nMarkerModule\n\nMarkerModule\n\nNgxEditorjsDemoModule -->\n\nMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nSimpleImageModule\n\nSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditorPageComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CodeModule\n                        \n                        \n                            LinkModule\n                        \n                        \n                            MarkerModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            SimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EditorPageComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport EditorJSCode from '@editorjs/code';\nimport EditorJSImage from '@editorjs/image';\nimport EditorJSList from '@editorjs/list';\nimport EditorJSMarker from '@editorjs/marker';\nimport { NgxEditorJSModule, UserPlugins } from '@tinynodes/ngx-editorjs';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { EditorPageComponent } from './containers/editor-page/editor-page.component';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { CodeModule } from './plugins/code/code.module';\nimport { createTools } from './config';\nimport { SimpleImageModule } from './plugins/simple-image/simple-image.module';\nimport { LinkModule } from './plugins/link/link.module';\nimport { MarkerModule } from './plugins/marker/marker.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    CodeModule,\n    SimpleImageModule,\n    LinkModule,\n    MarkerModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  declarations: [EditorPageComponent, PageContainerComponent],\n  exports: [EditorPageComponent, PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\n\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss']\n})\nexport class PageContainerComponent {\n  constructor(private readonly pagesService: PagesService) {}\n\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Ngx-EditorJS Pages Manager - A useful demo of the\n        @tinynodes/ngx-editorjs\n        module\n      \n      \n        Go to Demo &gt;\n      \n\n      \n        \n          README.md\n        \n        \n      \n      \n        \n          Please note: Pages persist between refresh and can easily be removed from `localStorage`. A future feature to switch this off will be added.\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Ngx-EditorJS Pages Manager - A useful demo of the        @tinynodes/ngx-editorjs        module                    Go to Demo >                              README.md                                              Please note: Pages persist between refresh and can easily be removed from `localStorage`. A future feature to switch this off will be added.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pages$\n                            \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  type: string;\n  data: T;\n}\n\n/**\n * Available list styles\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Interface for a list type\n */\nexport interface List {\n  style: ListStyle;\n  items: T[];\n}\n\n/**\n * Interface for a basic list block\n */\nexport interface ListBlock extends Block> {\n  type: 'list';\n}\n\n/**\n * Interface for a paragraph type\n */\ninterface Paragraph {\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  type: 'paragraph';\n}\n\n/**\n * Header data type\n */\ninterface Header {\n  text: string;\n  level: number;\n}\n\n/**\n * Header blocks\n */\nexport interface HeaderBlock extends Block {\n  type: 'header';\n}\n\n/**\n * Image data\n */\nexport interface Image {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Image blocks\n */\nexport interface ImageBlock extends Block {\n  type: 'image';\n}\n\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/code/code.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/code/code.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Code from '@editorjs/code';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\n\nexport interface PluginConfig {\n  [key: string]: BasePlugin;\n}\n\nexport interface PluginMap {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Header from '@editorjs/header';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Internal module to provide the Header block editor\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * Internal module to provide the Header block editor\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/image/image.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/image/image.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/link/link.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/link/link.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Internal module to provide the List block editor\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * Internal module to provide the List block editor\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginMap.html":{"url":"interfaces/PluginMap.html","title":"interface - PluginMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\n\nexport interface PluginConfig {\n  [key: string]: BasePlugin;\n}\n\nexport interface PluginMap {\n  [key: string]: ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                            \n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \nshortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.plugin.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  plugin(): ToolSettings {\n    return Marker;\n  }\n\n  shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                Plugin class to return the EditorJS plugin\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * Plugin class to return the EditorJS plugin\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Internal module to provide the Paragraph block editor\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * Internal module to provide the Paragraph block editor\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginService.html":{"url":"injectables/PluginService.html","title":"injectable - PluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pluginsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialPlugins: PluginConfig, userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initialPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Default plugins produced by the module\n\n                                                        \n                                                \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(name: string, tool: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:35\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tool\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:52\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:67\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:43\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pluginsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PluginConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                        Object map of the plugin configurations\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:59\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this servuce\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { BasePlugin, InitialPlugins, PluginConfig, PluginMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of EditorJS\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(\n    @Inject(InitialPlugins) initialPlugins: PluginConfig,\n    @Optional() @Inject(UserPlugins) userPlugins: PluginConfig\n  ) {\n    Object.entries({ ...initialPlugins, ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param name\n   * @param tool\n   */\n  public add(name: string, tool: BasePlugin) {\n    this.pluginsMap[name] = tool;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param name\n   */\n  public remove(name: string) {\n    this.pluginsMap[name] = null;\n    delete this.pluginsMap[name];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(name: string) {\n    this.pluginsMap[name];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this servuce\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): PluginMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        let p;\n        if (plugin.shortcut) {\n          p = {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            }\n          };\n        } else {\n          p = { [key]: plugin.plugin() };\n        }\n        return { ...finalTools, ...p };\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/plugins/simple-image/simple-image.plugin.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      ngx-editorjs demo\n    \n  \n\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ngx-editorjs demo      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'ngx-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'ngx-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleImageModule.html":{"url":"modules/SimpleImageModule.html","title":"module - SimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimpleImageModule\n\n\n\ncluster_SimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nSimpleImageModule\n\nSimpleImageModule\n\nSimpleImageModule -->\n\nPluginSimpleImage->SimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class SimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/ngx-tinynodes-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/app.routes.ts\n            \n            variable\n            appRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/app-component/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/config/index.ts\n            \n            function\n            createTools\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts\n            \n            component\n            EditorPageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n            \n            component\n            PageContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n            \n            variable\n            ngxEditorjsDemoRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/code/code.plugin.ts\n            \n            injectable\n            PluginCode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/image/image.plugin.ts\n            \n            injectable\n            PluginImage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/link/link.plugin.ts\n            \n            injectable\n            PluginLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/marker/marker.plugin.ts\n            \n            injectable\n            PluginMarker\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/plugins/simple-image/simple-image.plugin.ts\n            \n            injectable\n            PluginSimpleImage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Page\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            PageBlock\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Tag\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n            \n            injectable\n            PagesQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n            \n            injectable\n            PagesService\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            injectable\n            PagesStore\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            interface\n            PagesState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n            \n            component\n            NgxEditorJSComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n            \n            directive\n            NgxEditorJSDirective\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            createTools\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            variable\n            DEFAULT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/plugins/header/header.plugin.ts\n            \n            injectable\n            PluginHeader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/plugins/list/list.plugin.ts\n            \n            injectable\n            PluginList\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/plugins/paragraph/paragraph.plugin.ts\n            \n            injectable\n            PluginParagraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n            \n            injectable\n            NgxEditorJSService\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/plugins.service.ts\n            \n            injectable\n            PluginService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Block\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Header\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            HeaderBlock\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Image\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ImageBlock\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            List\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ListBlock\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Paragraph\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ParagraphBlock\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            EditorJSConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            NgxEditorJSConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            NgxEditorJSTools\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            NGX_EDITORJS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            PluginMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            core-js : ^2.5.4\n        \n            ngx-markdown : ^7.1.5\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTools   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createTools   (libs/.../index.ts)\n                        \n                        \n                            defaultConfig   (libs/.../ngx-editorjs.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTools()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultConfig\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultConfig()\n                \n            \n\n\n\n\n        \n    \n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTools()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repo is a collection of Angular components developed by me, Tane Piper.\nThe application for this repo runs on https://tinynodes-ngx.firebaseapp.com/\nLibraries\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+ - including a directive, component and service\n\nReadme\nChangelog\nDemo\nProject Folder\n\nThis project was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CodeModule\n\n\n\ncluster_CodeModule_providers\n\n\n\ncluster_ImageModule\n\n\n\ncluster_ImageModule_providers\n\n\n\ncluster_LinkModule\n\n\n\ncluster_LinkModule_providers\n\n\n\ncluster_MarkerModule\n\n\n\ncluster_MarkerModule_providers\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_SimpleImageModule\n\n\n\ncluster_SimpleImageModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorJSModule->PluginHeaderModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\nPluginParagraphModule  -->\n\nNgxEditorJSModule->PluginParagraphModule \n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nEditorPageComponent \n\nEditorPageComponent \n\nEditorPageComponent  -->\n\nNgxEditorjsDemoModule->EditorPageComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nCodeModule\n\nCodeModule\n\nCodeModule -->\n\nPluginCode->CodeModule\n\n\n\nNgxEditorjsDemoModule -->\n\nCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nImageModule\n\nImageModule\n\nImageModule -->\n\nPluginImage->ImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nLinkModule\n\nLinkModule\n\nLinkModule -->\n\nPluginLink->LinkModule\n\n\n\nNgxEditorjsDemoModule -->\n\nLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nMarkerModule\n\nMarkerModule\n\nMarkerModule -->\n\nPluginMarker->MarkerModule\n\n\n\nNgxEditorjsDemoModule -->\n\nMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nEditorPageComponent\n\nEditorPageComponent\n\nNgxEditorjsDemoModule -->\n\nEditorPageComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nSimpleImageModule\n\nSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorJSModule -->\n\nPluginHeaderModule->NgxEditorJSModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorJSModule -->\n\nPluginListModule->NgxEditorJSModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorJSModule -->\n\nPluginParagraphModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginService\n\nPluginService\n\nNgxEditorJSModule -->\n\nPluginService->NgxEditorJSModule\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nSimpleImageModule -->\n\nPluginSimpleImage->SimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | Block | ListBlock\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app.routes.ts)\n                        \n                        \n                            DEFAULT_CONFIG   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'ngx-editorjs-demo',\n    pathMatch: 'full'\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSConfig\n\n                        \n                    \n                    \n                        \n                            Default value : defaultConfig()\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    redirectTo: 'ngx-editorjs-demo/pages',\n    pathMatch: 'full'\n  },\n  {\n    path: 'ngx-editorjs-demo/pages',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/pages/editor',\n    component: EditorPageComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/pages/editor/:id',\n    component: EditorPageComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
